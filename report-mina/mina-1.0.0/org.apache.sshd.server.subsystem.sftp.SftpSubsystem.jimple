public class org.apache.sshd.server.subsystem.sftp.SftpSubsystem extends org.apache.sshd.common.util.logging.AbstractLoggingBean implements org.apache.sshd.server.Command, java.lang.Runnable, org.apache.sshd.server.SessionAware, org.apache.sshd.common.file.FileSystemAware
{
    public static final java.lang.String MAX_OPEN_HANDLES_PER_SESSION;
    public static final int DEFAULT_MAX_OPEN_HANDLES;
    public static final java.lang.String FILE_HANDLE_SIZE;
    public static final int MIN_FILE_HANDLE_SIZE;
    public static final int DEFAULT_FILE_HANDLE_SIZE;
    public static final int MAX_FILE_HANDLE_SIZE;
    public static final java.lang.String MAX_FILE_HANDLE_RAND_ROUNDS;
    public static final int MIN_FILE_HANDLE_ROUNDS;
    public static final int DEFAULT_FILE_HANDLE_ROUNDS;
    public static final int MAX_FILE_HANDLE_ROUNDS;
    public static final java.lang.String SFTP_VERSION;
    public static final int LOWER_SFTP_IMPL;
    public static final int HIGHER_SFTP_IMPL;
    public static final java.lang.String ALL_SFTP_IMPL;
    public static final java.lang.String MAX_PACKET_LENGTH_PROP;
    public static final int DEFAULT_MAX_PACKET_LENGTH;
    public static final java.lang.String CLIENT_EXTENSIONS_PROP;
    public static final java.util.Set DEFAULT_SUPPORTED_CLIENT_EXTENSIONS;
    public static final java.lang.String OPENSSH_EXTENSIONS_PROP;
    public static final java.util.List DEFAULT_OPEN_SSH_EXTENSIONS;
    public static final java.util.List DEFAULT_OPEN_SSH_EXTENSIONS_NAMES;
    public static final java.util.List DEFAULT_UNIX_VIEW;
    public static final java.util.Map FILEATTRS_RESOLVERS;
    protected org.apache.sshd.server.ExitCallback callback;
    protected java.io.InputStream in;
    protected java.io.OutputStream out;
    protected java.io.OutputStream err;
    protected org.apache.sshd.server.Environment env;
    protected org.apache.sshd.common.random.Random randomizer;
    protected int fileHandleSize;
    protected int maxFileHandleRounds;
    protected org.apache.sshd.server.session.ServerSession session;
    protected boolean closed;
    protected java.util.concurrent.ExecutorService executors;
    protected boolean shutdownExecutor;
    protected java.util.concurrent.Future pendingFuture;
    protected byte[] workBuf;
    protected java.nio.file.FileSystem fileSystem;
    protected java.nio.file.Path defaultDir;
    protected long requestsCount;
    protected int version;
    protected final java.util.Map extensions;
    protected final java.util.Map handles;
    protected final org.apache.sshd.server.subsystem.sftp.UnsupportedAttributePolicy unsupportedAttributePolicy;

    public void <init>(java.util.concurrent.ExecutorService, boolean, org.apache.sshd.server.subsystem.sftp.UnsupportedAttributePolicy)
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        int $i0, varReplacer5025, varReplacer5026, varReplacer5028, varReplacer5029, varReplacer5031;
        byte[] $r1;
        java.nio.file.FileSystem $r2, $r3;
        java.lang.String $r4, $r13, varReplacer5027, varReplacer5030;
        java.lang.String[] $r5;
        java.nio.file.Path $r6;
        java.util.HashMap $r7, $r8;
        java.util.concurrent.ExecutorService r9, $r14;
        boolean z0;
        org.apache.sshd.server.subsystem.sftp.UnsupportedAttributePolicy r10;
        java.lang.IllegalArgumentException $r11;
        java.lang.Class $r12;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r9 := @parameter0: java.util.concurrent.ExecutorService;

        z0 := @parameter1: boolean;

        r10 := @parameter2: org.apache.sshd.server.subsystem.sftp.UnsupportedAttributePolicy;

        specialinvoke r0.<org.apache.sshd.common.util.logging.AbstractLoggingBean: void <init>()>();

        varReplacer5025 = 16;

        r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int fileHandleSize> = varReplacer5025;

        varReplacer5031 = 4;

        r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int maxFileHandleRounds> = varReplacer5031;

        varReplacer5028 = 16;

        varReplacer5029 = 4;

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>(varReplacer5028, varReplacer5029);

        $r1 = newarray (byte)[$i0];

        r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: byte[] workBuf> = $r1;

        $r2 = staticinvoke <java.nio.file.FileSystems: java.nio.file.FileSystem getDefault()>();

        r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.nio.file.FileSystem fileSystem> = $r2;

        $r3 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.nio.file.FileSystem fileSystem>;

        varReplacer5030 = "user.dir";

        $r4 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(varReplacer5030);

        $r5 = newarray (java.lang.String)[0];

        $r6 = virtualinvoke $r3.<java.nio.file.FileSystem: java.nio.file.Path getPath(java.lang.String,java.lang.String[])>($r4, $r5);

        r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.nio.file.Path defaultDir> = $r6;

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map extensions> = $r7;

        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>()>();

        r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map handles> = $r8;

        if r9 != null goto label1;

        $r12 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r13 = virtualinvoke $r12.<java.lang.Class: java.lang.String getSimpleName()>();

        $r14 = staticinvoke <org.apache.sshd.common.util.threads.ThreadUtils: java.util.concurrent.ExecutorService newSingleThreadExecutor(java.lang.String)>($r13);

        r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.concurrent.ExecutorService executors> = $r14;

        varReplacer5026 = 1;

        r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: boolean shutdownExecutor> = varReplacer5026;

        goto label2;

     label1:
        r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.concurrent.ExecutorService executors> = r9;

        r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: boolean shutdownExecutor> = z0;

     label2:
        if r10 != null goto label3;

        $r11 = new java.lang.IllegalArgumentException;

        varReplacer5027 = "No policy provided";

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(varReplacer5027);

        throw $r11;

     label3:
        r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.subsystem.sftp.UnsupportedAttributePolicy unsupportedAttributePolicy> = r10;

        return;
    }

    public int getVersion()
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        int $i0;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        $i0 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int version>;

        return $i0;
    }

    public final org.apache.sshd.server.subsystem.sftp.UnsupportedAttributePolicy getUnsupportedAttributePolicy()
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        org.apache.sshd.server.subsystem.sftp.UnsupportedAttributePolicy $r1;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        $r1 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.subsystem.sftp.UnsupportedAttributePolicy unsupportedAttributePolicy>;

        return $r1;
    }

    public void setSession(org.apache.sshd.server.session.ServerSession)
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        org.apache.sshd.server.session.ServerSession r1;
        org.apache.sshd.server.ServerFactoryManager r2;
        org.apache.sshd.common.Factory r3;
        java.lang.Object $r4;
        org.apache.sshd.common.random.Random $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, varReplacer5033, varReplacer5038;
        java.lang.Integer $r6, $r7, $r8, $r9;
        byte[] $r10, $r11;
        boolean $z0, $z1, $z2, $z3;
        java.lang.String varReplacer5032, varReplacer5034, varReplacer5035, varReplacer5036, varReplacer5037, varReplacer5039;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r1 := @parameter0: org.apache.sshd.server.session.ServerSession;

        r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession session> = r1;

        r2 = interfaceinvoke r1.<org.apache.sshd.server.session.ServerSession: org.apache.sshd.server.ServerFactoryManager getFactoryManager()>();

        r3 = interfaceinvoke r2.<org.apache.sshd.common.FactoryManager: org.apache.sshd.common.Factory getRandomFactory()>();

        $r4 = interfaceinvoke r3.<org.apache.sshd.common.Factory: java.lang.Object create()>();

        $r5 = (org.apache.sshd.common.random.Random) $r4;

        r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.common.random.Random randomizer> = $r5;

        varReplacer5032 = "sftp-handle-size";

        varReplacer5033 = 16;

        $i0 = staticinvoke <org.apache.sshd.common.FactoryManagerUtils: int getIntProperty(org.apache.sshd.common.FactoryManager,java.lang.String,int)>(r2, varReplacer5032, varReplacer5033);

        r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int fileHandleSize> = $i0;

        $i1 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int fileHandleSize>;

        if $i1 < 4 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $i2 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int fileHandleSize>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        varReplacer5035 = "File handle size too small: %d";

        staticinvoke <org.apache.sshd.common.util.ValidateUtils: void checkTrue(boolean,java.lang.String,java.lang.Object)>($z0, varReplacer5035, $r6);

        $i3 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int fileHandleSize>;

        if $i3 > 64 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        $i4 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int fileHandleSize>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        varReplacer5036 = "File handle size too big: %d";

        staticinvoke <org.apache.sshd.common.util.ValidateUtils: void checkTrue(boolean,java.lang.String,java.lang.Object)>($z1, varReplacer5036, $r7);

        varReplacer5037 = "sftp-handle-rand-max-rounds";

        varReplacer5038 = 4;

        $i5 = staticinvoke <org.apache.sshd.common.FactoryManagerUtils: int getIntProperty(org.apache.sshd.common.FactoryManager,java.lang.String,int)>(r2, varReplacer5037, varReplacer5038);

        r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int maxFileHandleRounds> = $i5;

        $i6 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int maxFileHandleRounds>;

        if $i6 < 1 goto label5;

        $z2 = 1;

        goto label6;

     label5:
        $z2 = 0;

     label6:
        $i7 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int maxFileHandleRounds>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        varReplacer5034 = "File handle rounds too small: %d";

        staticinvoke <org.apache.sshd.common.util.ValidateUtils: void checkTrue(boolean,java.lang.String,java.lang.Object)>($z2, varReplacer5034, $r8);

        $i8 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int maxFileHandleRounds>;

        if $i8 > 64 goto label7;

        $z3 = 1;

        goto label8;

     label7:
        $z3 = 0;

     label8:
        $i9 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int maxFileHandleRounds>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);

        varReplacer5039 = "File handle rounds too big: %d";

        staticinvoke <org.apache.sshd.common.util.ValidateUtils: void checkTrue(boolean,java.lang.String,java.lang.Object)>($z3, varReplacer5039, $r9);

        $r10 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: byte[] workBuf>;

        $i11 = lengthof $r10;

        $i10 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int fileHandleSize>;

        if $i11 >= $i10 goto label9;

        $i12 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int fileHandleSize>;

        $r11 = newarray (byte)[$i12];

        r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: byte[] workBuf> = $r11;

     label9:
        return;
    }

    public void setFileSystem(java.nio.file.FileSystem)
    {
        java.nio.file.FileSystem r0, $r2;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r1;
        java.lang.Iterable $r3, r5;
        java.lang.Object $r4, $r7, $r9;
        java.util.Iterator $r6, r8;
        boolean $z0;
        java.nio.file.Path $r10;
        java.lang.String varReplacer5040, varReplacer5041, varReplacer5042;

        nop;

        r1 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: java.nio.file.FileSystem;

        $r2 = r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.nio.file.FileSystem fileSystem>;

        if r0 == $r2 goto label1;

        r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.nio.file.FileSystem fileSystem> = r0;

        $r3 = virtualinvoke r0.<java.nio.file.FileSystem: java.lang.Iterable getRootDirectories()>();

        varReplacer5042 = "No root directories";

        $r4 = staticinvoke <org.apache.sshd.common.util.ValidateUtils: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>($r3, varReplacer5042);

        r5 = (java.lang.Iterable) $r4;

        $r6 = interfaceinvoke r5.<java.lang.Iterable: java.util.Iterator iterator()>();

        varReplacer5041 = "No roots iterator";

        $r7 = staticinvoke <org.apache.sshd.common.util.ValidateUtils: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>($r6, varReplacer5041);

        r8 = (java.util.Iterator) $r7;

        $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        varReplacer5040 = "No available root";

        staticinvoke <org.apache.sshd.common.util.ValidateUtils: void checkTrue(boolean,java.lang.String)>($z0, varReplacer5040);

        $r9 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (java.nio.file.Path) $r9;

        r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.nio.file.Path defaultDir> = $r10;

     label1:
        return;
    }

    public void setExitCallback(org.apache.sshd.server.ExitCallback)
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        org.apache.sshd.server.ExitCallback r1;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r1 := @parameter0: org.apache.sshd.server.ExitCallback;

        r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.ExitCallback callback> = r1;

        return;
    }

    public void setInputStream(java.io.InputStream)
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        java.io.InputStream r1;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r1 := @parameter0: java.io.InputStream;

        r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.io.InputStream in> = r1;

        return;
    }

    public void setOutputStream(java.io.OutputStream)
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        java.io.OutputStream r1;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r1 := @parameter0: java.io.OutputStream;

        r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.io.OutputStream out> = r1;

        return;
    }

    public void setErrorStream(java.io.OutputStream)
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        java.io.OutputStream r1;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r1 := @parameter0: java.io.OutputStream;

        r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.io.OutputStream err> = r1;

        return;
    }

    public void start(org.apache.sshd.server.Environment) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        org.apache.sshd.server.Environment r1;
        java.util.concurrent.ExecutorService $r2;
        java.util.concurrent.Future $r3;
        java.lang.RuntimeException $r4, r5;
        java.lang.StringBuilder $r6, $r8, $r11, $r12, $r14;
        org.slf4j.Logger $r7;
        java.lang.Class $r9;
        java.lang.String $r10, $r13, $r15, varReplacer5043, varReplacer5044;
        java.io.IOException $r16;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r1 := @parameter0: org.apache.sshd.server.Environment;

        r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.Environment env> = r1;

     label1:
        $r2 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.concurrent.ExecutorService executors>;

        $r3 = interfaceinvoke $r2.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>(r0);

        r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.concurrent.Future pendingFuture> = $r3;

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r5 = $r4;

        $r7 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        varReplacer5043 = "Failed (";

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5043);

        $r9 = virtualinvoke r5.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.String getSimpleName()>();

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        varReplacer5044 = ") to start command: ";

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5044);

        $r13 = virtualinvoke r5.<java.lang.RuntimeException: java.lang.String toString()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r7.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r15, r5);

        $r16 = new java.io.IOException;

        specialinvoke $r16.<java.io.IOException: void <init>(java.lang.Throwable)>(r5);

        throw $r16;

     label4:
        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void run()
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        byte[] $r1, $r2, $r7;
        int $i0, $i1, $i3, i4, $i5, $i6, i8, i9, varReplacer5045, varReplacer5050, varReplacer5054;
        java.io.InputStream $r3, $r6;
        java.lang.Integer $r4;
        long $l2, l7;
        java.lang.StringBuilder $r10, $r11, $r12, $r13, $r14, $r15, $r62;
        java.lang.String $r16, $r22, r23, $r25, $r42, $r43, r58, varReplacer5046, varReplacer5047, varReplacer5048, varReplacer5049, varReplacer5051, varReplacer5052, varReplacer5053, varReplacer5055, varReplacer5056;
        java.lang.Throwable $r17, r18, r28, $r35, $r38, $r51, r54, r60;
        java.lang.Object[] $r19, $r39;
        org.slf4j.Logger $r20, $r33, $r34, $r40, $r49, $r50, $r52;
        java.lang.Class $r21, $r41;
        org.apache.sshd.server.subsystem.sftp.Handle r24, r59;
        java.util.Iterator r26, r57;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.apache.sshd.server.ExitCallback $r27, $r44;
        java.lang.Object $r29, $r31, $r32, $r45, $r47, $r48;
        java.util.Map$Entry r30, r46;
        java.util.Map $r36, $r55;
        java.util.Set $r37, $r56;
        org.apache.sshd.common.util.buffer.ByteArrayBuffer r53, $r61;
        java.lang.IllegalArgumentException $r63;
        java.io.IOException $r64, $r65;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

     label01:
        l7 = 1L;

     label02:
        $r3 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.io.InputStream in>;

        $r2 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: byte[] workBuf>;

        $r1 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: byte[] workBuf>;

        $i0 = lengthof $r1;

        varReplacer5045 = 0;

        i8 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: int readInt(java.io.InputStream,byte[],int,int)>($r3, $r2, varReplacer5045, $i0);

        if i8 < 5 goto label03;

        $z5 = 1;

        goto label04;

     label03:
        $z5 = 0;

     label04:
        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i8);

        varReplacer5049 = "Bad length to read: %d";

        staticinvoke <org.apache.sshd.common.util.ValidateUtils: void checkTrue(boolean,java.lang.String,java.lang.Object)>($z5, varReplacer5049, $r4);

        $r61 = new org.apache.sshd.common.util.buffer.ByteArrayBuffer;

        $i1 = i8 + 4;

        specialinvoke $r61.<org.apache.sshd.common.util.buffer.ByteArrayBuffer: void <init>(int)>($i1);

        r53 = $r61;

        $l2 = (long) i8;

        virtualinvoke r53.<org.apache.sshd.common.util.buffer.Buffer: void putInt(long)>($l2);

        i9 = i8;

     label05:
        if i9 <= 0 goto label07;

        $r6 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.io.InputStream in>;

        $r7 = virtualinvoke r53.<org.apache.sshd.common.util.buffer.Buffer: byte[] array()>();

        $i3 = virtualinvoke r53.<org.apache.sshd.common.util.buffer.Buffer: int wpos()>();

        i4 = virtualinvoke $r6.<java.io.InputStream: int read(byte[],int,int)>($r7, $i3, i9);

        if i4 >= 0 goto label06;

        $r63 = new java.lang.IllegalArgumentException;

        $r62 = new java.lang.StringBuilder;

        specialinvoke $r62.<java.lang.StringBuilder: void <init>()>();

        varReplacer5046 = "Premature EOF at buffer #";

        $r10 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5046);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l7);

        varReplacer5051 = " while read length=";

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5051);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i8);

        varReplacer5052 = " and remain=";

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5052);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r63.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        throw $r63;

     label06:
        $i5 = virtualinvoke r53.<org.apache.sshd.common.util.buffer.Buffer: int wpos()>();

        $i6 = $i5 + i4;

        virtualinvoke r53.<org.apache.sshd.common.util.buffer.Buffer: void wpos(int)>($i6);

        i9 = i9 - i4;

        goto label05;

     label07:
        virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void process(org.apache.sshd.common.util.buffer.Buffer)>(r53);

        l7 = l7 + 1L;

        goto label02;

     label08:
        $r51 := @caughtexception;

        r54 = $r51;

        $z3 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: boolean closed>;

        if $z3 != 0 goto label09;

        $z4 = r54 instanceof java.io.EOFException;

        if $z4 != 0 goto label09;

        $r52 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        varReplacer5048 = "Exception caught in SFTP subsystem";

        interfaceinvoke $r52.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>(varReplacer5048, r54);

     label09:
        $r55 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map handles>;

        $r56 = interfaceinvoke $r55.<java.util.Map: java.util.Set entrySet()>();

        r57 = interfaceinvoke $r56.<java.util.Set: java.util.Iterator iterator()>();

     label10:
        $z6 = interfaceinvoke r57.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label15;

        $r45 = interfaceinvoke r57.<java.util.Iterator: java.lang.Object next()>();

        r46 = (java.util.Map$Entry) $r45;

        $r47 = interfaceinvoke r46.<java.util.Map$Entry: java.lang.Object getKey()>();

        r58 = (java.lang.String) $r47;

        $r48 = interfaceinvoke r46.<java.util.Map$Entry: java.lang.Object getValue()>();

        r59 = (org.apache.sshd.server.subsystem.sftp.Handle) $r48;

     label11:
        virtualinvoke r59.<org.apache.sshd.server.subsystem.sftp.Handle: void close()>();

        $r49 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z2 = interfaceinvoke $r49.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z2 == 0 goto label12;

        $r50 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        varReplacer5055 = "Closed pending handle {} [{}]";

        interfaceinvoke $r50.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>(varReplacer5055, r58, r59);

     label12:
        goto label14;

     label13:
        $r38 := @caughtexception;

        r60 = $r38;

        $r40 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r39 = newarray (java.lang.Object)[4];

        $r41 = virtualinvoke r60.<java.lang.Object: java.lang.Class getClass()>();

        $r42 = virtualinvoke $r41.<java.lang.Class: java.lang.String getSimpleName()>();

        $r39[0] = $r42;

        $r39[1] = r58;

        $r39[2] = r59;

        $r64 = (java.io.IOException) r60;

        $r43 = virtualinvoke $r64.<java.io.IOException: java.lang.String getMessage()>();

        $r39[3] = $r43;

        varReplacer5056 = "Failed ({}) to close handle={}[{}]: {}";

        interfaceinvoke $r40.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object[])>(varReplacer5056, $r39);

     label14:
        goto label10;

     label15:
        $r44 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.ExitCallback callback>;

        varReplacer5050 = 0;

        interfaceinvoke $r44.<org.apache.sshd.server.ExitCallback: void onExit(int)>(varReplacer5050);

        goto label24;

     label16:
        $r35 := @caughtexception;

        r28 = $r35;

     label17:
        $r36 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map handles>;

        $r37 = interfaceinvoke $r36.<java.util.Map: java.util.Set entrySet()>();

        r26 = interfaceinvoke $r37.<java.util.Set: java.util.Iterator iterator()>();

     label18:
        $z0 = interfaceinvoke r26.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label23;

        $r29 = interfaceinvoke r26.<java.util.Iterator: java.lang.Object next()>();

        r30 = (java.util.Map$Entry) $r29;

        $r31 = interfaceinvoke r30.<java.util.Map$Entry: java.lang.Object getKey()>();

        r23 = (java.lang.String) $r31;

        $r32 = interfaceinvoke r30.<java.util.Map$Entry: java.lang.Object getValue()>();

        r24 = (org.apache.sshd.server.subsystem.sftp.Handle) $r32;

     label19:
        virtualinvoke r24.<org.apache.sshd.server.subsystem.sftp.Handle: void close()>();

        $r33 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z1 = interfaceinvoke $r33.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z1 == 0 goto label20;

        $r34 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        varReplacer5047 = "Closed pending handle {} [{}]";

        interfaceinvoke $r34.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>(varReplacer5047, r23, r24);

     label20:
        goto label22;

     label21:
        $r17 := @caughtexception;

        r18 = $r17;

        $r20 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r19 = newarray (java.lang.Object)[4];

        $r21 = virtualinvoke r18.<java.lang.Object: java.lang.Class getClass()>();

        $r22 = virtualinvoke $r21.<java.lang.Class: java.lang.String getSimpleName()>();

        $r19[0] = $r22;

        $r19[1] = r23;

        $r19[2] = r24;

        $r65 = (java.io.IOException) r18;

        $r25 = virtualinvoke $r65.<java.io.IOException: java.lang.String getMessage()>();

        $r19[3] = $r25;

        varReplacer5053 = "Failed ({}) to close handle={}[{}]: {}";

        interfaceinvoke $r20.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object[])>(varReplacer5053, $r19);

     label22:
        goto label18;

     label23:
        $r27 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.ExitCallback callback>;

        varReplacer5054 = 0;

        interfaceinvoke $r27.<org.apache.sshd.server.ExitCallback: void onExit(int)>(varReplacer5054);

        throw r28;

     label24:
        return;

        catch java.lang.Throwable from label01 to label08 with label08;
        catch java.io.IOException from label11 to label12 with label13;
        catch java.lang.Throwable from label01 to label09 with label16;
        catch java.io.IOException from label19 to label20 with label21;
        catch java.lang.Throwable from label16 to label17 with label16;
    }

    protected void process(org.apache.sshd.common.util.buffer.Buffer) throws java.io.IOException
    {
        org.apache.sshd.common.util.buffer.Buffer r0, $r5;
        int i0, i1, i2, varReplacer5061;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r1;
        org.slf4j.Logger $r2, $r3, $r12;
        boolean $z0;
        long $l3, $l4;
        java.lang.Integer $r4, $r13, $r14, $r15;
        java.lang.StringBuilder $r6, $r7, $r8, $r9;
        java.lang.String $r10, varReplacer5057, varReplacer5058, varReplacer5059, varReplacer5060;
        java.lang.Object[] $r11;

        nop;

        r1 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i0 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: int getInt()>();

        i1 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: int getUByte()>();

        i2 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: int getInt()>();

        $r2 = r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r2.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label01;

        $r12 = r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r11 = newarray (java.lang.Object)[3];

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r11[0] = $r13;

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r11[1] = $r14;

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r11[2] = $r15;

        varReplacer5058 = "process(length={}, type={}, id={})";

        interfaceinvoke $r12.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(varReplacer5058, $r11);

     label01:
        lookupswitch(i1)
        {
            case 1: goto label02;
            case 3: goto label03;
            case 4: goto label04;
            case 5: goto label05;
            case 6: goto label06;
            case 7: goto label07;
            case 8: goto label08;
            case 9: goto label09;
            case 10: goto label10;
            case 11: goto label11;
            case 12: goto label12;
            case 13: goto label13;
            case 14: goto label14;
            case 15: goto label15;
            case 16: goto label16;
            case 17: goto label17;
            case 18: goto label18;
            case 19: goto label19;
            case 20: goto label20;
            case 21: goto label21;
            case 22: goto label22;
            case 23: goto label23;
            case 200: goto label24;
            default: goto label25;
        };

     label02:
        virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doInit(org.apache.sshd.common.util.buffer.Buffer,int)>(r0, i2);

        goto label26;

     label03:
        virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doOpen(org.apache.sshd.common.util.buffer.Buffer,int)>(r0, i2);

        goto label26;

     label04:
        virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doClose(org.apache.sshd.common.util.buffer.Buffer,int)>(r0, i2);

        goto label26;

     label05:
        virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doRead(org.apache.sshd.common.util.buffer.Buffer,int)>(r0, i2);

        goto label26;

     label06:
        virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doWrite(org.apache.sshd.common.util.buffer.Buffer,int)>(r0, i2);

        goto label26;

     label07:
        virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doLStat(org.apache.sshd.common.util.buffer.Buffer,int)>(r0, i2);

        goto label26;

     label08:
        virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doFStat(org.apache.sshd.common.util.buffer.Buffer,int)>(r0, i2);

        goto label26;

     label09:
        virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doSetStat(org.apache.sshd.common.util.buffer.Buffer,int)>(r0, i2);

        goto label26;

     label10:
        virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doFSetStat(org.apache.sshd.common.util.buffer.Buffer,int)>(r0, i2);

        goto label26;

     label11:
        virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doOpenDir(org.apache.sshd.common.util.buffer.Buffer,int)>(r0, i2);

        goto label26;

     label12:
        virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doReadDir(org.apache.sshd.common.util.buffer.Buffer,int)>(r0, i2);

        goto label26;

     label13:
        virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doRemove(org.apache.sshd.common.util.buffer.Buffer,int)>(r0, i2);

        goto label26;

     label14:
        virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doMakeDirectory(org.apache.sshd.common.util.buffer.Buffer,int)>(r0, i2);

        goto label26;

     label15:
        virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doRemoveDirectory(org.apache.sshd.common.util.buffer.Buffer,int)>(r0, i2);

        goto label26;

     label16:
        virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doRealPath(org.apache.sshd.common.util.buffer.Buffer,int)>(r0, i2);

        goto label26;

     label17:
        virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doStat(org.apache.sshd.common.util.buffer.Buffer,int)>(r0, i2);

        goto label26;

     label18:
        virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doRename(org.apache.sshd.common.util.buffer.Buffer,int)>(r0, i2);

        goto label26;

     label19:
        virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doReadLink(org.apache.sshd.common.util.buffer.Buffer,int)>(r0, i2);

        goto label26;

     label20:
        virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doSymLink(org.apache.sshd.common.util.buffer.Buffer,int)>(r0, i2);

        goto label26;

     label21:
        virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doLink(org.apache.sshd.common.util.buffer.Buffer,int)>(r0, i2);

        goto label26;

     label22:
        virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doBlock(org.apache.sshd.common.util.buffer.Buffer,int)>(r0, i2);

        goto label26;

     label23:
        virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doUnblock(org.apache.sshd.common.util.buffer.Buffer,int)>(r0, i2);

        goto label26;

     label24:
        virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doExtended(org.apache.sshd.common.util.buffer.Buffer,int)>(r0, i2);

        goto label26;

     label25:
        $r3 = r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        varReplacer5057 = "Unknown command type received: {}";

        interfaceinvoke $r3.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>(varReplacer5057, $r4);

        $r5 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        varReplacer5059 = "Command ";

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5059);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        varReplacer5060 = " is unsupported or not implemented";

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5060);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer5061 = 8;

        virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,int,java.lang.String)>($r5, i2, varReplacer5061, $r10);

     label26:
        if i1 == 1 goto label27;

        $l3 = r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: long requestsCount>;

        $l4 = $l3 + 1L;

        r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: long requestsCount> = $l4;

     label27:
        return;
    }

    protected void doExtended(org.apache.sshd.common.util.buffer.Buffer, int) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        org.apache.sshd.common.util.buffer.Buffer r1;
        int i0;
        java.lang.String $r2;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r1 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r1.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

        virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void executeExtendedCommand(org.apache.sshd.common.util.buffer.Buffer,int,java.lang.String)>(r1, i0, $r2);

        return;
    }

    protected void executeExtendedCommand(org.apache.sshd.common.util.buffer.Buffer, int, java.lang.String) throws java.io.IOException
    {
        java.lang.String r0, r1, $r10, varReplacer5062, varReplacer5063, varReplacer5064, varReplacer5065, varReplacer5066, varReplacer5067, varReplacer5068, varReplacer5069, varReplacer5070, varReplacer5071, varReplacer5072, varReplacer5073, varReplacer5074;
        int $i0, i1, varReplacer5075;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r2;
        org.apache.sshd.common.util.buffer.Buffer r3, $r5;
        org.slf4j.Logger $r4;
        java.lang.StringBuilder $r6, $r7, $r8, $r9;
        byte b2;

        nop;

        r2 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r3 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i1 := @parameter1: int;

        r0 := @parameter2: java.lang.String;

        r1 = r0;

        b2 = -1;

        $i0 = virtualinvoke r1.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case -1161240687: goto label02;
            case -1112167852: goto label07;
            case -1083777256: goto label01;
            case 190205634: goto label10;
            case 383309304: goto label06;
            case 1105918973: goto label05;
            case 1171377490: goto label09;
            case 1459012354: goto label04;
            case 1459079380: goto label03;
            case 1889522103: goto label08;
            default: goto label11;
        };

     label01:
        varReplacer5067 = "text-seek";

        $z7 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer5067);

        if $z7 == 0 goto label11;

        b2 = 0;

        goto label11;

     label02:
        varReplacer5068 = "version-select";

        $z9 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer5068);

        if $z9 == 0 goto label11;

        b2 = 1;

        goto label11;

     label03:
        varReplacer5065 = "copy-file";

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer5065);

        if $z1 == 0 goto label11;

        b2 = 2;

        goto label11;

     label04:
        varReplacer5064 = "copy-data";

        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer5064);

        if $z2 == 0 goto label11;

        b2 = 3;

        goto label11;

     label05:
        varReplacer5072 = "md5-hash";

        $z4 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer5072);

        if $z4 == 0 goto label11;

        b2 = 4;

        goto label11;

     label06:
        varReplacer5073 = "md5-hash-handle";

        $z5 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer5073);

        if $z5 == 0 goto label11;

        b2 = 5;

        goto label11;

     label07:
        varReplacer5069 = "check-file-handle";

        $z8 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer5069);

        if $z8 == 0 goto label11;

        b2 = 6;

        goto label11;

     label08:
        varReplacer5070 = "check-file-name";

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer5070);

        if $z0 == 0 goto label11;

        b2 = 7;

        goto label11;

     label09:
        varReplacer5066 = "fsync@openssh.com";

        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer5066);

        if $z3 == 0 goto label11;

        b2 = 8;

        goto label11;

     label10:
        varReplacer5074 = "space-available";

        $z6 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer5074);

        if $z6 == 0 goto label11;

        b2 = 9;

     label11:
        tableswitch(b2)
        {
            case 0: goto label12;
            case 1: goto label13;
            case 2: goto label14;
            case 3: goto label15;
            case 4: goto label16;
            case 5: goto label16;
            case 6: goto label17;
            case 7: goto label17;
            case 8: goto label18;
            case 9: goto label19;
            default: goto label20;
        };

     label12:
        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doTextSeek(org.apache.sshd.common.util.buffer.Buffer,int)>(r3, i1);

        goto label21;

     label13:
        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doVersionSelect(org.apache.sshd.common.util.buffer.Buffer,int)>(r3, i1);

        goto label21;

     label14:
        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doCopyFile(org.apache.sshd.common.util.buffer.Buffer,int)>(r3, i1);

        goto label21;

     label15:
        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doCopyData(org.apache.sshd.common.util.buffer.Buffer,int)>(r3, i1);

        goto label21;

     label16:
        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doMD5Hash(org.apache.sshd.common.util.buffer.Buffer,int,java.lang.String)>(r3, i1, r0);

        goto label21;

     label17:
        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doCheckFileHash(org.apache.sshd.common.util.buffer.Buffer,int,java.lang.String)>(r3, i1, r0);

        goto label21;

     label18:
        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doOpenSSHFsync(org.apache.sshd.common.util.buffer.Buffer,int)>(r3, i1);

        goto label21;

     label19:
        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doSpaceAvailable(org.apache.sshd.common.util.buffer.Buffer,int)>(r3, i1);

        goto label21;

     label20:
        $r4 = r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        varReplacer5063 = "Received unsupported SSH_FXP_EXTENDED({})";

        interfaceinvoke $r4.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>(varReplacer5063, r0);

        $r5 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r3);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        varReplacer5071 = "Command SSH_FXP_EXTENDED(";

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5071);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        varReplacer5062 = ") is unsupported or not implemented";

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5062);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer5075 = 8;

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,int,java.lang.String)>($r5, i1, varReplacer5075, $r10);

     label21:
        return;
    }

    protected void doSpaceAvailable(org.apache.sshd.common.util.buffer.Buffer, int) throws java.io.IOException
    {
        org.apache.sshd.common.util.buffer.Buffer r0, $r6;
        java.lang.String r1;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r2;
        int i0, varReplacer5076;
        org.apache.sshd.common.subsystem.sftp.extensions.SpaceAvailableExtensionInfo r3;
        long $l1;
        java.lang.Throwable $r4, r5;
        java.lang.Exception $r7;

        nop;

        r2 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i0 := @parameter1: int;

        r1 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

     label1:
        r3 = virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.common.subsystem.sftp.extensions.SpaceAvailableExtensionInfo doSpaceAvailable(int,java.lang.String)>(i0, r1);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r5 = $r4;

        $r6 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        $r7 = (java.lang.Exception) r5;

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,java.lang.Exception)>($r6, i0, $r7);

        return;

     label4:
        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void clear()>();

        varReplacer5076 = -55;

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putByte(byte)>(varReplacer5076);

        $l1 = (long) i0;

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putInt(long)>($l1);

        staticinvoke <org.apache.sshd.common.subsystem.sftp.extensions.SpaceAvailableExtensionInfo: void encode(org.apache.sshd.common.util.buffer.Buffer,org.apache.sshd.common.subsystem.sftp.extensions.SpaceAvailableExtensionInfo)>(r0, r3);

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void send(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    protected org.apache.sshd.common.subsystem.sftp.extensions.SpaceAvailableExtensionInfo doSpaceAvailable(int, java.lang.String) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        java.lang.String r1, $r10, $r11, varReplacer5077, varReplacer5078;
        java.nio.file.Path r2;
        org.slf4j.Logger $r3, $r5, $r8, $r13;
        boolean $z0, $z1;
        java.nio.file.FileStore r4;
        org.apache.sshd.common.subsystem.sftp.extensions.SpaceAvailableExtensionInfo $r6;
        java.lang.Object[] $r7, $r12;
        int i0;
        java.lang.Integer $r9, $r14;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.nio.file.Path resolveNormalizedLocation(java.lang.String)>(r1);

        $r3 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r3.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r13 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r12 = newarray (java.lang.Object)[3];

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r12[0] = $r14;

        $r12[1] = r1;

        $r12[2] = r2;

        varReplacer5078 = "doSpaceAvailable(id={}) path={}[{}]";

        interfaceinvoke $r13.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(varReplacer5078, $r12);

     label1:
        r4 = staticinvoke <java.nio.file.Files: java.nio.file.FileStore getFileStore(java.nio.file.Path)>(r2);

        $r5 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z1 = interfaceinvoke $r5.<org.slf4j.Logger: boolean isTraceEnabled()>();

        if $z1 == 0 goto label2;

        $r8 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r7 = newarray (java.lang.Object)[5];

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r7[0] = $r9;

        $r7[1] = r1;

        $r7[2] = r2;

        $r10 = virtualinvoke r4.<java.nio.file.FileStore: java.lang.String name()>();

        $r7[3] = $r10;

        $r11 = virtualinvoke r4.<java.nio.file.FileStore: java.lang.String type()>();

        $r7[4] = $r11;

        varReplacer5077 = "doSpaceAvailable(id={}) path={}[{}] - {}[{}]";

        interfaceinvoke $r8.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object[])>(varReplacer5077, $r7);

     label2:
        $r6 = new org.apache.sshd.common.subsystem.sftp.extensions.SpaceAvailableExtensionInfo;

        specialinvoke $r6.<org.apache.sshd.common.subsystem.sftp.extensions.SpaceAvailableExtensionInfo: void <init>(java.nio.file.FileStore)>(r4);

        return $r6;
    }

    protected void doTextSeek(org.apache.sshd.common.util.buffer.Buffer, int) throws java.io.IOException
    {
        org.apache.sshd.common.util.buffer.Buffer r0, $r3, $r6;
        java.lang.String r1, varReplacer5080;
        long l0;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r2;
        int i1, varReplacer5079;
        java.lang.Throwable $r4, r5;
        java.lang.Exception $r7;

        nop;

        r2 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i1 := @parameter1: int;

        r1 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

        l0 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: long getLong()>();

     label1:
        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doTextSeek(int,java.lang.String,long)>(i1, r1, l0);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r5 = $r4;

        $r6 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        $r7 = (java.lang.Exception) r5;

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,java.lang.Exception)>($r6, i1, $r7);

        return;

     label4:
        $r3 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        varReplacer5079 = 0;

        varReplacer5080 = "";

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,int,java.lang.String)>($r3, i1, varReplacer5079, varReplacer5080);

        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    protected void doTextSeek(int, java.lang.String, long) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        java.lang.String r1, $r13, varReplacer5081, varReplacer5082, varReplacer5083;
        java.util.Map $r2;
        java.lang.Object $r3;
        org.apache.sshd.server.subsystem.sftp.Handle r4, $r6;
        org.slf4j.Logger $r5, $r15;
        boolean $z0;
        org.apache.sshd.server.subsystem.sftp.FileHandle r7;
        java.lang.UnsupportedOperationException $r8;
        java.lang.StringBuilder $r9, $r10, $r11, $r12;
        java.lang.Object[] $r14;
        long l0;
        java.lang.Long $r16;
        int i1;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        i1 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        $r2 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map handles>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (org.apache.sshd.server.subsystem.sftp.Handle) $r3;

        $r5 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r5.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r15 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r14 = newarray (java.lang.Object)[3];

        $r14[0] = r1;

        $r14[1] = r4;

        $r16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r14[2] = $r16;

        varReplacer5082 = "Received SSH_FXP_EXTENDED(text-seek) (handle={}[{}], line={})";

        interfaceinvoke $r15.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(varReplacer5082, $r14);

     label1:
        $r6 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.subsystem.sftp.Handle validateHandle(java.lang.String,org.apache.sshd.server.subsystem.sftp.Handle,java.lang.Class)>(r1, r4, class "Lorg/apache/sshd/server/subsystem/sftp/FileHandle;");

        r7 = (org.apache.sshd.server.subsystem.sftp.FileHandle) $r6;

        $r8 = new java.lang.UnsupportedOperationException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        varReplacer5083 = "doTextSeek(";

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5083);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        varReplacer5081 = ")";

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5081);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r13);

        throw $r8;
    }

    protected void doOpenSSHFsync(org.apache.sshd.common.util.buffer.Buffer, int) throws java.io.IOException
    {
        org.apache.sshd.common.util.buffer.Buffer r0, $r3, $r6;
        java.lang.String r1, varReplacer5085;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r2;
        int i0, varReplacer5084;
        java.lang.Throwable $r4, r5;
        java.lang.Exception $r7;

        nop;

        r2 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i0 := @parameter1: int;

        r1 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

     label1:
        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doOpenSSHFsync(int,java.lang.String)>(i0, r1);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r5 = $r4;

        $r6 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        $r7 = (java.lang.Exception) r5;

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,java.lang.Exception)>($r6, i0, $r7);

        return;

     label4:
        $r3 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        varReplacer5084 = 0;

        varReplacer5085 = "";

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,int,java.lang.String)>($r3, i0, varReplacer5084, varReplacer5085);

        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    protected void doOpenSSHFsync(int, java.lang.String) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        java.lang.String r1, varReplacer5086;
        java.util.Map $r2;
        java.lang.Object $r3;
        org.apache.sshd.server.subsystem.sftp.Handle r4, $r6;
        org.slf4j.Logger $r5, $r9;
        boolean $z0;
        org.apache.sshd.server.subsystem.sftp.FileHandle r7;
        java.nio.channels.FileChannel r8;
        int i0, varReplacer5087;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r2 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map handles>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (org.apache.sshd.server.subsystem.sftp.Handle) $r3;

        $r5 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r5.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r9 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        varReplacer5086 = "doOpenSSHFsync({})[{}]";

        interfaceinvoke $r9.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>(varReplacer5086, r1, r4);

     label1:
        $r6 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.subsystem.sftp.Handle validateHandle(java.lang.String,org.apache.sshd.server.subsystem.sftp.Handle,java.lang.Class)>(r1, r4, class "Lorg/apache/sshd/server/subsystem/sftp/FileHandle;");

        r7 = (org.apache.sshd.server.subsystem.sftp.FileHandle) $r6;

        r8 = virtualinvoke r7.<org.apache.sshd.server.subsystem.sftp.FileHandle: java.nio.channels.FileChannel getFileChannel()>();

        varReplacer5087 = 0;

        virtualinvoke r8.<java.nio.channels.FileChannel: void force(boolean)>(varReplacer5087);

        return;
    }

    protected void doCheckFileHash(org.apache.sshd.common.util.buffer.Buffer, int, java.lang.String) throws java.io.IOException
    {
        org.apache.sshd.common.util.buffer.Buffer r0, $r9;
        java.lang.String r1, r2, r5, varReplacer5088;
        java.lang.String[] r3;
        long l0, l1, $l4;
        int i2, i3, varReplacer5089, varReplacer5090;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r4;
        java.util.List $r6;
        java.lang.Exception $r7, r8;

        nop;

        r4 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i3 := @parameter1: int;

        r5 := @parameter2: java.lang.String;

        r1 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

        r2 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

        varReplacer5089 = 44;

        r3 = staticinvoke <org.apache.sshd.common.util.GenericUtils: java.lang.String[] split(java.lang.String,char)>(r2, varReplacer5089);

        l0 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: long getLong()>();

        l1 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: long getLong()>();

        i2 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: int getInt()>();

     label1:
        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void clear()>();

        varReplacer5090 = -55;

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putByte(byte)>(varReplacer5090);

        $l4 = (long) i3;

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putInt(long)>($l4);

        varReplacer5088 = "check-file";

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putString(java.lang.String)>(varReplacer5088);

        $r6 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r3);

        virtualinvoke r4.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doCheckFileHash(int,java.lang.String,java.lang.String,java.util.Collection,long,long,int,org.apache.sshd.common.util.buffer.Buffer)>(i3, r5, r1, $r6, l0, l1, i2, r0);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        r8 = $r7;

        $r9 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        virtualinvoke r4.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,java.lang.Exception)>($r9, i3, r8);

        return;

     label4:
        virtualinvoke r4.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void send(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected void doCheckFileHash(int, java.lang.String, java.lang.String, java.util.Collection, long, long, int, org.apache.sshd.common.util.buffer.Buffer) throws java.lang.Exception
    {
        java.lang.String r0, $r1, r3, $r12, $r17, $r25, r31, varReplacer5092, varReplacer5093, varReplacer5094, varReplacer5095;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r2;
        java.nio.file.LinkOption[] $r4;
        java.util.Collection r5;
        java.lang.Object[] $r6;
        int i0, i3, $i4, i5, i6, varReplacer5091;
        long l1, l2;
        org.apache.sshd.common.util.buffer.Buffer r9;
        java.lang.Object $r10, $r19;
        java.nio.file.NotDirectoryException $r11;
        java.nio.file.FileSystemLoopException $r13;
        java.lang.StringBuilder $r14, $r15, $r16, $r22, $r23, $r24;
        java.util.Map $r18;
        org.apache.sshd.server.subsystem.sftp.Handle $r20, r26;
        java.nio.file.AccessDeniedException $r21;
        org.apache.sshd.server.subsystem.sftp.FileHandle r27;
        java.nio.file.Path r28;
        org.apache.sshd.common.digest.BuiltinDigests r29;
        java.util.Iterator r30;

        nop;

        r2 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r5 := @parameter3: java.util.Collection;

        l1 := @parameter4: long;

        l2 := @parameter5: long;

        i3 := @parameter6: int;

        r9 := @parameter7: org.apache.sshd.common.util.buffer.Buffer;

        $r1 = "check-file-handle";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);

        if $z0 == 0 goto label2;

        $r18 = r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map handles>;

        $r19 = interfaceinvoke $r18.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        r26 = (org.apache.sshd.server.subsystem.sftp.Handle) $r19;

        $r20 = virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.subsystem.sftp.Handle validateHandle(java.lang.String,org.apache.sshd.server.subsystem.sftp.Handle,java.lang.Class)>(r3, r26, class "Lorg/apache/sshd/server/subsystem/sftp/FileHandle;");

        r27 = (org.apache.sshd.server.subsystem.sftp.FileHandle) $r20;

        r28 = virtualinvoke r27.<org.apache.sshd.server.subsystem.sftp.FileHandle: java.nio.file.Path getFile()>();

        i5 = virtualinvoke r27.<org.apache.sshd.server.subsystem.sftp.FileHandle: int getAccessMask()>();

        $i4 = i5 & 1;

        if $i4 != 0 goto label1;

        $r21 = new java.nio.file.AccessDeniedException;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        varReplacer5094 = "File not opened for read: ";

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5094);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r28);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<java.nio.file.AccessDeniedException: void <init>(java.lang.String)>($r25);

        throw $r21;

     label1:
        goto label6;

     label2:
        r28 = virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.nio.file.Path resolveFile(java.lang.String)>(r3);

        i6 = 0;

     label3:
        $z1 = staticinvoke <java.nio.file.Files: boolean isSymbolicLink(java.nio.file.Path)>(r28);

        if $z1 == 0 goto label4;

        if i6 >= 127 goto label4;

        r28 = staticinvoke <java.nio.file.Files: java.nio.file.Path readSymbolicLink(java.nio.file.Path)>(r28);

        i6 = i6 + 1;

        goto label3;

     label4:
        $z2 = staticinvoke <java.nio.file.Files: boolean isSymbolicLink(java.nio.file.Path)>(r28);

        if $z2 == 0 goto label5;

        $r13 = new java.nio.file.FileSystemLoopException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        varReplacer5095 = " yields a circular or too long chain of symlinks";

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5095);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.nio.file.FileSystemLoopException: void <init>(java.lang.String)>($r17);

        throw $r13;

     label5:
        varReplacer5091 = 0;

        $r4 = staticinvoke <org.apache.sshd.common.util.io.IoUtils: java.nio.file.LinkOption[] getLinkOptions(boolean)>(varReplacer5091);

        $z3 = staticinvoke <java.nio.file.Files: boolean isDirectory(java.nio.file.Path,java.nio.file.LinkOption[])>(r28, $r4);

        if $z3 == 0 goto label6;

        $r11 = new java.nio.file.NotDirectoryException;

        $r12 = interfaceinvoke r28.<java.nio.file.Path: java.lang.String toString()>();

        specialinvoke $r11.<java.nio.file.NotDirectoryException: void <init>(java.lang.String)>($r12);

        throw $r11;

     label6:
        $r6 = newarray (java.lang.Object)[0];

        varReplacer5093 = "No hash algorithms specified";

        staticinvoke <org.apache.sshd.common.util.ValidateUtils: java.util.Collection checkNotNullAndNotEmpty(java.util.Collection,java.lang.String,java.lang.Object[])>(r5, varReplacer5093, $r6);

        r29 = null;

        r30 = interfaceinvoke r5.<java.util.Collection: java.util.Iterator iterator()>();

     label7:
        $z4 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label9;

        $r10 = interfaceinvoke r30.<java.util.Iterator: java.lang.Object next()>();

        r31 = (java.lang.String) $r10;

        r29 = staticinvoke <org.apache.sshd.common.digest.BuiltinDigests: org.apache.sshd.common.digest.BuiltinDigests fromFactoryName(java.lang.String)>(r31);

        if r29 == null goto label8;

        goto label9;

     label8:
        goto label7;

     label9:
        varReplacer5092 = "No matching digest factory found for %s";

        staticinvoke <org.apache.sshd.common.util.ValidateUtils: java.lang.Object checkNotNull(java.lang.Object,java.lang.String,java.lang.Object)>(r29, varReplacer5092, r5);

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doCheckFileHash(int,java.nio.file.Path,org.apache.sshd.common.NamedFactory,long,long,int,org.apache.sshd.common.util.buffer.Buffer)>(i0, r28, r29, l1, l2, i3, r9);

        return;
    }

    protected void doCheckFileHash(int, java.nio.file.Path, org.apache.sshd.common.NamedFactory, long, long, int, org.apache.sshd.common.util.buffer.Buffer) throws java.lang.Exception
    {
        long l0, l2, l5, $l15, $l20, l24, l25;
        byte $b1, $b3, $b6, $b7, $b10, $b16, $b26;
        java.lang.Long $r0, $r1, $r8, $r21, $r22, $r27, $r28;
        int i4, $i8, $i9, $i11, $i12, $i13, i14, $i17, $i18, $i19, $i21, $i22, i23, i27, i28, i29, i30, varReplacer5096, varReplacer5101, varReplacer5103, varReplacer5104, varReplacer5107, varReplacer5108, varReplacer5109;
        java.lang.Integer $r2, $r20;
        org.apache.sshd.common.NamedFactory r3;
        org.apache.sshd.common.util.buffer.Buffer r5;
        java.lang.String $r6, $r23, $r29, varReplacer5097, varReplacer5098, varReplacer5099, varReplacer5100, varReplacer5102, varReplacer5105, varReplacer5106;
        java.nio.file.Path r7;
        java.nio.ByteBuffer r9, r41, r43;
        java.nio.file.OpenOption[] $r10;
        java.nio.channels.FileChannel r11;
        java.lang.Object $r13;
        byte[] r15, $r37, r38, r42;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r16;
        org.slf4j.Logger $r17, $r19, $r24, $r26;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.Object[] $r18, $r25;
        java.lang.Throwable $r31, r32, r33, $r34, $r35, $r36, r39, r44, r45;
        org.apache.sshd.common.digest.Digest r40;

        nop;

        r16 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        i23 := @parameter0: int;

        r7 := @parameter1: java.nio.file.Path;

        r3 := @parameter2: org.apache.sshd.common.NamedFactory;

        l0 := @parameter3: long;

        l2 := @parameter4: long;

        i4 := @parameter5: int;

        r5 := @parameter6: org.apache.sshd.common.util.buffer.Buffer;

        $b1 = l0 cmp 0L;

        if $b1 < 0 goto label01;

        $z2 = 1;

        goto label02;

     label01:
        $z2 = 0;

     label02:
        $r0 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        varReplacer5102 = "Invalid start offset: %d";

        staticinvoke <org.apache.sshd.common.util.ValidateUtils: void checkTrue(boolean,java.lang.String,java.lang.Object)>($z2, varReplacer5102, $r0);

        $b3 = l2 cmp 0L;

        if $b3 < 0 goto label03;

        $z3 = 1;

        goto label04;

     label03:
        $z3 = 0;

     label04:
        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l2);

        varReplacer5098 = "Invalid length: %d";

        staticinvoke <org.apache.sshd.common.util.ValidateUtils: void checkTrue(boolean,java.lang.String,java.lang.Object)>($z3, varReplacer5098, $r1);

        if i4 == 0 goto label05;

        if i4 < 256 goto label06;

     label05:
        $z4 = 1;

        goto label07;

     label06:
        $z4 = 0;

     label07:
        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4);

        varReplacer5100 = "Invalid block size: %d";

        staticinvoke <org.apache.sshd.common.util.ValidateUtils: void checkTrue(boolean,java.lang.String,java.lang.Object)>($z4, varReplacer5100, $r2);

        varReplacer5097 = "No digest factory provided";

        staticinvoke <org.apache.sshd.common.util.ValidateUtils: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(r3, varReplacer5097);

        $r6 = interfaceinvoke r3.<org.apache.sshd.common.NamedFactory: java.lang.String getName()>();

        virtualinvoke r5.<org.apache.sshd.common.util.buffer.Buffer: void putString(java.lang.String)>($r6);

        l24 = l2;

        l5 = staticinvoke <java.nio.file.Files: long size(java.nio.file.Path)>(r7);

        $b6 = l24 cmp 0L;

        if $b6 != 0 goto label08;

        l24 = l5 - l0;

        goto label09;

     label08:
        l25 = l0 + l2;

        $b7 = l25 cmp l5;

        if $b7 <= 0 goto label09;

        l24 = l5 - l0;

     label09:
        $b26 = l24 cmp 0L;

        if $b26 <= 0 goto label10;

        $z5 = 1;

        goto label11;

     label10:
        $z5 = 0;

     label11:
        $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l24);

        varReplacer5105 = "Non-positive effective hash data length: %d";

        staticinvoke <org.apache.sshd.common.util.ValidateUtils: void checkTrue(boolean,java.lang.String,java.lang.Object)>($z5, varReplacer5105, $r8);

        if i4 != 0 goto label12;

        $i21 = (int) l24;

        varReplacer5103 = 8192;

        $i22 = staticinvoke <java.lang.Math: int min(int,int)>($i21, varReplacer5103);

        $r37 = newarray (byte)[$i22];

        goto label13;

     label12:
        $i8 = (int) l24;

        $i9 = staticinvoke <java.lang.Math: int min(int,int)>($i8, i4);

        $r37 = newarray (byte)[$i9];

     label13:
        r38 = $r37;

        r9 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>(r38);

        $r10 = <org.apache.sshd.common.util.io.IoUtils: java.nio.file.OpenOption[] EMPTY_OPEN_OPTIONS>;

        r11 = staticinvoke <java.nio.channels.FileChannel: java.nio.channels.FileChannel open(java.nio.file.Path,java.nio.file.OpenOption[])>(r7, $r10);

        r39 = null;

     label14:
        virtualinvoke r11.<java.nio.channels.FileChannel: java.nio.channels.FileChannel position(long)>(l0);

        $r13 = interfaceinvoke r3.<org.apache.sshd.common.NamedFactory: java.lang.Object create()>();

        r40 = (org.apache.sshd.common.digest.Digest) $r13;

        interfaceinvoke r40.<org.apache.sshd.common.digest.Digest: void init()>();

        if i4 != 0 goto label20;

     label15:
        $b16 = l24 cmp 0L;

        if $b16 <= 0 goto label18;

        $i18 = lengthof r38;

        $i17 = (int) l24;

        i27 = staticinvoke <java.lang.Math: int min(int,int)>($i18, $i17);

        r41 = r9;

        $i19 = lengthof r38;

        if i27 >= $i19 goto label16;

        varReplacer5108 = 0;

        r41 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[],int,int)>(r38, varReplacer5108, i27);

     label16:
        virtualinvoke r41.<java.nio.ByteBuffer: java.nio.Buffer clear()>();

        i28 = virtualinvoke r11.<java.nio.channels.FileChannel: int read(java.nio.ByteBuffer)>(r41);

        if i28 >= 0 goto label17;

        goto label18;

     label17:
        $l20 = (long) i28;

        l24 = l24 - $l20;

        varReplacer5104 = 0;

        interfaceinvoke r40.<org.apache.sshd.common.digest.Digest: void update(byte[],int,int)>(r38, varReplacer5104, i28);

        goto label15;

     label18:
        r42 = interfaceinvoke r40.<org.apache.sshd.common.digest.Digest: byte[] digest()>();

        $r24 = r16.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z1 = interfaceinvoke $r24.<org.slf4j.Logger: boolean isTraceEnabled()>();

        if $z1 == 0 goto label19;

        $r26 = r16.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r25 = newarray (java.lang.Object)[4];

        $r25[0] = r7;

        $r27 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r25[1] = $r27;

        $r28 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l2);

        $r25[2] = $r28;

        varReplacer5109 = 58;

        $r29 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: java.lang.String printHex(char,byte[])>(varReplacer5109, r42);

        $r25[3] = $r29;

        varReplacer5099 = "doCheckFileHash({}) offset={}, length={} - hash={}";

        interfaceinvoke $r26.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object[])>(varReplacer5099, $r25);

     label19:
        virtualinvoke r5.<org.apache.sshd.common.util.buffer.Buffer: void putBytes(byte[])>(r42);

        goto label25;

     label20:
        i29 = 0;

     label21:
        $b10 = l24 cmp 0L;

        if $b10 <= 0 goto label25;

        $i12 = lengthof r38;

        $i11 = (int) l24;

        i30 = staticinvoke <java.lang.Math: int min(int,int)>($i12, $i11);

        r43 = r9;

        $i13 = lengthof r38;

        if i30 >= $i13 goto label22;

        varReplacer5096 = 0;

        r43 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[],int,int)>(r38, varReplacer5096, i30);

     label22:
        virtualinvoke r43.<java.nio.ByteBuffer: java.nio.Buffer clear()>();

        i14 = virtualinvoke r11.<java.nio.channels.FileChannel: int read(java.nio.ByteBuffer)>(r43);

        if i14 >= 0 goto label23;

        goto label25;

     label23:
        $l15 = (long) i14;

        l24 = l24 - $l15;

        varReplacer5107 = 0;

        interfaceinvoke r40.<org.apache.sshd.common.digest.Digest: void update(byte[],int,int)>(r38, varReplacer5107, i14);

        r15 = interfaceinvoke r40.<org.apache.sshd.common.digest.Digest: byte[] digest()>();

        $r17 = r16.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r17.<org.slf4j.Logger: boolean isTraceEnabled()>();

        if $z0 == 0 goto label24;

        $r19 = r16.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r18 = newarray (java.lang.Object)[5];

        $r18[0] = r7;

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i29);

        $r18[1] = $r20;

        $r21 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r18[2] = $r21;

        $r22 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l2);

        $r18[3] = $r22;

        varReplacer5101 = 58;

        $r23 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: java.lang.String printHex(char,byte[])>(varReplacer5101, r15);

        $r18[4] = $r23;

        varReplacer5106 = "doCheckFileHash({})[{}] offset={}, length={} - hash={}";

        interfaceinvoke $r19.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object[])>(varReplacer5106, $r18);

     label24:
        virtualinvoke r5.<org.apache.sshd.common.util.buffer.Buffer: void putBytes(byte[])>(r15);

        i29 = i29 + 1;

        goto label21;

     label25:
        if r11 == null goto label38;

        if r39 == null goto label29;

     label26:
        virtualinvoke r11.<java.nio.channels.FileChannel: void close()>();

     label27:
        goto label38;

     label28:
        $r36 := @caughtexception;

        r44 = $r36;

        virtualinvoke r39.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r44);

        goto label38;

     label29:
        virtualinvoke r11.<java.nio.channels.FileChannel: void close()>();

        goto label38;

     label30:
        $r35 := @caughtexception;

        r45 = $r35;

        r39 = r45;

        throw r45;

     label31:
        $r34 := @caughtexception;

        r33 = $r34;

     label32:
        if r11 == null goto label37;

        if r39 == null goto label36;

     label33:
        virtualinvoke r11.<java.nio.channels.FileChannel: void close()>();

     label34:
        goto label37;

     label35:
        $r31 := @caughtexception;

        r32 = $r31;

        virtualinvoke r39.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r32);

        goto label37;

     label36:
        virtualinvoke r11.<java.nio.channels.FileChannel: void close()>();

     label37:
        throw r33;

     label38:
        return;

        catch java.lang.Throwable from label26 to label27 with label28;
        catch java.lang.Throwable from label14 to label25 with label30;
        catch java.lang.Throwable from label33 to label34 with label35;
        catch java.lang.Throwable from label30 to label32 with label31;
    }

    protected void doMD5Hash(org.apache.sshd.common.util.buffer.Buffer, int, java.lang.String) throws java.io.IOException
    {
        org.apache.sshd.common.util.buffer.Buffer r0, $r15;
        java.lang.String r1, r4, $r11, $r12, varReplacer5110;
        long l0, l1, $l3;
        byte[] r2, r5;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r3;
        int i2, varReplacer5111, varReplacer5112, varReplacer5113;
        org.slf4j.Logger $r6, $r8;
        boolean $z0;
        java.lang.Object[] $r7;
        java.lang.Long $r9, $r10;
        java.lang.Exception $r13, r14;

        nop;

        r3 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i2 := @parameter1: int;

        r4 := @parameter2: java.lang.String;

        r1 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

        l0 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: long getLong()>();

        l1 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: long getLong()>();

        r2 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: byte[] getBytes()>();

     label1:
        r5 = virtualinvoke r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: byte[] doMD5Hash(int,java.lang.String,java.lang.String,long,long,byte[])>(i2, r4, r1, l0, l1, r2);

        $r6 = r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r6.<org.slf4j.Logger: boolean isTraceEnabled()>();

        if $z0 == 0 goto label2;

        $r8 = r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r7 = newarray (java.lang.Object)[6];

        $r7[0] = r4;

        $r7[1] = r1;

        $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r7[2] = $r9;

        $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        $r7[3] = $r10;

        varReplacer5111 = 58;

        $r11 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: java.lang.String printHex(char,byte[])>(varReplacer5111, r2);

        $r7[4] = $r11;

        varReplacer5112 = 58;

        $r12 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: java.lang.String printHex(char,byte[])>(varReplacer5112, r5);

        $r7[5] = $r12;

        varReplacer5110 = "doMD5Hash({})[{}] offset={}, length={}, quick-hash={} - hash={}";

        interfaceinvoke $r8.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(varReplacer5110, $r7);

     label2:
        goto label4;

     label3:
        $r13 := @caughtexception;

        r14 = $r13;

        $r15 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        virtualinvoke r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,java.lang.Exception)>($r15, i2, r14);

        return;

     label4:
        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void clear()>();

        varReplacer5113 = -55;

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putByte(byte)>(varReplacer5113);

        $l3 = (long) i2;

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putInt(long)>($l3);

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putString(java.lang.String)>(r4);

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putBytes(byte[])>(r5);

        virtualinvoke r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void send(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected byte[] doMD5Hash(int, java.lang.String, java.lang.String, long, long, byte[]) throws java.lang.Exception
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        org.slf4j.Logger $r1, $r19;
        boolean $z0, $z1, $z2;
        java.lang.String r2, $r3, r4, $r8, $r17, $r22, varReplacer5115, varReplacer5117;
        java.nio.file.LinkOption[] $r5;
        long l0, l1, l3, l9, l10;
        byte $b2, $b4, $b6;
        int i5, $i7, i8, varReplacer5114, varReplacer5116;
        byte[] r6, $r25;
        java.nio.file.NotDirectoryException $r7;
        java.util.Map $r9;
        java.lang.Object $r10;
        org.apache.sshd.server.subsystem.sftp.Handle $r11, r23;
        org.apache.sshd.server.subsystem.sftp.FileHandle r12;
        java.nio.file.AccessDeniedException $r13;
        java.lang.StringBuilder $r14, $r15, $r16;
        java.lang.Object[] $r18;
        java.lang.Long $r20, $r21;
        java.nio.file.Path r24;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        i5 := @parameter0: int;

        r2 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        l1 := @parameter3: long;

        l0 := @parameter4: long;

        r6 := @parameter5: byte[];

        $r1 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r1.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r19 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r18 = newarray (java.lang.Object)[5];

        $r18[0] = r2;

        $r18[1] = r4;

        $r20 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        $r18[2] = $r20;

        $r21 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r18[3] = $r21;

        varReplacer5116 = 58;

        $r22 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: java.lang.String printHex(char,byte[])>(varReplacer5116, r6);

        $r18[4] = $r22;

        varReplacer5115 = "doMD5Hash({})[{}] offset={}, length={}, quick-hash={}";

        interfaceinvoke $r19.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(varReplacer5115, $r18);

     label1:
        $r3 = "md5-hash-handle";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2);

        if $z1 == 0 goto label3;

        $r9 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map handles>;

        $r10 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4);

        r23 = (org.apache.sshd.server.subsystem.sftp.Handle) $r10;

        $r11 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.subsystem.sftp.Handle validateHandle(java.lang.String,org.apache.sshd.server.subsystem.sftp.Handle,java.lang.Class)>(r4, r23, class "Lorg/apache/sshd/server/subsystem/sftp/FileHandle;");

        r12 = (org.apache.sshd.server.subsystem.sftp.FileHandle) $r11;

        r24 = virtualinvoke r12.<org.apache.sshd.server.subsystem.sftp.FileHandle: java.nio.file.Path getFile()>();

        i8 = virtualinvoke r12.<org.apache.sshd.server.subsystem.sftp.FileHandle: int getAccessMask()>();

        $i7 = i8 & 1;

        if $i7 != 0 goto label2;

        $r13 = new java.nio.file.AccessDeniedException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        varReplacer5117 = "File not opened for read: ";

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5117);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r24);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.nio.file.AccessDeniedException: void <init>(java.lang.String)>($r17);

        throw $r13;

     label2:
        goto label4;

     label3:
        r24 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.nio.file.Path resolveFile(java.lang.String)>(r4);

        varReplacer5114 = 0;

        $r5 = staticinvoke <org.apache.sshd.common.util.io.IoUtils: java.nio.file.LinkOption[] getLinkOptions(boolean)>(varReplacer5114);

        $z2 = staticinvoke <java.nio.file.Files: boolean isDirectory(java.nio.file.Path,java.nio.file.LinkOption[])>(r24, $r5);

        if $z2 == 0 goto label4;

        $r7 = new java.nio.file.NotDirectoryException;

        $r8 = interfaceinvoke r24.<java.nio.file.Path: java.lang.String toString()>();

        specialinvoke $r7.<java.nio.file.NotDirectoryException: void <init>(java.lang.String)>($r8);

        throw $r7;

     label4:
        l9 = l0;

        l10 = staticinvoke <java.nio.file.Files: long size(java.nio.file.Path)>(r24);

        $b2 = l1 cmp 0L;

        if $b2 != 0 goto label5;

        $b6 = l0 cmp 0L;

        if $b6 != 0 goto label5;

        l9 = l10;

        goto label6;

     label5:
        l3 = l1 + l9;

        $b4 = l3 cmp l10;

        if $b4 <= 0 goto label6;

        l9 = l10 - l1;

     label6:
        $r25 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: byte[] doMD5Hash(int,java.nio.file.Path,long,long,byte[])>(i5, r24, l1, l9, r6);

        return $r25;
    }

    protected byte[] doMD5Hash(int, java.nio.file.Path, long, long, byte[]) throws java.lang.Exception
    {
        long l0, l2, $l4, $l7, $l13, l16, varReplacer5119;
        byte $b1, $b3, $b8, $b14;
        java.lang.Long $r0, $r1, $r15, $r16, $r23, $r24;
        org.apache.sshd.common.digest.BuiltinDigests $r2, $r27;
        int $i5, $i6, $i9, $i10, $i11, i12, i15, i17, i18, varReplacer5121, varReplacer5122, varReplacer5124, varReplacer5126, varReplacer5128, varReplacer5129, varReplacer5130, varReplacer5131;
        byte[] r3, r10, r40;
        java.nio.ByteBuffer r4, r42;
        java.nio.file.Path r5;
        java.lang.Object[] $r6, $r13, $r21;
        java.nio.file.StandardOpenOption $r7;
        java.nio.channels.FileChannel r8;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r11;
        org.slf4j.Logger $r12, $r14, $r22, $r45;
        boolean $z0, $z1, $z2, z3, z4, $z5;
        java.lang.Boolean $r17;
        java.lang.String $r18, $r19, $r25, $r26, $r32, varReplacer5118, varReplacer5120, varReplacer5123, varReplacer5125, varReplacer5127;
        java.lang.StringBuilder $r30, $r31, $r46;
        java.lang.Throwable $r33, r34, r35, $r36, $r37, $r38, r41, r43, r44;
        org.apache.sshd.common.digest.Digest r39;
        java.io.EOFException $r47;
        java.nio.file.OpenOption[] $r48;

        nop;

        r11 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        i15 := @parameter0: int;

        r5 := @parameter1: java.nio.file.Path;

        l0 := @parameter2: long;

        l2 := @parameter3: long;

        r10 := @parameter4: byte[];

        $b1 = l0 cmp 0L;

        if $b1 < 0 goto label01;

        $z1 = 1;

        goto label02;

     label01:
        $z1 = 0;

     label02:
        $r0 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        varReplacer5118 = "Invalid start offset: %d";

        staticinvoke <org.apache.sshd.common.util.ValidateUtils: void checkTrue(boolean,java.lang.String,java.lang.Object)>($z1, varReplacer5118, $r0);

        $b3 = l2 cmp 0L;

        if $b3 <= 0 goto label03;

        $z2 = 1;

        goto label04;

     label03:
        $z2 = 0;

     label04:
        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l2);

        varReplacer5125 = "Invalid length: %d";

        staticinvoke <org.apache.sshd.common.util.ValidateUtils: void checkTrue(boolean,java.lang.String,java.lang.Object)>($z2, varReplacer5125, $r1);

        $r2 = <org.apache.sshd.common.digest.BuiltinDigests: org.apache.sshd.common.digest.BuiltinDigests md5>;

        r39 = virtualinvoke $r2.<org.apache.sshd.common.digest.BuiltinDigests: org.apache.sshd.common.digest.Digest create()>();

        interfaceinvoke r39.<org.apache.sshd.common.digest.Digest: void init()>();

        l16 = l2;

        varReplacer5119 = 2048L;

        $l4 = staticinvoke <java.lang.Math: long min(long,long)>(l16, varReplacer5119);

        $i5 = (int) $l4;

        r3 = newarray (byte)[$i5];

        r4 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>(r3);

        z3 = 0;

        r40 = null;

        $r6 = newarray (java.nio.file.OpenOption)[1];

        $r7 = <java.nio.file.StandardOpenOption: java.nio.file.StandardOpenOption READ>;

        $r6[0] = $r7;

        $r48 = (java.nio.file.OpenOption[]) $r6;

        r8 = staticinvoke <java.nio.channels.FileChannel: java.nio.channels.FileChannel open(java.nio.file.Path,java.nio.file.OpenOption[])>(r5, $r48);

        r41 = null;

     label05:
        virtualinvoke r8.<java.nio.channels.FileChannel: java.nio.channels.FileChannel position(long)>(l0);

        $i6 = staticinvoke <org.apache.sshd.common.util.GenericUtils: int length(byte[])>(r10);

        if $i6 > 0 goto label06;

        z4 = 1;

        goto label09;

     label06:
        i17 = virtualinvoke r8.<java.nio.channels.FileChannel: int read(java.nio.ByteBuffer)>(r4);

        if i17 >= 0 goto label07;

        $r47 = new java.io.EOFException;

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        varReplacer5127 = "EOF while read initial buffer from ";

        $r30 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5127);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r47.<java.io.EOFException: void <init>(java.lang.String)>($r32);

        throw $r47;

     label07:
        $l7 = (long) i17;

        l16 = l16 - $l7;

        varReplacer5131 = 0;

        interfaceinvoke r39.<org.apache.sshd.common.digest.Digest: void update(byte[],int,int)>(r3, varReplacer5131, i17);

        r40 = interfaceinvoke r39.<org.apache.sshd.common.digest.Digest: byte[] digest()>();

        z4 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r10, r40);

        if z4 == 0 goto label08;

        $b14 = l16 cmp 0L;

        if $b14 <= 0 goto label09;

        $r27 = <org.apache.sshd.common.digest.BuiltinDigests: org.apache.sshd.common.digest.BuiltinDigests md5>;

        r39 = virtualinvoke $r27.<org.apache.sshd.common.digest.BuiltinDigests: org.apache.sshd.common.digest.Digest create()>();

        interfaceinvoke r39.<org.apache.sshd.common.digest.Digest: void init()>();

        varReplacer5122 = 0;

        interfaceinvoke r39.<org.apache.sshd.common.digest.Digest: void update(byte[],int,int)>(r3, varReplacer5122, i17);

        r40 = null;

        goto label09;

     label08:
        $r12 = r11.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r12.<org.slf4j.Logger: boolean isTraceEnabled()>();

        if $z0 == 0 goto label09;

        $r22 = r11.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r21 = newarray (java.lang.Object)[5];

        $r21[0] = r5;

        $r23 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r21[1] = $r23;

        $r24 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l2);

        $r21[2] = $r24;

        varReplacer5121 = 58;

        $r25 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: java.lang.String printHex(char,byte[])>(varReplacer5121, r10);

        $r21[3] = $r25;

        varReplacer5124 = 58;

        $r26 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: java.lang.String printHex(char,byte[])>(varReplacer5124, r40);

        $r21[4] = $r26;

        varReplacer5123 = "doMD5Hash({}) offset={}, length={} - quick-hash mismatched expected={}, actual={}";

        interfaceinvoke $r22.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object[])>(varReplacer5123, $r21);

     label09:
        if z4 == 0 goto label14;

     label10:
        $b8 = l16 cmp 0L;

        if $b8 <= 0 goto label13;

        $i10 = lengthof r3;

        $i9 = (int) l16;

        i18 = staticinvoke <java.lang.Math: int min(int,int)>($i10, $i9);

        r42 = r4;

        $i11 = lengthof r3;

        if i18 >= $i11 goto label11;

        varReplacer5126 = 0;

        r42 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[],int,int)>(r3, varReplacer5126, i18);

     label11:
        virtualinvoke r42.<java.nio.ByteBuffer: java.nio.Buffer clear()>();

        i12 = virtualinvoke r8.<java.nio.channels.FileChannel: int read(java.nio.ByteBuffer)>(r42);

        if i12 >= 0 goto label12;

        goto label13;

     label12:
        $l13 = (long) i12;

        l16 = l16 - $l13;

        varReplacer5129 = 0;

        interfaceinvoke r39.<org.apache.sshd.common.digest.Digest: void update(byte[],int,int)>(r3, varReplacer5129, i12);

        goto label10;

     label13:
        if r40 != null goto label15;

        r40 = interfaceinvoke r39.<org.apache.sshd.common.digest.Digest: byte[] digest()>();

        goto label15;

     label14:
        r40 = <org.apache.sshd.common.util.GenericUtils: byte[] EMPTY_BYTE_ARRAY>;

     label15:
        if r8 == null goto label28;

        if r41 == null goto label19;

     label16:
        virtualinvoke r8.<java.nio.channels.FileChannel: void close()>();

     label17:
        goto label28;

     label18:
        $r38 := @caughtexception;

        r43 = $r38;

        virtualinvoke r41.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r43);

        goto label28;

     label19:
        virtualinvoke r8.<java.nio.channels.FileChannel: void close()>();

        goto label28;

     label20:
        $r37 := @caughtexception;

        r44 = $r37;

        r41 = r44;

        throw r44;

     label21:
        $r36 := @caughtexception;

        r35 = $r36;

     label22:
        if r8 == null goto label27;

        if r41 == null goto label26;

     label23:
        virtualinvoke r8.<java.nio.channels.FileChannel: void close()>();

     label24:
        goto label27;

     label25:
        $r33 := @caughtexception;

        r34 = $r33;

        virtualinvoke r41.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r34);

        goto label27;

     label26:
        virtualinvoke r8.<java.nio.channels.FileChannel: void close()>();

     label27:
        throw r35;

     label28:
        $r45 = r11.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z5 = interfaceinvoke $r45.<org.slf4j.Logger: boolean isTraceEnabled()>();

        if $z5 == 0 goto label29;

        $r14 = r11.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r13 = newarray (java.lang.Object)[6];

        $r13[0] = r5;

        $r15 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r13[1] = $r15;

        $r16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l2);

        $r13[2] = $r16;

        $r17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z4);

        $r13[3] = $r17;

        varReplacer5130 = 58;

        $r18 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: java.lang.String printHex(char,byte[])>(varReplacer5130, r10);

        $r13[4] = $r18;

        varReplacer5128 = 58;

        $r19 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: java.lang.String printHex(char,byte[])>(varReplacer5128, r40);

        $r13[5] = $r19;

        varReplacer5120 = "doMD5Hash({}) offset={}, length={} - matches={}, quick={} hash={}";

        interfaceinvoke $r14.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object[])>(varReplacer5120, $r13);

     label29:
        return r40;

        catch java.lang.Throwable from label16 to label17 with label18;
        catch java.lang.Throwable from label05 to label15 with label20;
        catch java.lang.Throwable from label23 to label24 with label25;
        catch java.lang.Throwable from label20 to label22 with label21;
    }

    protected void doVersionSelect(org.apache.sshd.common.util.buffer.Buffer, int) throws java.io.IOException
    {
        org.apache.sshd.common.util.buffer.Buffer r0, $r4, $r11, $r14;
        java.lang.String r1, $r8, $r18, varReplacer5135, varReplacer5138, varReplacer5139;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r2;
        long $l0;
        byte $b1;
        int i2, $i3, varReplacer5132, varReplacer5133, varReplacer5134, varReplacer5136, varReplacer5137, varReplacer5140;
        java.lang.Boolean r3;
        boolean $z0;
        java.lang.StringBuilder $r5, $r6, $r7, $r15, $r16, $r17;
        org.apache.sshd.server.session.ServerSession $r9, $r12, $r19;

        nop;

        r2 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i2 := @parameter1: int;

        r1 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

        $l0 = r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: long requestsCount>;

        $b1 = $l0 cmp 0L;

        if $b1 <= 0 goto label1;

        $r14 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        varReplacer5135 = "Version selection not the 1st request for proposal = ";

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5135);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer5140 = 4;

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,int,java.lang.String)>($r14, i2, varReplacer5140, $r18);

        $r19 = r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession session>;

        varReplacer5132 = 1;

        interfaceinvoke $r19.<org.apache.sshd.server.session.ServerSession: org.apache.sshd.common.future.CloseFuture close(boolean)>(varReplacer5132);

        return;

     label1:
        r3 = virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.lang.Boolean validateProposedVersion(org.apache.sshd.common.util.buffer.Buffer,int,java.lang.String)>(r0, i2, r1);

        if r3 != null goto label2;

        $r12 = r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession session>;

        varReplacer5134 = 1;

        interfaceinvoke $r12.<org.apache.sshd.server.session.ServerSession: org.apache.sshd.common.future.CloseFuture close(boolean)>(varReplacer5134);

        return;

     label2:
        $z0 = virtualinvoke r3.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label3;

        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1);

        r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int version> = $i3;

        $r11 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        varReplacer5137 = 0;

        varReplacer5138 = "";

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,int,java.lang.String)>($r11, i2, varReplacer5137, varReplacer5138);

        goto label4;

     label3:
        $r4 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        varReplacer5139 = "Unsupported version ";

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5139);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer5136 = 4;

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,int,java.lang.String)>($r4, i2, varReplacer5136, $r8);

        $r9 = r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession session>;

        varReplacer5133 = 1;

        interfaceinvoke $r9.<org.apache.sshd.server.session.ServerSession: org.apache.sshd.common.future.CloseFuture close(boolean)>(varReplacer5133);

     label4:
        return;
    }

    protected java.lang.Boolean validateProposedVersion(org.apache.sshd.common.util.buffer.Buffer, int, java.lang.String) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        org.slf4j.Logger $r1, $r8;
        boolean $z0, $z1;
        java.lang.String r2, r5, varReplacer5141;
        int $i0, i2, i3, varReplacer5142, varReplacer5143;
        char c1;
        java.lang.Boolean $r3, $r6, $r7;
        org.apache.sshd.common.util.buffer.Buffer r4;
        null_type varReplacer5144;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r4 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i3 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        $r1 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r1.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r8 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        varReplacer5141 = "Received SSH_FXP_EXTENDED(version-select) (version={})";

        interfaceinvoke $r8.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>(varReplacer5141, r2);

     label1:
        $i0 = staticinvoke <org.apache.sshd.common.util.GenericUtils: int length(java.lang.CharSequence)>(r2);

        if $i0 == 1 goto label2;

        $r7 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        return $r7;

     label2:
        varReplacer5142 = 0;

        c1 = virtualinvoke r2.<java.lang.String: char charAt(int)>(varReplacer5142);

        if c1 < 48 goto label3;

        if c1 <= 57 goto label4;

     label3:
        $r3 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        return $r3;

     label4:
        i2 = c1 - 48;

        varReplacer5143 = 4;

        r5 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.lang.String checkVersionCompatibility(org.apache.sshd.common.util.buffer.Buffer,int,int,int)>(r4, i3, i2, varReplacer5143);

        $z1 = staticinvoke <org.apache.sshd.common.util.GenericUtils: boolean isEmpty(java.lang.CharSequence)>(r5);

        if $z1 == 0 goto label5;

        varReplacer5144 = null;

        return varReplacer5144;

     label5:
        $r6 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        return $r6;
    }

    protected java.lang.String checkVersionCompatibility(org.apache.sshd.common.util.buffer.Buffer, int, int, int) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        org.apache.sshd.server.session.ServerSession $r1;
        java.lang.Integer r2, $r14, $r15;
        org.slf4j.Logger $r3, $r13;
        boolean $z0;
        int i0, i1, i2, i3, i4, i5;
        org.apache.sshd.common.util.buffer.Buffer r4, $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10, $r17, $r18, $r19, $r20, $r21;
        java.lang.String $r11, $r22, r23, varReplacer5145, varReplacer5146, varReplacer5148, varReplacer5149, varReplacer5150, varReplacer5151;
        java.lang.Object[] $r12;
        java.lang.IllegalStateException $r16;
        null_type varReplacer5147;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r4 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        i2 := @parameter3: int;

        i4 = 3;

        i5 = 6;

        r23 = <org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.lang.String ALL_SFTP_IMPL>;

        $r1 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession session>;

        varReplacer5149 = "sftp-version";

        r2 = staticinvoke <org.apache.sshd.common.FactoryManagerUtils: java.lang.Integer getInteger(org.apache.sshd.common.session.Session,java.lang.String)>($r1, varReplacer5149);

        if r2 == null goto label3;

        i3 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

        if i3 < 3 goto label1;

        if i3 <= 6 goto label2;

     label1:
        $r16 = new java.lang.IllegalStateException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        varReplacer5145 = "Forced SFTP version (";

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5145);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        varReplacer5151 = ") not within supported values: ";

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5151);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r23);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r22);

        throw $r16;

     label2:
        i5 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

        i4 = i5;

        r23 = virtualinvoke r2.<java.lang.Integer: java.lang.String toString()>();

     label3:
        $r3 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r3.<org.slf4j.Logger: boolean isTraceEnabled()>();

        if $z0 == 0 goto label4;

        $r13 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r12 = newarray (java.lang.Object)[3];

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r12[0] = $r14;

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r12[1] = $r15;

        $r12[2] = r23;

        varReplacer5150 = "checkVersionCompatibility(id={}) - proposed={}, available={}";

        interfaceinvoke $r13.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object[])>(varReplacer5150, $r12);

     label4:
        if i0 < i4 goto label5;

        if i0 <= i5 goto label6;

     label5:
        $r5 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r4);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        varReplacer5148 = "Proposed version (";

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5148);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        varReplacer5146 = ") not in supported range: ";

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5146);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r23);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,int,java.lang.String)>($r5, i1, i2, $r11);

        varReplacer5147 = null;

        return varReplacer5147;

     label6:
        return r23;
    }

    protected void doBlock(org.apache.sshd.common.util.buffer.Buffer, int) throws java.io.IOException
    {
        org.apache.sshd.common.util.buffer.Buffer r0, $r3, $r6;
        java.lang.String r1, varReplacer5153;
        long l0, l1;
        int i2, i3, varReplacer5152;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r2;
        java.lang.Throwable $r4, r5;
        java.lang.Exception $r7;

        nop;

        r2 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i3 := @parameter1: int;

        r1 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

        l0 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: long getLong()>();

        l1 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: long getLong()>();

        i2 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: int getInt()>();

     label1:
        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doBlock(int,java.lang.String,long,long,int)>(i3, r1, l0, l1, i2);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r5 = $r4;

        $r6 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        $r7 = (java.lang.Exception) r5;

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,java.lang.Exception)>($r6, i3, $r7);

        return;

     label4:
        $r3 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        varReplacer5152 = 0;

        varReplacer5153 = "";

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,int,java.lang.String)>($r3, i3, varReplacer5152, varReplacer5153);

        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    protected void doBlock(int, java.lang.String, long, long, int) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        java.lang.String r1, $r12, varReplacer5154;
        java.util.Map $r2;
        java.lang.Object $r3;
        org.apache.sshd.server.subsystem.sftp.Handle r4, $r6;
        org.slf4j.Logger $r5, $r9;
        boolean $z0;
        org.apache.sshd.server.subsystem.sftp.FileHandle r7;
        long l0, l1;
        int i2, i3;
        java.lang.Object[] $r8;
        java.lang.Long $r10, $r11;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        i3 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        l1 := @parameter3: long;

        i2 := @parameter4: int;

        $r2 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map handles>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (org.apache.sshd.server.subsystem.sftp.Handle) $r3;

        $r5 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r5.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r9 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r8 = newarray (java.lang.Object)[5];

        $r8[0] = r1;

        $r8[1] = r4;

        $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r8[2] = $r10;

        $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        $r8[3] = $r11;

        $r12 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i2);

        $r8[4] = $r12;

        varReplacer5154 = "Received SSH_FXP_BLOCK (handle={}[{}], offset={}, length={}, mask=0x{})";

        interfaceinvoke $r9.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(varReplacer5154, $r8);

     label1:
        $r6 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.subsystem.sftp.Handle validateHandle(java.lang.String,org.apache.sshd.server.subsystem.sftp.Handle,java.lang.Class)>(r1, r4, class "Lorg/apache/sshd/server/subsystem/sftp/FileHandle;");

        r7 = (org.apache.sshd.server.subsystem.sftp.FileHandle) $r6;

        virtualinvoke r7.<org.apache.sshd.server.subsystem.sftp.FileHandle: void lock(long,long,int)>(l0, l1, i2);

        return;
    }

    protected void doUnblock(org.apache.sshd.common.util.buffer.Buffer, int) throws java.io.IOException
    {
        org.apache.sshd.common.util.buffer.Buffer r0, $r3, $r7;
        java.lang.String r1, varReplacer5155;
        long l0, l1;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r2;
        int i2;
        boolean z0;
        java.lang.Throwable $r5, r6;
        byte $b4;
        java.lang.Exception $r8;

        nop;

        r2 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i2 := @parameter1: int;

        r1 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

        l0 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: long getLong()>();

        l1 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: long getLong()>();

     label1:
        z0 = virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: boolean doUnblock(int,java.lang.String,long,long)>(i2, r1, l0, l1);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r6 = $r5;

        $r7 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        $r8 = (java.lang.Exception) r6;

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,java.lang.Exception)>($r7, i2, $r8);

        return;

     label4:
        $r3 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        if z0 == 0 goto label5;

        $b4 = 0;

        goto label6;

     label5:
        $b4 = 31;

     label6:
        varReplacer5155 = "";

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,int,java.lang.String)>($r3, i2, $b4, varReplacer5155);

        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    protected boolean doUnblock(int, java.lang.String, long, long) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        java.lang.String r1, varReplacer5156;
        java.util.Map $r2;
        java.lang.Object $r3;
        org.apache.sshd.server.subsystem.sftp.Handle r4, $r6;
        org.slf4j.Logger $r5, $r9;
        boolean $z0, $z1;
        org.apache.sshd.server.subsystem.sftp.FileHandle r7;
        long l0, l1;
        java.lang.Object[] $r8;
        java.lang.Long $r10, $r11;
        int i2;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        i2 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        l1 := @parameter3: long;

        $r2 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map handles>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (org.apache.sshd.server.subsystem.sftp.Handle) $r3;

        $r5 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r5.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r9 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r8 = newarray (java.lang.Object)[4];

        $r8[0] = r1;

        $r8[1] = r4;

        $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r8[2] = $r10;

        $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        $r8[3] = $r11;

        varReplacer5156 = "Received SSH_FXP_UNBLOCK (handle={}[{}], offset={}, length={})";

        interfaceinvoke $r9.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(varReplacer5156, $r8);

     label1:
        $r6 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.subsystem.sftp.Handle validateHandle(java.lang.String,org.apache.sshd.server.subsystem.sftp.Handle,java.lang.Class)>(r1, r4, class "Lorg/apache/sshd/server/subsystem/sftp/FileHandle;");

        r7 = (org.apache.sshd.server.subsystem.sftp.FileHandle) $r6;

        $z1 = virtualinvoke r7.<org.apache.sshd.server.subsystem.sftp.FileHandle: boolean unlock(long,long)>(l0, l1);

        return $z1;
    }

    protected void doLink(org.apache.sshd.common.util.buffer.Buffer, int) throws java.io.IOException
    {
        org.apache.sshd.common.util.buffer.Buffer r0, $r5, $r12;
        java.lang.String r1, r2, varReplacer5157, varReplacer5159;
        boolean z0, $z1;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r3;
        org.slf4j.Logger $r4, $r7;
        int i0, varReplacer5158;
        java.lang.Object[] $r6;
        java.lang.Integer $r8;
        java.lang.Boolean $r9;
        java.lang.Throwable $r10, r11;
        java.lang.Exception $r13;

        nop;

        r3 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i0 := @parameter1: int;

        r1 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

        r2 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

        z0 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: boolean getBoolean()>();

     label1:
        $r4 = r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z1 = interfaceinvoke $r4.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z1 == 0 goto label2;

        $r7 = r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r6 = newarray (java.lang.Object)[4];

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r6[0] = $r8;

        $r6[1] = r2;

        $r6[2] = r1;

        $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        $r6[3] = $r9;

        varReplacer5157 = "Received SSH_FXP_LINK id={}, linkpath={}, targetpath={}, symlink={}";

        interfaceinvoke $r7.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(varReplacer5157, $r6);

     label2:
        virtualinvoke r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doLink(int,java.lang.String,java.lang.String,boolean)>(i0, r1, r2, z0);

     label3:
        goto label5;

     label4:
        $r10 := @caughtexception;

        r11 = $r10;

        $r12 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        $r13 = (java.lang.Exception) r11;

        virtualinvoke r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,java.lang.Exception)>($r12, i0, $r13);

        return;

     label5:
        $r5 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        varReplacer5158 = 0;

        varReplacer5159 = "";

        virtualinvoke r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,int,java.lang.String)>($r5, i0, varReplacer5158, varReplacer5159);

        return;

        catch java.io.IOException from label1 to label3 with label4;
        catch java.lang.RuntimeException from label1 to label3 with label4;
    }

    protected void doLink(int, java.lang.String, java.lang.String, boolean) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        int i0;
        java.lang.String r1, r2;
        boolean z0;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void createLink(int,java.lang.String,java.lang.String,boolean)>(i0, r1, r2, z0);

        return;
    }

    protected void doSymLink(org.apache.sshd.common.util.buffer.Buffer, int) throws java.io.IOException
    {
        org.apache.sshd.common.util.buffer.Buffer r0, $r5, $r11;
        java.lang.String r1, r2, varReplacer5161, varReplacer5162;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r3;
        org.slf4j.Logger $r4, $r7;
        boolean $z0;
        int i0, varReplacer5160;
        java.lang.Object[] $r6;
        java.lang.Integer $r8;
        java.lang.Throwable $r9, r10;
        java.lang.Exception $r12;

        nop;

        r3 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i0 := @parameter1: int;

        r1 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

        r2 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

     label1:
        $r4 = r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r4.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label2;

        $r7 = r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r6 = newarray (java.lang.Object)[3];

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r6[0] = $r8;

        $r6[1] = r1;

        $r6[2] = r2;

        varReplacer5162 = "Received SSH_FXP_SYMLINK id={}, linkpath={}, targetpath={}";

        interfaceinvoke $r7.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(varReplacer5162, $r6);

     label2:
        virtualinvoke r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doSymLink(int,java.lang.String,java.lang.String)>(i0, r1, r2);

     label3:
        goto label5;

     label4:
        $r9 := @caughtexception;

        r10 = $r9;

        $r11 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        $r12 = (java.lang.Exception) r10;

        virtualinvoke r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,java.lang.Exception)>($r11, i0, $r12);

        return;

     label5:
        $r5 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        varReplacer5160 = 0;

        varReplacer5161 = "";

        virtualinvoke r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,int,java.lang.String)>($r5, i0, varReplacer5160, varReplacer5161);

        return;

        catch java.io.IOException from label1 to label3 with label4;
        catch java.lang.RuntimeException from label1 to label3 with label4;
    }

    protected void doSymLink(int, java.lang.String, java.lang.String) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        int i0, varReplacer5163;
        java.lang.String r1, r2;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        varReplacer5163 = 1;

        virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void createLink(int,java.lang.String,java.lang.String,boolean)>(i0, r1, r2, varReplacer5163);

        return;
    }

    protected void createLink(int, java.lang.String, java.lang.String, boolean) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        java.lang.String r1, r3, varReplacer5164;
        java.nio.file.Path r2, r6;
        java.lang.String[] $r4;
        java.nio.file.FileSystem $r5;
        org.slf4j.Logger $r7, $r12;
        boolean $z0, z1;
        java.nio.file.attribute.FileAttribute[] $r9;
        java.lang.Object[] $r11;
        int i0;
        java.lang.Integer $r13;
        java.lang.Boolean $r14;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        i0 := @parameter0: int;

        r3 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        z1 := @parameter3: boolean;

        r2 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.nio.file.Path resolveFile(java.lang.String)>(r1);

        $r5 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.nio.file.FileSystem fileSystem>;

        $r4 = newarray (java.lang.String)[0];

        r6 = virtualinvoke $r5.<java.nio.file.FileSystem: java.nio.file.Path getPath(java.lang.String,java.lang.String[])>(r3, $r4);

        $r7 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r7.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r12 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r11 = newarray (java.lang.Object)[6];

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r11[0] = $r13;

        $r11[1] = r1;

        $r11[2] = r2;

        $r11[3] = r3;

        $r11[4] = r6;

        $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z1);

        $r11[5] = $r14;

        varReplacer5164 = "createLink(id={}), linkpath={}[{}], targetpath={}[{}], symlink={})";

        interfaceinvoke $r12.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(varReplacer5164, $r11);

     label1:
        if z1 == 0 goto label2;

        $r9 = newarray (java.nio.file.attribute.FileAttribute)[0];

        staticinvoke <java.nio.file.Files: java.nio.file.Path createSymbolicLink(java.nio.file.Path,java.nio.file.Path,java.nio.file.attribute.FileAttribute[])>(r2, r6, $r9);

        goto label3;

     label2:
        staticinvoke <java.nio.file.Files: java.nio.file.Path createLink(java.nio.file.Path,java.nio.file.Path)>(r2, r6);

     label3:
        return;
    }

    protected void doReadLink(org.apache.sshd.common.util.buffer.Buffer, int) throws java.io.IOException
    {
        org.apache.sshd.common.util.buffer.Buffer r0, $r5, $r10;
        java.lang.String r1, r4, varReplacer5165;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r2;
        org.slf4j.Logger $r3, $r6;
        boolean $z0;
        int i0;
        java.lang.Integer $r7;
        java.lang.Throwable $r8, r9;
        java.lang.Exception $r11;

        nop;

        r2 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i0 := @parameter1: int;

        r1 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

     label1:
        $r3 = r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r3.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label2;

        $r6 = r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        varReplacer5165 = "Received SSH_FXP_READLINK id={} path={}";

        interfaceinvoke $r6.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>(varReplacer5165, $r7, r1);

     label2:
        r4 = virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.lang.String doReadLink(int,java.lang.String)>(i0, r1);

     label3:
        goto label5;

     label4:
        $r8 := @caughtexception;

        r9 = $r8;

        $r10 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        $r11 = (java.lang.Exception) r9;

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,java.lang.Exception)>($r10, i0, $r11);

        return;

     label5:
        $r5 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendLink(org.apache.sshd.common.util.buffer.Buffer,int,java.lang.String)>($r5, i0, r4);

        return;

        catch java.io.IOException from label1 to label3 with label4;
        catch java.lang.RuntimeException from label1 to label3 with label4;
    }

    protected java.lang.String doReadLink(int, java.lang.String) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        java.lang.String r1, $r5, varReplacer5166;
        java.nio.file.Path r2, r3;
        org.slf4j.Logger $r4, $r7;
        boolean $z0;
        java.lang.Object[] $r6;
        int i0;
        java.lang.Integer $r8;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.nio.file.Path resolveFile(java.lang.String)>(r1);

        r3 = staticinvoke <java.nio.file.Files: java.nio.file.Path readSymbolicLink(java.nio.file.Path)>(r2);

        $r4 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r4.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r7 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r6 = newarray (java.lang.Object)[4];

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r6[0] = $r8;

        $r6[1] = r1;

        $r6[2] = r2;

        $r6[3] = r3;

        varReplacer5166 = "doReadLink(id={}) path={}[{}]: {}";

        interfaceinvoke $r7.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(varReplacer5166, $r6);

     label1:
        $r5 = interfaceinvoke r3.<java.nio.file.Path: java.lang.String toString()>();

        return $r5;
    }

    protected void doRename(org.apache.sshd.common.util.buffer.Buffer, int) throws java.io.IOException
    {
        org.apache.sshd.common.util.buffer.Buffer r0, $r4, $r7;
        java.lang.String r1, r2, varReplacer5168;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r3;
        int $i0, i1, i2, varReplacer5167;
        java.lang.Throwable $r5, r6;
        java.lang.Exception $r8;

        nop;

        r3 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i1 := @parameter1: int;

        r1 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

        r2 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

        i2 = 0;

        $i0 = r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int version>;

        if $i0 < 5 goto label1;

        i2 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: int getInt()>();

     label1:
        virtualinvoke r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doRename(int,java.lang.String,java.lang.String,int)>(i1, r1, r2, i2);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r6 = $r5;

        $r7 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        $r8 = (java.lang.Exception) r6;

        virtualinvoke r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,java.lang.Exception)>($r7, i1, $r8);

        return;

     label4:
        $r4 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        varReplacer5167 = 0;

        varReplacer5168 = "";

        virtualinvoke r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,int,java.lang.String)>($r4, i1, varReplacer5167, varReplacer5168);

        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    protected void doRename(int, java.lang.String, java.lang.String, int) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        org.slf4j.Logger $r1, $r8;
        boolean $z0;
        int i0, i1, $i2, $i3;
        java.lang.String r2, r3, $r9, varReplacer5169;
        java.nio.file.StandardCopyOption $r5, $r6;
        java.lang.Object[] $r7;
        java.lang.Object r10;
        java.util.ArrayList $r11;
        java.util.Collection $r12, $r13, $r14;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        i1 := @parameter0: int;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        $r1 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r1.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r8 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r7 = newarray (java.lang.Object)[3];

        $r7[0] = r2;

        $r7[1] = r3;

        $r9 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r7[2] = $r9;

        varReplacer5169 = "Received SSH_FXP_RENAME (oldPath={}, newPath={}, flags=0x{})";

        interfaceinvoke $r8.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(varReplacer5169, $r7);

     label1:
        r10 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        if i0 == 0 goto label3;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        r10 = $r11;

        $i2 = i0 & 2;

        if $i2 != 2 goto label2;

        $r6 = <java.nio.file.StandardCopyOption: java.nio.file.StandardCopyOption ATOMIC_MOVE>;

        $r12 = (java.util.Collection) r10;

        interfaceinvoke $r12.<java.util.Collection: boolean add(java.lang.Object)>($r6);

     label2:
        $i3 = i0 & 1;

        if $i3 != 1 goto label3;

        $r5 = <java.nio.file.StandardCopyOption: java.nio.file.StandardCopyOption REPLACE_EXISTING>;

        $r13 = (java.util.Collection) r10;

        interfaceinvoke $r13.<java.util.Collection: boolean add(java.lang.Object)>($r5);

     label3:
        $r14 = (java.util.Collection) r10;

        virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doRename(int,java.lang.String,java.lang.String,java.util.Collection)>(i1, r2, r3, $r14);

        return;
    }

    protected void doRename(int, java.lang.String, java.lang.String, java.util.Collection) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        java.lang.String r1, r3;
        java.nio.file.Path r2, r4;
        java.util.Collection r5;
        boolean $z0;
        int $i0, i1;
        java.nio.file.CopyOption[] $r6, $r11;
        java.lang.Object[] $r7;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        i1 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r5 := @parameter3: java.util.Collection;

        r2 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.nio.file.Path resolveFile(java.lang.String)>(r1);

        r4 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.nio.file.Path resolveFile(java.lang.String)>(r3);

        $z0 = staticinvoke <org.apache.sshd.common.util.GenericUtils: boolean isEmpty(java.util.Collection)>(r5);

        if $z0 == 0 goto label1;

        $r11 = <org.apache.sshd.common.util.io.IoUtils: java.nio.file.CopyOption[] EMPTY_COPY_OPTIONS>;

        goto label2;

     label1:
        $i0 = interfaceinvoke r5.<java.util.Collection: int size()>();

        $r6 = newarray (java.nio.file.CopyOption)[$i0];

        $r7 = interfaceinvoke r5.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r6);

        $r11 = (java.nio.file.CopyOption[]) $r7;

     label2:
        staticinvoke <java.nio.file.Files: java.nio.file.Path move(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>(r2, r4, $r11);

        return;
    }

    protected void doCopyData(org.apache.sshd.common.util.buffer.Buffer, int) throws java.io.IOException
    {
        org.apache.sshd.common.util.buffer.Buffer r0, $r4, $r7;
        java.lang.String r1, r2, varReplacer5171;
        long l0, l1, l2;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r3;
        int i3, varReplacer5170;
        java.lang.Throwable $r5, r6;
        java.lang.Exception $r8;

        nop;

        r3 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i3 := @parameter1: int;

        r1 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

        l0 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: long getLong()>();

        l1 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: long getLong()>();

        r2 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

        l2 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: long getLong()>();

     label1:
        virtualinvoke r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doCopyData(int,java.lang.String,long,long,java.lang.String,long)>(i3, r1, l0, l1, r2, l2);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r6 = $r5;

        $r7 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        $r8 = (java.lang.Exception) r6;

        virtualinvoke r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,java.lang.Exception)>($r7, i3, $r8);

        return;

     label4:
        $r4 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        varReplacer5170 = 0;

        varReplacer5171 = "";

        virtualinvoke r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,int,java.lang.String)>($r4, i3, varReplacer5170, varReplacer5171);

        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    protected void doCopyData(int, java.lang.String, long, long, java.lang.String, long) throws java.io.IOException
    {
        java.lang.String r0, r1, $r24, $r36, $r48, $r53, $r58, varReplacer5173, varReplacer5174, varReplacer5176, varReplacer5177, varReplacer5178, varReplacer5179, varReplacer5180, varReplacer5181, varReplacer5182, varReplacer5183, varReplacer5184, varReplacer5185, varReplacer5186, varReplacer5188, varReplacer5189, varReplacer5190, varReplacer5191, varReplacer5192, varReplacer5193;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r2;
        java.util.Map $r3, $r6;
        java.lang.Object $r4, $r7;
        org.apache.sshd.server.subsystem.sftp.Handle r5, r8, $r10, $r17, $r64;
        org.slf4j.Logger $r9, $r60;
        org.apache.sshd.server.subsystem.sftp.FileHandle r11, $r65, r66;
        java.nio.file.Path r12, $r15;
        int i0, $i1, i8, $i9, $i11, $i12, $i13, $i14, i15, i22, i31, varReplacer5172, varReplacer5175, varReplacer5187;
        long l2, l5, $l16, $l17, $l18, l23, l24, l25, l26, l28, l29;
        byte $b3, $b4, $b6, $b7, $b10, $b19, $b20, $b21, $b27, $b30;
        java.lang.Long $r13, $r14, $r16, $r18, $r61, $r62, $r63;
        java.io.EOFException $r19;
        java.lang.StringBuilder $r20, $r21, $r22, $r23, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r50, $r51, $r52, $r55, $r56, $r57;
        java.lang.IllegalArgumentException $r25, $r37;
        java.nio.file.AccessDeniedException $r49, $r54;
        java.lang.Object[] $r59;
        byte[] r67;

        nop;

        r2 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        i22 := @parameter0: int;

        r0 := @parameter1: java.lang.String;

        l23 := @parameter2: long;

        l2 := @parameter3: long;

        r1 := @parameter4: java.lang.String;

        l24 := @parameter5: long;

        z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        $r3 = r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map handles>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r5 = (org.apache.sshd.server.subsystem.sftp.Handle) $r4;

        if z0 == 0 goto label01;

        $r64 = r5;

        goto label02;

     label01:
        $r6 = r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map handles>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r64 = (org.apache.sshd.server.subsystem.sftp.Handle) $r7;

     label02:
        r8 = $r64;

        $r9 = r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z1 = interfaceinvoke $r9.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z1 == 0 goto label03;

        $r60 = r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r59 = newarray (java.lang.Object)[8];

        $r59[0] = "copy-data";

        $r59[1] = r0;

        $r59[2] = r5;

        $r61 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l23);

        $r59[3] = $r61;

        $r62 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l2);

        $r59[4] = $r62;

        $r59[5] = r1;

        $r59[6] = r8;

        $r63 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l24);

        $r59[7] = $r63;

        varReplacer5173 = "SSH_FXP_EXTENDED[{}] read={}[{}], read-offset={}, read-length={}, write={}[{}], write-offset={})";

        interfaceinvoke $r60.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(varReplacer5173, $r59);

     label03:
        $r10 = virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.subsystem.sftp.Handle validateHandle(java.lang.String,org.apache.sshd.server.subsystem.sftp.Handle,java.lang.Class)>(r0, r5, class "Lorg/apache/sshd/server/subsystem/sftp/FileHandle;");

        r11 = (org.apache.sshd.server.subsystem.sftp.FileHandle) $r10;

        r12 = virtualinvoke r11.<org.apache.sshd.server.subsystem.sftp.FileHandle: java.nio.file.Path getFile()>();

        i0 = virtualinvoke r11.<org.apache.sshd.server.subsystem.sftp.FileHandle: int getAccessMask()>();

        $i1 = i0 & 1;

        if $i1 == 1 goto label04;

        $r54 = new java.nio.file.AccessDeniedException;

        $r55 = new java.lang.StringBuilder;

        specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();

        varReplacer5189 = "File not opened for read: ";

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5189);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r12);

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r54.<java.nio.file.AccessDeniedException: void <init>(java.lang.String)>($r58);

        throw $r54;

     label04:
        $b3 = l2 cmp 0L;

        if $b3 < 0 goto label05;

        $z2 = 1;

        goto label06;

     label05:
        $z2 = 0;

     label06:
        $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l2);

        varReplacer5174 = "Invalid read length: %d";

        staticinvoke <org.apache.sshd.common.util.ValidateUtils: void checkTrue(boolean,java.lang.String,java.lang.Object)>($z2, varReplacer5174, $r13);

        $b4 = l23 cmp 0L;

        if $b4 < 0 goto label07;

        $z3 = 1;

        goto label08;

     label07:
        $z3 = 0;

     label08:
        $r14 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l23);

        varReplacer5179 = "Invalid read offset: %d";

        staticinvoke <org.apache.sshd.common.util.ValidateUtils: void checkTrue(boolean,java.lang.String,java.lang.Object)>($z3, varReplacer5179, $r14);

        $r15 = virtualinvoke r11.<org.apache.sshd.server.subsystem.sftp.FileHandle: java.nio.file.Path getFile()>();

        l5 = staticinvoke <java.nio.file.Files: long size(java.nio.file.Path)>($r15);

        l25 = l2;

        $b6 = l25 cmp 0L;

        if $b6 != 0 goto label09;

        l25 = l5 - l23;

        goto label10;

     label09:
        l26 = l23 + l25;

        $b7 = l26 cmp l5;

        if $b7 <= 0 goto label10;

        l25 = l5 - l23;

     label10:
        $b27 = l25 cmp 0L;

        if $b27 <= 0 goto label11;

        $z4 = 1;

        goto label12;

     label11:
        $z4 = 0;

     label12:
        $r16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l25);

        varReplacer5193 = "Non-positive effective copy data length: %d";

        staticinvoke <org.apache.sshd.common.util.ValidateUtils: void checkTrue(boolean,java.lang.String,java.lang.Object)>($z4, varReplacer5193, $r16);

        if z0 == 0 goto label13;

        $r65 = r11;

        goto label14;

     label13:
        $r17 = virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.subsystem.sftp.Handle validateHandle(java.lang.String,org.apache.sshd.server.subsystem.sftp.Handle,java.lang.Class)>(r1, r8, class "Lorg/apache/sshd/server/subsystem/sftp/FileHandle;");

        $r65 = (org.apache.sshd.server.subsystem.sftp.FileHandle) $r17;

     label14:
        r66 = $r65;

        i8 = virtualinvoke r66.<org.apache.sshd.server.subsystem.sftp.FileHandle: int getAccessMask()>();

        $i9 = i8 & 2;

        if $i9 == 2 goto label15;

        $r49 = new java.nio.file.AccessDeniedException;

        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        varReplacer5180 = "File not opened for write: ";

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5180);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r11);

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r49.<java.nio.file.AccessDeniedException: void <init>(java.lang.String)>($r53);

        throw $r49;

     label15:
        $b10 = l24 cmp 0L;

        if $b10 < 0 goto label16;

        $z5 = 1;

        goto label17;

     label16:
        $z5 = 0;

     label17:
        $r18 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l24);

        varReplacer5183 = "Invalid write offset: %d";

        staticinvoke <org.apache.sshd.common.util.ValidateUtils: void checkTrue(boolean,java.lang.String,java.lang.Object)>($z5, varReplacer5183, $r18);

        if z0 == 0 goto label20;

        l28 = l23 + l25;

        $b19 = l28 cmp l5;

        if $b19 <= 0 goto label18;

        l28 = l5;

     label18:
        l29 = l24 + l25;

        $b20 = l29 cmp l23;

        if $b20 <= 0 goto label19;

        $r37 = new java.lang.IllegalArgumentException;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        varReplacer5181 = "Write range end [";

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5181);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l24);

        varReplacer5178 = "-";

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5178);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l29);

        varReplacer5186 = "] overlaps with read range [";

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5186);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l23);

        varReplacer5190 = "-";

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5190);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l28);

        varReplacer5184 = "]";

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5184);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r37.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r48);

        throw $r37;

     label19:
        $b21 = l28 cmp l24;

        if $b21 <= 0 goto label20;

        $r25 = new java.lang.IllegalArgumentException;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        varReplacer5192 = "Read range end [";

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5192);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l23);

        varReplacer5176 = "-";

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5176);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l28);

        varReplacer5191 = "] overlaps with write range [";

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5191);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l24);

        varReplacer5182 = "-";

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5182);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l29);

        varReplacer5185 = "]";

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5185);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r25.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r36);

        throw $r25;

     label20:
        $i11 = (int) l25;

        varReplacer5187 = 8192;

        $i12 = staticinvoke <java.lang.Math: int min(int,int)>(varReplacer5187, $i11);

        r67 = newarray (byte)[$i12];

     label21:
        $b30 = l25 cmp 0L;

        if $b30 <= 0 goto label23;

        $i14 = lengthof r67;

        $i13 = (int) l25;

        i15 = staticinvoke <java.lang.Math: int min(int,int)>($i14, $i13);

        varReplacer5175 = 0;

        i31 = virtualinvoke r11.<org.apache.sshd.server.subsystem.sftp.FileHandle: int read(byte[],int,int,long)>(r67, varReplacer5175, i15, l23);

        if i31 >= 0 goto label22;

        $r19 = new java.io.EOFException;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        varReplacer5188 = "Premature EOF while still remaining ";

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5188);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l25);

        varReplacer5177 = " bytes";

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5177);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<java.io.EOFException: void <init>(java.lang.String)>($r24);

        throw $r19;

     label22:
        varReplacer5172 = 0;

        virtualinvoke r66.<org.apache.sshd.server.subsystem.sftp.FileHandle: void write(byte[],int,int,long)>(r67, varReplacer5172, i31, l24);

        $l16 = (long) i31;

        l25 = l25 - $l16;

        $l17 = (long) i31;

        l23 = l23 + $l17;

        $l18 = (long) i31;

        l24 = l24 + $l18;

        goto label21;

     label23:
        return;
    }

    protected void doCopyFile(org.apache.sshd.common.util.buffer.Buffer, int) throws java.io.IOException
    {
        org.apache.sshd.common.util.buffer.Buffer r0, $r4, $r7;
        java.lang.String r1, r2, varReplacer5195;
        boolean z0;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r3;
        int i0, varReplacer5194;
        java.lang.Throwable $r5, r6;
        java.lang.Exception $r8;

        nop;

        r3 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i0 := @parameter1: int;

        r1 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

        r2 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

        z0 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: boolean getBoolean()>();

     label1:
        virtualinvoke r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doCopyFile(int,java.lang.String,java.lang.String,boolean)>(i0, r1, r2, z0);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r6 = $r5;

        $r7 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        $r8 = (java.lang.Exception) r6;

        virtualinvoke r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,java.lang.Exception)>($r7, i0, $r8);

        return;

     label4:
        $r4 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        varReplacer5194 = 0;

        varReplacer5195 = "";

        virtualinvoke r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,int,java.lang.String)>($r4, i0, varReplacer5194, varReplacer5195);

        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    protected void doCopyFile(int, java.lang.String, java.lang.String, boolean) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        org.slf4j.Logger $r1, $r9;
        boolean $z0, z1;
        int i0;
        java.lang.String r2, r3, varReplacer5196;
        java.nio.file.StandardCopyOption $r4;
        java.lang.Object[] $r8;
        java.lang.Boolean $r10;
        java.util.List $r11;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        i0 := @parameter0: int;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        z1 := @parameter3: boolean;

        $r1 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r1.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r9 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r8 = newarray (java.lang.Object)[4];

        $r8[0] = "copy-file";

        $r8[1] = r2;

        $r8[2] = r3;

        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z1);

        $r8[3] = $r10;

        varReplacer5196 = "SSH_FXP_EXTENDED[{}] (src={}, dst={}, overwrite=0x{})";

        interfaceinvoke $r9.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(varReplacer5196, $r8);

     label1:
        if z1 == 0 goto label2;

        $r4 = <java.nio.file.StandardCopyOption: java.nio.file.StandardCopyOption REPLACE_EXISTING>;

        $r11 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r4);

        goto label3;

     label2:
        $r11 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

     label3:
        virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doCopyFile(int,java.lang.String,java.lang.String,java.util.Collection)>(i0, r2, r3, $r11);

        return;
    }

    protected void doCopyFile(int, java.lang.String, java.lang.String, java.util.Collection) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        java.lang.String r1, r3;
        java.nio.file.Path r2, r4;
        java.util.Collection r5;
        boolean $z0;
        int $i0, i1;
        java.nio.file.CopyOption[] $r6, $r11;
        java.lang.Object[] $r7;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        i1 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r5 := @parameter3: java.util.Collection;

        r2 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.nio.file.Path resolveFile(java.lang.String)>(r1);

        r4 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.nio.file.Path resolveFile(java.lang.String)>(r3);

        $z0 = staticinvoke <org.apache.sshd.common.util.GenericUtils: boolean isEmpty(java.util.Collection)>(r5);

        if $z0 == 0 goto label1;

        $r11 = <org.apache.sshd.common.util.io.IoUtils: java.nio.file.CopyOption[] EMPTY_COPY_OPTIONS>;

        goto label2;

     label1:
        $i0 = interfaceinvoke r5.<java.util.Collection: int size()>();

        $r6 = newarray (java.nio.file.CopyOption)[$i0];

        $r7 = interfaceinvoke r5.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r6);

        $r11 = (java.nio.file.CopyOption[]) $r7;

     label2:
        staticinvoke <java.nio.file.Files: java.nio.file.Path copy(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>(r2, r4, $r11);

        return;
    }

    protected void doStat(org.apache.sshd.common.util.buffer.Buffer, int) throws java.io.IOException
    {
        org.apache.sshd.common.util.buffer.Buffer r0, $r4, $r7;
        java.lang.String r1;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r2;
        int $i0, i1, i2;
        java.util.Map r3;
        java.lang.Throwable $r5, r6;
        java.lang.Exception $r8;

        nop;

        r2 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i1 := @parameter1: int;

        r1 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

        i2 = 65535;

        $i0 = r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int version>;

        if $i0 < 4 goto label1;

        i2 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: int getInt()>();

     label1:
        r3 = virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map doStat(int,java.lang.String,int)>(i1, r1, i2);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r6 = $r5;

        $r7 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        $r8 = (java.lang.Exception) r6;

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,java.lang.Exception)>($r7, i1, $r8);

        return;

     label4:
        $r4 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendAttrs(org.apache.sshd.common.util.buffer.Buffer,int,java.util.Map)>($r4, i1, r3);

        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    protected java.util.Map doStat(int, java.lang.String, int) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        org.slf4j.Logger $r1, $r6;
        boolean $z0;
        java.lang.String r2, $r7, varReplacer5198;
        java.nio.file.Path r3;
        int i0, i1, varReplacer5197;
        java.nio.file.LinkOption[] $r4;
        java.util.Map $r5;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        i1 := @parameter0: int;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r1 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r1.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r6 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        varReplacer5198 = "Received SSH_FXP_STAT (path={}, flags=0x{})";

        interfaceinvoke $r6.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>(varReplacer5198, r2, $r7);

     label1:
        r3 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.nio.file.Path resolveFile(java.lang.String)>(r2);

        varReplacer5197 = 0;

        $r4 = staticinvoke <org.apache.sshd.common.util.io.IoUtils: java.nio.file.LinkOption[] getLinkOptions(boolean)>(varReplacer5197);

        $r5 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map resolveFileAttributes(java.nio.file.Path,int,java.nio.file.LinkOption[])>(r3, i0, $r4);

        return $r5;
    }

    protected void doRealPath(org.apache.sshd.common.util.buffer.Buffer, int) throws java.io.IOException
    {
        org.apache.sshd.common.util.buffer.Buffer r0, $r9, $r23;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r1;
        org.slf4j.Logger $r2, $r14, $r16, $r26, $r28;
        boolean $z0, $z1, $z2, $z3, $z5;
        int $i0, $i1, i2, i3, $i4, varReplacer5199, varReplacer5200, varReplacer5201, varReplacer5205;
        java.util.LinkedList r4, $r38;
        java.lang.Object $r5, $r7, $r10;
        java.nio.file.Path r6, $r11;
        java.lang.Boolean r8;
        java.lang.String $r13, $r19, $r21, $r30, $r31, r32, r33, varReplacer5202, varReplacer5203, varReplacer5204;
        java.lang.StringBuilder $r17, $r18, $r39;
        java.nio.file.LinkOption[] $r20, r35;
        java.lang.Throwable $r22, $r24, r25, r37;
        java.lang.Object[] $r27;
        java.lang.Class $r29;
        java.util.Map r34;
        org.apache.sshd.common.util.Pair r36;
        java.io.FileNotFoundException $r40;
        java.io.IOException $r41;
        java.lang.Exception $r42;

        nop;

        r1 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i2 := @parameter1: int;

        r32 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

        $r2 = r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        varReplacer5204 = "Received SSH_FXP_REALPATH (path={})";

        interfaceinvoke $r2.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>(varReplacer5204, r32);

        r33 = staticinvoke <org.apache.sshd.common.util.GenericUtils: java.lang.String trimToEmpty(java.lang.String)>(r32);

        $z0 = staticinvoke <org.apache.sshd.common.util.GenericUtils: boolean isEmpty(java.lang.CharSequence)>(r33);

        if $z0 == 0 goto label01;

        r33 = ".";

     label01:
        r34 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

     label02:
        varReplacer5201 = 0;

        r35 = staticinvoke <org.apache.sshd.common.util.io.IoUtils: java.nio.file.LinkOption[] getLinkOptions(boolean)>(varReplacer5201);

        $i0 = r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int version>;

        if $i0 >= 6 goto label03;

        r36 = virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.common.util.Pair doRealPathV345(int,java.lang.String,java.nio.file.LinkOption[])>(i2, r33, r35);

        goto label16;

     label03:
        i3 = 0;

        $i1 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: int available()>();

        if $i1 <= 0 goto label04;

        i3 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: int getUByte()>();

     label04:
        $r38 = new java.util.LinkedList;

        specialinvoke $r38.<java.util.LinkedList: void <init>()>();

        r4 = $r38;

     label05:
        $i4 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: int available()>();

        if $i4 <= 0 goto label06;

        $r21 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

        interfaceinvoke r4.<java.util.Collection: boolean add(java.lang.Object)>($r21);

        goto label05;

     label06:
        r36 = virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.common.util.Pair doRealPathV6(int,java.lang.String,java.util.Collection,java.nio.file.LinkOption[])>(i2, r33, r4, r35);

        $r5 = virtualinvoke r36.<org.apache.sshd.common.util.Pair: java.lang.Object getFirst()>();

        r6 = (java.nio.file.Path) $r5;

        $r7 = virtualinvoke r36.<org.apache.sshd.common.util.Pair: java.lang.Object getSecond()>();

        r8 = (java.lang.Boolean) $r7;

        if i3 != 2 goto label13;

        if r8 != null goto label07;

        varReplacer5200 = 65535;

        r34 = virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map handleUnknownStatusFileAttributes(java.nio.file.Path,int,java.nio.file.LinkOption[])>(r6, varReplacer5200, r35);

        goto label16;

     label07:
        $z2 = virtualinvoke r8.<java.lang.Boolean: boolean booleanValue()>();

        if $z2 == 0 goto label12;

     label08:
        varReplacer5205 = 0;

        $r20 = staticinvoke <org.apache.sshd.common.util.io.IoUtils: java.nio.file.LinkOption[] getLinkOptions(boolean)>(varReplacer5205);

        r34 = virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map getAttributes(java.nio.file.Path,java.nio.file.LinkOption[])>(r6, $r20);

     label09:
        goto label16;

     label10:
        $r24 := @caughtexception;

        r25 = $r24;

        $r26 = r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z5 = interfaceinvoke $r26.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z5 == 0 goto label11;

        $r28 = r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r27 = newarray (java.lang.Object)[3];

        $r29 = virtualinvoke r25.<java.lang.Object: java.lang.Class getClass()>();

        $r30 = virtualinvoke $r29.<java.lang.Class: java.lang.String getSimpleName()>();

        $r27[0] = $r30;

        $r27[1] = r6;

        $r41 = (java.io.IOException) r25;

        $r31 = virtualinvoke $r41.<java.io.IOException: java.lang.String getMessage()>();

        $r27[2] = $r31;

        varReplacer5202 = "Failed ({}) to retrieve attributes of {}: {}";

        interfaceinvoke $r28.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(varReplacer5202, $r27);

     label11:
        goto label16;

     label12:
        $r14 = r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z3 = interfaceinvoke $r14.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z3 == 0 goto label16;

        $r16 = r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        varReplacer5203 = "Dummy attributes for non-existing file: ";

        $r17 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5203);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r16.<org.slf4j.Logger: void debug(java.lang.String)>($r19);

        goto label16;

     label13:
        if i3 != 3 goto label16;

        if r8 != null goto label14;

        varReplacer5199 = 65535;

        r34 = virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map handleUnknownStatusFileAttributes(java.nio.file.Path,int,java.nio.file.LinkOption[])>(r6, varReplacer5199, r35);

        goto label16;

     label14:
        $z1 = virtualinvoke r8.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label15;

        r34 = virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map getAttributes(java.nio.file.Path,java.nio.file.LinkOption[])>(r6, r35);

        goto label16;

     label15:
        $r40 = new java.io.FileNotFoundException;

        $r13 = interfaceinvoke r6.<java.nio.file.Path: java.lang.String toString()>();

        specialinvoke $r40.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r13);

        throw $r40;

     label16:
        goto label18;

     label17:
        $r22 := @caughtexception;

        r37 = $r22;

        $r23 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        $r42 = (java.lang.Exception) r37;

        virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,java.lang.Exception)>($r23, i2, $r42);

        return;

     label18:
        $r9 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        $r10 = virtualinvoke r36.<org.apache.sshd.common.util.Pair: java.lang.Object getFirst()>();

        $r11 = (java.nio.file.Path) $r10;

        virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendPath(org.apache.sshd.common.util.buffer.Buffer,int,java.nio.file.Path,java.util.Map)>($r9, i2, $r11, r34);

        return;

        catch java.io.IOException from label08 to label09 with label10;
        catch java.io.IOException from label02 to label16 with label17;
        catch java.lang.RuntimeException from label02 to label16 with label17;
    }

    protected transient org.apache.sshd.common.util.Pair doRealPathV6(int, java.lang.String, java.util.Collection, java.nio.file.LinkOption[]) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        java.util.Collection r1;
        int i0, i1, $i2, $i3, $i4, varReplacer5206;
        java.nio.file.LinkOption[] r2;
        org.apache.sshd.common.util.Pair $r3;
        java.lang.StringBuilder $r4, r5, $r10;
        java.util.Iterator r7;
        boolean $z0;
        java.lang.Object $r8;
        java.lang.String r9, r12;
        java.nio.file.Path r13;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        i1 := @parameter0: int;

        r12 := @parameter1: java.lang.String;

        r1 := @parameter2: java.util.Collection;

        r2 := @parameter3: java.nio.file.LinkOption[];

        r13 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.nio.file.Path resolveFile(java.lang.String)>(r12);

        i0 = staticinvoke <org.apache.sshd.common.util.GenericUtils: int size(java.util.Collection)>(r1);

        if i0 <= 0 goto label3;

        $r4 = new java.lang.StringBuilder;

        $i2 = staticinvoke <org.apache.sshd.common.util.GenericUtils: int length(java.lang.CharSequence)>(r12);

        $i3 = i0 * 8;

        $i4 = $i2 + $i3;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(int)>($i4);

        r5 = $r4;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);

        r7 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r8 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (java.lang.String) $r8;

        r13 = interfaceinvoke r13.<java.nio.file.Path: java.nio.file.Path resolve(java.lang.String)>(r9);

        varReplacer5206 = 47;

        $r10 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(varReplacer5206);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        goto label1;

     label2:
        r12 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        $r3 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.common.util.Pair validateRealPath(int,java.lang.String,java.nio.file.Path,java.nio.file.LinkOption[])>(i1, r12, r13, r2);

        return $r3;
    }

    protected transient org.apache.sshd.common.util.Pair doRealPathV345(int, java.lang.String, java.nio.file.LinkOption[]) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        int i0;
        java.lang.String r1;
        java.nio.file.Path $r2;
        java.nio.file.LinkOption[] r3;
        org.apache.sshd.common.util.Pair $r4;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r3 := @parameter2: java.nio.file.LinkOption[];

        $r2 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.nio.file.Path resolveFile(java.lang.String)>(r1);

        $r4 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.common.util.Pair validateRealPath(int,java.lang.String,java.nio.file.Path,java.nio.file.LinkOption[])>(i0, r1, $r2, r3);

        return $r4;
    }

    protected transient org.apache.sshd.common.util.Pair validateRealPath(int, java.lang.String, java.nio.file.Path, java.nio.file.LinkOption[]) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        java.nio.file.Path r1, r2;
        java.nio.file.LinkOption[] r3;
        java.lang.Boolean r4;
        org.apache.sshd.common.util.Pair $r5;
        int i0;
        java.lang.String r6;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        i0 := @parameter0: int;

        r6 := @parameter1: java.lang.String;

        r1 := @parameter2: java.nio.file.Path;

        r3 := @parameter3: java.nio.file.LinkOption[];

        r2 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.nio.file.Path normalize(java.nio.file.Path)>(r1);

        r4 = staticinvoke <org.apache.sshd.common.util.io.IoUtils: java.lang.Boolean checkFileExists(java.nio.file.Path,java.nio.file.LinkOption[])>(r2, r3);

        $r5 = new org.apache.sshd.common.util.Pair;

        specialinvoke $r5.<org.apache.sshd.common.util.Pair: void <init>(java.lang.Object,java.lang.Object)>(r2, r4);

        return $r5;
    }

    protected void doRemoveDirectory(org.apache.sshd.common.util.buffer.Buffer, int) throws java.io.IOException
    {
        org.apache.sshd.common.util.buffer.Buffer r0, $r4, $r7;
        java.lang.String r1, varReplacer5208;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r2;
        int i0, varReplacer5207, varReplacer5209;
        java.nio.file.LinkOption[] $r3;
        java.lang.Throwable $r5, r6;
        java.lang.Exception $r8;

        nop;

        r2 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i0 := @parameter1: int;

        r1 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

     label1:
        varReplacer5209 = 0;

        $r3 = staticinvoke <org.apache.sshd.common.util.io.IoUtils: java.nio.file.LinkOption[] getLinkOptions(boolean)>(varReplacer5209);

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doRemoveDirectory(int,java.lang.String,java.nio.file.LinkOption[])>(i0, r1, $r3);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r6 = $r5;

        $r7 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        $r8 = (java.lang.Exception) r6;

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,java.lang.Exception)>($r7, i0, $r8);

        return;

     label4:
        $r4 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        varReplacer5207 = 0;

        varReplacer5208 = "";

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,int,java.lang.String)>($r4, i0, varReplacer5207, varReplacer5208);

        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    protected transient void doRemoveDirectory(int, java.lang.String, java.nio.file.LinkOption[]) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        java.lang.String r1, $r6, varReplacer5210;
        java.nio.file.Path r2;
        org.slf4j.Logger $r3;
        java.nio.file.LinkOption[] r4;
        boolean $z0;
        java.nio.file.NotDirectoryException $r5;
        int i0;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r4 := @parameter2: java.nio.file.LinkOption[];

        r2 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.nio.file.Path resolveFile(java.lang.String)>(r1);

        $r3 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        varReplacer5210 = "Received SSH_FXP_RMDIR (path={})[{}]";

        interfaceinvoke $r3.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>(varReplacer5210, r1, r2);

        $z0 = staticinvoke <java.nio.file.Files: boolean isDirectory(java.nio.file.Path,java.nio.file.LinkOption[])>(r2, r4);

        if $z0 == 0 goto label1;

        staticinvoke <java.nio.file.Files: void delete(java.nio.file.Path)>(r2);

        goto label2;

     label1:
        $r5 = new java.nio.file.NotDirectoryException;

        $r6 = interfaceinvoke r2.<java.nio.file.Path: java.lang.String toString()>();

        specialinvoke $r5.<java.nio.file.NotDirectoryException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label2:
        return;
    }

    protected void doMakeDirectory(org.apache.sshd.common.util.buffer.Buffer, int) throws java.io.IOException
    {
        org.apache.sshd.common.util.buffer.Buffer r0, $r5, $r8;
        java.lang.String r1, varReplacer5213;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r2;
        java.util.Map r3;
        int i0, varReplacer5211, varReplacer5212;
        java.nio.file.LinkOption[] $r4;
        java.lang.Throwable $r6, r7;
        java.lang.Exception $r9;

        nop;

        r2 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i0 := @parameter1: int;

        r1 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

        r3 = virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map readAttrs(org.apache.sshd.common.util.buffer.Buffer)>(r0);

     label1:
        varReplacer5211 = 0;

        $r4 = staticinvoke <org.apache.sshd.common.util.io.IoUtils: java.nio.file.LinkOption[] getLinkOptions(boolean)>(varReplacer5211);

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doMakeDirectory(int,java.lang.String,java.util.Map,java.nio.file.LinkOption[])>(i0, r1, r3, $r4);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        r7 = $r6;

        $r8 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        $r9 = (java.lang.Exception) r7;

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,java.lang.Exception)>($r8, i0, $r9);

        return;

     label4:
        $r5 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        varReplacer5212 = 0;

        varReplacer5213 = "";

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,int,java.lang.String)>($r5, i0, varReplacer5212, varReplacer5213);

        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    protected transient void doMakeDirectory(int, java.lang.String, java.util.Map, java.nio.file.LinkOption[]) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        java.lang.String r1, $r11, $r14, $r16, $r17, $r22, varReplacer5214, varReplacer5215, varReplacer5216, varReplacer5217;
        java.nio.file.Path r2;
        org.slf4j.Logger $r3, $r24;
        boolean $z0, $z1, $z2;
        java.nio.file.LinkOption[] r4;
        java.lang.Boolean r5;
        java.nio.file.attribute.FileAttribute[] $r6;
        java.util.Map r8;
        java.io.FileNotFoundException $r9;
        java.lang.StringBuilder $r10, $r12, $r13, $r19, $r20, $r21;
        java.nio.file.FileAlreadyExistsException $r15;
        java.nio.file.AccessDeniedException $r18;
        java.lang.Object[] $r23;
        int i0;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r8 := @parameter2: java.util.Map;

        r4 := @parameter3: java.nio.file.LinkOption[];

        r2 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.nio.file.Path resolveFile(java.lang.String)>(r1);

        $r3 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r3.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r24 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r23 = newarray (java.lang.Object)[3];

        $r23[0] = r1;

        $r23[1] = r2;

        $r23[2] = r8;

        varReplacer5217 = "Received SSH_FXP_MKDIR (path={}[{}], attrs={})";

        interfaceinvoke $r24.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(varReplacer5217, $r23);

     label1:
        r5 = staticinvoke <org.apache.sshd.common.util.io.IoUtils: java.lang.Boolean checkFileExists(java.nio.file.Path,java.nio.file.LinkOption[])>(r2, r4);

        if r5 != null goto label2;

        $r18 = new java.nio.file.AccessDeniedException;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        varReplacer5214 = "Cannot validate make-directory existence for ";

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5214);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.nio.file.AccessDeniedException: void <init>(java.lang.String)>($r22);

        throw $r18;

     label2:
        $z1 = virtualinvoke r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label4;

        $z2 = staticinvoke <java.nio.file.Files: boolean isDirectory(java.nio.file.Path,java.nio.file.LinkOption[])>(r2, r4);

        if $z2 == 0 goto label3;

        $r15 = new java.nio.file.FileAlreadyExistsException;

        $r16 = interfaceinvoke r2.<java.nio.file.Path: java.lang.String toString()>();

        $r17 = interfaceinvoke r2.<java.nio.file.Path: java.lang.String toString()>();

        varReplacer5216 = "Target directory already exists";

        specialinvoke $r15.<java.nio.file.FileAlreadyExistsException: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r16, $r17, varReplacer5216);

        throw $r15;

     label3:
        $r9 = new java.io.FileNotFoundException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = interfaceinvoke r2.<java.nio.file.Path: java.lang.String toString()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        varReplacer5215 = " already exists as a file";

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5215);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r14);

        throw $r9;

     label4:
        $r6 = newarray (java.nio.file.attribute.FileAttribute)[0];

        staticinvoke <java.nio.file.Files: java.nio.file.Path createDirectory(java.nio.file.Path,java.nio.file.attribute.FileAttribute[])>(r2, $r6);

        virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void setAttributes(java.nio.file.Path,java.util.Map)>(r2, r8);

        return;
    }

    protected void doRemove(org.apache.sshd.common.util.buffer.Buffer, int) throws java.io.IOException
    {
        org.apache.sshd.common.util.buffer.Buffer r0, $r4, $r7;
        java.lang.String r1, varReplacer5220;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r2;
        int i0, varReplacer5218, varReplacer5219;
        java.nio.file.LinkOption[] $r3;
        java.lang.Throwable $r5, r6;
        java.lang.Exception $r8;

        nop;

        r2 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i0 := @parameter1: int;

        r1 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

     label1:
        varReplacer5218 = 0;

        $r3 = staticinvoke <org.apache.sshd.common.util.io.IoUtils: java.nio.file.LinkOption[] getLinkOptions(boolean)>(varReplacer5218);

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doRemove(int,java.lang.String,java.nio.file.LinkOption[])>(i0, r1, $r3);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r6 = $r5;

        $r7 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        $r8 = (java.lang.Exception) r6;

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,java.lang.Exception)>($r7, i0, $r8);

        return;

     label4:
        $r4 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        varReplacer5219 = 0;

        varReplacer5220 = "";

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,int,java.lang.String)>($r4, i0, varReplacer5219, varReplacer5220);

        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    protected transient void doRemove(int, java.lang.String, java.nio.file.LinkOption[]) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        java.lang.String r1, $r8, $r11, $r13, $r18, varReplacer5221, varReplacer5222, varReplacer5223;
        java.nio.file.Path r2;
        org.slf4j.Logger $r3, $r19;
        boolean $z0, $z1, $z2;
        java.nio.file.LinkOption[] r4;
        java.lang.Boolean r5;
        java.io.FileNotFoundException $r6, $r12;
        java.lang.StringBuilder $r7, $r9, $r10, $r15, $r16, $r17;
        java.nio.file.AccessDeniedException $r14;
        int i0;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r4 := @parameter2: java.nio.file.LinkOption[];

        r2 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.nio.file.Path resolveFile(java.lang.String)>(r1);

        $r3 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r3.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r19 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        varReplacer5221 = "Received SSH_FXP_REMOVE (path={}[{}])";

        interfaceinvoke $r19.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>(varReplacer5221, r1, r2);

     label1:
        r5 = staticinvoke <org.apache.sshd.common.util.io.IoUtils: java.lang.Boolean checkFileExists(java.nio.file.Path,java.nio.file.LinkOption[])>(r2, r4);

        if r5 != null goto label2;

        $r14 = new java.nio.file.AccessDeniedException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        varReplacer5223 = "Cannot determine existence of remove candidate: ";

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5223);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.nio.file.AccessDeniedException: void <init>(java.lang.String)>($r18);

        throw $r14;

     label2:
        $z1 = virtualinvoke r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 != 0 goto label3;

        $r12 = new java.io.FileNotFoundException;

        $r13 = interfaceinvoke r2.<java.nio.file.Path: java.lang.String toString()>();

        specialinvoke $r12.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r13);

        throw $r12;

     label3:
        $z2 = staticinvoke <java.nio.file.Files: boolean isDirectory(java.nio.file.Path,java.nio.file.LinkOption[])>(r2, r4);

        if $z2 == 0 goto label4;

        $r6 = new java.io.FileNotFoundException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = interfaceinvoke r2.<java.nio.file.Path: java.lang.String toString()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        varReplacer5222 = " is as a folder";

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5222);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r11);

        throw $r6;

     label4:
        staticinvoke <java.nio.file.Files: void delete(java.nio.file.Path)>(r2);

        return;
    }

    protected void doReadDir(org.apache.sshd.common.util.buffer.Buffer, int) throws java.io.IOException
    {
        org.apache.sshd.common.util.buffer.Buffer r0, $r32, r34;
        java.lang.String r1, $r18, $r20, $r22, $r24, $r29, varReplacer5224, varReplacer5225, varReplacer5226, varReplacer5228, varReplacer5229, varReplacer5231, varReplacer5233, varReplacer5234;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r2;
        java.util.Map $r3;
        java.lang.Object $r4;
        org.apache.sshd.server.subsystem.sftp.Handle r5, $r7;
        org.slf4j.Logger $r6, $r12, $r36;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        java.nio.file.Path r8;
        java.nio.file.LinkOption[] r9;
        java.lang.Boolean r10;
        int i0, i1, i2, $i4, varReplacer5230, varReplacer5232, varReplacer5235;
        java.lang.Object[] $r11;
        java.lang.Integer $r13;
        java.lang.StringBuilder $r17, $r19, $r27, $r28, $r39, $r43;
        java.lang.Throwable $r31, r37;
        org.apache.sshd.server.subsystem.sftp.DirectoryHandle r33;
        long $l3, varReplacer5227;
        org.apache.sshd.server.session.ServerSession $r35;
        java.io.EOFException $r38, $r45;
        java.nio.file.AccessDeniedException $r40, $r44;
        java.io.FileNotFoundException $r41;
        java.nio.file.NotDirectoryException $r42;
        java.lang.Exception $r46;

        nop;

        r2 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i0 := @parameter1: int;

        r1 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

        $r3 = r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map handles>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r5 = (org.apache.sshd.server.subsystem.sftp.Handle) $r4;

        $r6 = r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        varReplacer5226 = "Received SSH_FXP_READDIR (handle={}[{}])";

        interfaceinvoke $r6.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>(varReplacer5226, r1, r5);

     label01:
        $r7 = virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.subsystem.sftp.Handle validateHandle(java.lang.String,org.apache.sshd.server.subsystem.sftp.Handle,java.lang.Class)>(r1, r5, class "Lorg/apache/sshd/server/subsystem/sftp/DirectoryHandle;");

        r33 = (org.apache.sshd.server.subsystem.sftp.DirectoryHandle) $r7;

        $z0 = virtualinvoke r33.<org.apache.sshd.server.subsystem.sftp.DirectoryHandle: boolean isDone()>();

        if $z0 == 0 goto label02;

        $r38 = new java.io.EOFException;

        varReplacer5224 = "Directory reading is done";

        specialinvoke $r38.<java.io.EOFException: void <init>(java.lang.String)>(varReplacer5224);

        throw $r38;

     label02:
        r8 = virtualinvoke r33.<org.apache.sshd.server.subsystem.sftp.DirectoryHandle: java.nio.file.Path getFile()>();

        varReplacer5235 = 0;

        r9 = staticinvoke <org.apache.sshd.common.util.io.IoUtils: java.nio.file.LinkOption[] getLinkOptions(boolean)>(varReplacer5235);

        r10 = staticinvoke <org.apache.sshd.common.util.io.IoUtils: java.lang.Boolean checkFileExists(java.nio.file.Path,java.nio.file.LinkOption[])>(r8, r9);

        if r10 != null goto label03;

        $r40 = new java.nio.file.AccessDeniedException;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        varReplacer5233 = "Cannot determine existence of read-dir for ";

        $r27 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5233);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r40.<java.nio.file.AccessDeniedException: void <init>(java.lang.String)>($r29);

        throw $r40;

     label03:
        $z1 = virtualinvoke r10.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 != 0 goto label04;

        $r41 = new java.io.FileNotFoundException;

        $r24 = interfaceinvoke r8.<java.nio.file.Path: java.lang.String toString()>();

        specialinvoke $r41.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r24);

        throw $r41;

     label04:
        $z2 = staticinvoke <java.nio.file.Files: boolean isDirectory(java.nio.file.Path,java.nio.file.LinkOption[])>(r8, r9);

        if $z2 != 0 goto label05;

        $r42 = new java.nio.file.NotDirectoryException;

        $r22 = interfaceinvoke r8.<java.nio.file.Path: java.lang.String toString()>();

        specialinvoke $r42.<java.nio.file.NotDirectoryException: void <init>(java.lang.String)>($r22);

        throw $r42;

     label05:
        $z3 = staticinvoke <java.nio.file.Files: boolean isReadable(java.nio.file.Path)>(r8);

        if $z3 != 0 goto label06;

        $r44 = new java.nio.file.AccessDeniedException;

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        varReplacer5229 = "Not readable: ";

        $r17 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5229);

        $r18 = interfaceinvoke r8.<java.nio.file.Path: java.lang.String toString()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r44.<java.nio.file.AccessDeniedException: void <init>(java.lang.String)>($r20);

        throw $r44;

     label06:
        $z4 = virtualinvoke r33.<org.apache.sshd.server.subsystem.sftp.DirectoryHandle: boolean isSendDot()>();

        if $z4 != 0 goto label07;

        $z8 = virtualinvoke r33.<org.apache.sshd.server.subsystem.sftp.DirectoryHandle: boolean isSendDotDot()>();

        if $z8 != 0 goto label07;

        $z9 = virtualinvoke r33.<org.apache.sshd.server.subsystem.sftp.DirectoryHandle: boolean hasNext()>();

        if $z9 == 0 goto label10;

     label07:
        r34 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        varReplacer5230 = 104;

        virtualinvoke r34.<org.apache.sshd.common.util.buffer.Buffer: void putByte(byte)>(varReplacer5230);

        $l3 = (long) i0;

        virtualinvoke r34.<org.apache.sshd.common.util.buffer.Buffer: void putInt(long)>($l3);

        i1 = virtualinvoke r34.<org.apache.sshd.common.util.buffer.Buffer: int wpos()>();

        varReplacer5227 = 0L;

        virtualinvoke r34.<org.apache.sshd.common.util.buffer.Buffer: void putInt(long)>(varReplacer5227);

        $r35 = r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession session>;

        varReplacer5231 = "sftp-max-packet-length";

        varReplacer5232 = 16384;

        $i4 = staticinvoke <org.apache.sshd.common.FactoryManagerUtils: int getIntProperty(org.apache.sshd.common.session.Session,java.lang.String,int)>($r35, varReplacer5231, varReplacer5232);

        i2 = virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int doReadDir(int,org.apache.sshd.server.subsystem.sftp.DirectoryHandle,org.apache.sshd.common.util.buffer.Buffer,int)>(i0, r33, r34, $i4);

        staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: void updateLengthPlaceholder(org.apache.sshd.common.util.buffer.Buffer,int,int)>(r34, i1, i2);

        $r36 = r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z10 = interfaceinvoke $r36.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z10 == 0 goto label08;

        $r12 = r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r11 = newarray (java.lang.Object)[3];

        $r11[0] = r1;

        $r11[1] = r5;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r11[2] = $r13;

        varReplacer5228 = "doReadDir({})[{}] - sent {} entries";

        interfaceinvoke $r12.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(varReplacer5228, $r11);

     label08:
        $z5 = virtualinvoke r33.<org.apache.sshd.server.subsystem.sftp.DirectoryHandle: boolean isSendDot()>();

        if $z5 != 0 goto label09;

        $z6 = virtualinvoke r33.<org.apache.sshd.server.subsystem.sftp.DirectoryHandle: boolean isSendDotDot()>();

        if $z6 != 0 goto label09;

        $z7 = virtualinvoke r33.<org.apache.sshd.server.subsystem.sftp.DirectoryHandle: boolean hasNext()>();

        if $z7 != 0 goto label09;

        virtualinvoke r33.<org.apache.sshd.server.subsystem.sftp.DirectoryHandle: void markDone()>();

     label09:
        goto label11;

     label10:
        virtualinvoke r33.<org.apache.sshd.server.subsystem.sftp.DirectoryHandle: void markDone()>();

        $r45 = new java.io.EOFException;

        varReplacer5234 = "Empty directory";

        specialinvoke $r45.<java.io.EOFException: void <init>(java.lang.String)>(varReplacer5234);

        throw $r45;

     label11:
        varReplacer5225 = "No reply buffer created";

        staticinvoke <org.apache.sshd.common.util.ValidateUtils: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(r34, varReplacer5225);

     label12:
        goto label14;

     label13:
        $r31 := @caughtexception;

        r37 = $r31;

        $r32 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        $r46 = (java.lang.Exception) r37;

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,java.lang.Exception)>($r32, i0, $r46);

        return;

     label14:
        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void send(org.apache.sshd.common.util.buffer.Buffer)>(r34);

        return;

        catch java.io.IOException from label01 to label12 with label13;
        catch java.lang.RuntimeException from label01 to label12 with label13;
    }

    protected void doOpenDir(org.apache.sshd.common.util.buffer.Buffer, int) throws java.io.IOException
    {
        org.apache.sshd.common.util.buffer.Buffer r0, $r5, $r8;
        java.lang.String r1, r4;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r2;
        int i0, varReplacer5236;
        java.nio.file.LinkOption[] $r3;
        java.lang.Throwable $r6, r7;
        java.lang.Exception $r9;

        nop;

        r2 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i0 := @parameter1: int;

        r1 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

     label1:
        varReplacer5236 = 0;

        $r3 = staticinvoke <org.apache.sshd.common.util.io.IoUtils: java.nio.file.LinkOption[] getLinkOptions(boolean)>(varReplacer5236);

        r4 = virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.lang.String doOpenDir(int,java.lang.String,java.nio.file.LinkOption[])>(i0, r1, $r3);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        r7 = $r6;

        $r8 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        $r9 = (java.lang.Exception) r7;

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,java.lang.Exception)>($r8, i0, $r9);

        return;

     label4:
        $r5 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendHandle(org.apache.sshd.common.util.buffer.Buffer,int,java.lang.String)>($r5, i0, r4);

        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    protected transient java.lang.String doOpenDir(int, java.lang.String, java.nio.file.LinkOption[]) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        java.lang.String r1, r6, $r14, $r21, varReplacer5237, varReplacer5238, varReplacer5239;
        java.nio.file.Path r2;
        org.slf4j.Logger $r3;
        java.nio.file.LinkOption[] r4;
        java.lang.Boolean r5;
        boolean $z0, $z1, $z2;
        org.apache.sshd.server.subsystem.sftp.DirectoryHandle $r7;
        java.util.Map $r8;
        java.nio.file.AccessDeniedException $r10, $r17;
        java.lang.StringBuilder $r11, $r12, $r13, $r18, $r19, $r20;
        java.nio.file.NotDirectoryException $r15;
        java.io.FileNotFoundException $r16;
        int i0;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r4 := @parameter2: java.nio.file.LinkOption[];

        r2 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.nio.file.Path resolveNormalizedLocation(java.lang.String)>(r1);

        $r3 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        varReplacer5237 = "Received SSH_FXP_OPENDIR (path={})[{}]";

        interfaceinvoke $r3.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>(varReplacer5237, r1, r2);

        r5 = staticinvoke <org.apache.sshd.common.util.io.IoUtils: java.lang.Boolean checkFileExists(java.nio.file.Path,java.nio.file.LinkOption[])>(r2, r4);

        if r5 != null goto label1;

        $r17 = new java.nio.file.AccessDeniedException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        varReplacer5238 = "Cannot determine open-dir existence for ";

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5238);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.nio.file.AccessDeniedException: void <init>(java.lang.String)>($r21);

        throw $r17;

     label1:
        $z0 = virtualinvoke r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

        $r16 = new java.io.FileNotFoundException;

        specialinvoke $r16.<java.io.FileNotFoundException: void <init>(java.lang.String)>(r1);

        throw $r16;

     label2:
        $z1 = staticinvoke <java.nio.file.Files: boolean isDirectory(java.nio.file.Path,java.nio.file.LinkOption[])>(r2, r4);

        if $z1 != 0 goto label3;

        $r15 = new java.nio.file.NotDirectoryException;

        specialinvoke $r15.<java.nio.file.NotDirectoryException: void <init>(java.lang.String)>(r1);

        throw $r15;

     label3:
        $z2 = staticinvoke <java.nio.file.Files: boolean isReadable(java.nio.file.Path)>(r2);

        if $z2 != 0 goto label4;

        $r10 = new java.nio.file.AccessDeniedException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        varReplacer5239 = "Not readable: ";

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5239);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.nio.file.AccessDeniedException: void <init>(java.lang.String)>($r14);

        throw $r10;

     label4:
        r6 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.lang.String generateFileHandle(java.nio.file.Path)>(r2);

        $r8 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map handles>;

        $r7 = new org.apache.sshd.server.subsystem.sftp.DirectoryHandle;

        specialinvoke $r7.<org.apache.sshd.server.subsystem.sftp.DirectoryHandle: void <init>(java.nio.file.Path)>(r2);

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, $r7);

        return r6;
    }

    protected void doFSetStat(org.apache.sshd.common.util.buffer.Buffer, int) throws java.io.IOException
    {
        org.apache.sshd.common.util.buffer.Buffer r0, $r4, $r7;
        java.lang.String r1, varReplacer5241;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r2;
        java.util.Map r3;
        int i0, varReplacer5240;
        java.lang.Throwable $r5, r6;
        java.lang.Exception $r8;

        nop;

        r2 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i0 := @parameter1: int;

        r1 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

        r3 = virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map readAttrs(org.apache.sshd.common.util.buffer.Buffer)>(r0);

     label1:
        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doFSetStat(int,java.lang.String,java.util.Map)>(i0, r1, r3);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r6 = $r5;

        $r7 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        $r8 = (java.lang.Exception) r6;

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,java.lang.Exception)>($r7, i0, $r8);

        return;

     label4:
        $r4 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        varReplacer5240 = 0;

        varReplacer5241 = "";

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,int,java.lang.String)>($r4, i0, varReplacer5240, varReplacer5241);

        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    protected void doFSetStat(int, java.lang.String, java.util.Map) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        java.lang.String r1, varReplacer5242;
        java.util.Map $r2, r8;
        java.lang.Object $r3;
        org.apache.sshd.server.subsystem.sftp.Handle r4, $r6;
        org.slf4j.Logger $r5, $r10;
        boolean $z0;
        java.nio.file.Path $r7;
        java.lang.Object[] $r9;
        int i0;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r8 := @parameter2: java.util.Map;

        $r2 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map handles>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (org.apache.sshd.server.subsystem.sftp.Handle) $r3;

        $r5 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r5.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r10 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r9 = newarray (java.lang.Object)[3];

        $r9[0] = r1;

        $r9[1] = r4;

        $r9[2] = r8;

        varReplacer5242 = "Received SSH_FXP_FSETSTAT (handle={}[{}], attrs={})";

        interfaceinvoke $r10.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(varReplacer5242, $r9);

     label1:
        $r6 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.subsystem.sftp.Handle validateHandle(java.lang.String,org.apache.sshd.server.subsystem.sftp.Handle,java.lang.Class)>(r1, r4, class "Lorg/apache/sshd/server/subsystem/sftp/Handle;");

        $r7 = virtualinvoke $r6.<org.apache.sshd.server.subsystem.sftp.Handle: java.nio.file.Path getFile()>();

        virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void setAttributes(java.nio.file.Path,java.util.Map)>($r7, r8);

        return;
    }

    protected void doSetStat(org.apache.sshd.common.util.buffer.Buffer, int) throws java.io.IOException
    {
        org.apache.sshd.common.util.buffer.Buffer r0, $r4, $r7;
        java.lang.String r1, varReplacer5244;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r2;
        java.util.Map r3;
        int i0, varReplacer5243;
        java.lang.Throwable $r5, r6;
        java.lang.Exception $r8;

        nop;

        r2 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i0 := @parameter1: int;

        r1 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

        r3 = virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map readAttrs(org.apache.sshd.common.util.buffer.Buffer)>(r0);

     label1:
        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doSetStat(int,java.lang.String,java.util.Map)>(i0, r1, r3);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r6 = $r5;

        $r7 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        $r8 = (java.lang.Exception) r6;

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,java.lang.Exception)>($r7, i0, $r8);

        return;

     label4:
        $r4 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        varReplacer5243 = 0;

        varReplacer5244 = "";

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,int,java.lang.String)>($r4, i0, varReplacer5243, varReplacer5244);

        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    protected void doSetStat(int, java.lang.String, java.util.Map) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        java.lang.String r1, varReplacer5245;
        java.util.Map r2;
        org.slf4j.Logger $r3;
        java.nio.file.Path r4;
        int i0;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.util.Map;

        $r3 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        varReplacer5245 = "Received SSH_FXP_SETSTAT (path={}, attrs={})";

        interfaceinvoke $r3.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>(varReplacer5245, r1, r2);

        r4 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.nio.file.Path resolveFile(java.lang.String)>(r1);

        virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void setAttributes(java.nio.file.Path,java.util.Map)>(r4, r2);

        return;
    }

    protected void doFStat(org.apache.sshd.common.util.buffer.Buffer, int) throws java.io.IOException
    {
        org.apache.sshd.common.util.buffer.Buffer r0, $r4, $r7;
        java.lang.String r1;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r2;
        int $i0, i1, i2;
        java.util.Map r3;
        java.lang.Throwable $r5, r6;
        java.lang.Exception $r8;

        nop;

        r2 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i1 := @parameter1: int;

        r1 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

        i2 = 65535;

        $i0 = r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int version>;

        if $i0 < 4 goto label1;

        i2 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: int getInt()>();

     label1:
        r3 = virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map doFStat(int,java.lang.String,int)>(i1, r1, i2);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r6 = $r5;

        $r7 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        $r8 = (java.lang.Exception) r6;

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,java.lang.Exception)>($r7, i1, $r8);

        return;

     label4:
        $r4 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendAttrs(org.apache.sshd.common.util.buffer.Buffer,int,java.util.Map)>($r4, i1, r3);

        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    protected java.util.Map doFStat(int, java.lang.String, int) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        java.lang.String r1, $r12, varReplacer5246;
        java.util.Map $r2, $r9;
        java.lang.Object $r3;
        org.apache.sshd.server.subsystem.sftp.Handle r4, $r6;
        org.slf4j.Logger $r5, $r11;
        boolean $z0;
        java.nio.file.Path $r7;
        int i0, i1, varReplacer5247;
        java.nio.file.LinkOption[] $r8;
        java.lang.Object[] $r10;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        i1 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r2 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map handles>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (org.apache.sshd.server.subsystem.sftp.Handle) $r3;

        $r5 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r5.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r11 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r10 = newarray (java.lang.Object)[3];

        $r10[0] = r1;

        $r10[1] = r4;

        $r12 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r10[2] = $r12;

        varReplacer5246 = "Received SSH_FXP_FSTAT (handle={}[{}], flags=0x{})";

        interfaceinvoke $r11.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(varReplacer5246, $r10);

     label1:
        $r6 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.subsystem.sftp.Handle validateHandle(java.lang.String,org.apache.sshd.server.subsystem.sftp.Handle,java.lang.Class)>(r1, r4, class "Lorg/apache/sshd/server/subsystem/sftp/Handle;");

        $r7 = virtualinvoke $r6.<org.apache.sshd.server.subsystem.sftp.Handle: java.nio.file.Path getFile()>();

        varReplacer5247 = 1;

        $r8 = staticinvoke <org.apache.sshd.common.util.io.IoUtils: java.nio.file.LinkOption[] getLinkOptions(boolean)>(varReplacer5247);

        $r9 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map resolveFileAttributes(java.nio.file.Path,int,java.nio.file.LinkOption[])>($r7, i0, $r8);

        return $r9;
    }

    protected void doLStat(org.apache.sshd.common.util.buffer.Buffer, int) throws java.io.IOException
    {
        org.apache.sshd.common.util.buffer.Buffer r0, $r4, $r7;
        java.lang.String r1;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r2;
        int $i0, i1, i2;
        java.util.Map r3;
        java.lang.Throwable $r5, r6;
        java.lang.Exception $r8;

        nop;

        r2 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i1 := @parameter1: int;

        r1 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

        i2 = 65535;

        $i0 = r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int version>;

        if $i0 < 4 goto label1;

        i2 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: int getInt()>();

     label1:
        r3 = virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map doLStat(int,java.lang.String,int)>(i1, r1, i2);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r6 = $r5;

        $r7 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        $r8 = (java.lang.Exception) r6;

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,java.lang.Exception)>($r7, i1, $r8);

        return;

     label4:
        $r4 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendAttrs(org.apache.sshd.common.util.buffer.Buffer,int,java.util.Map)>($r4, i1, r3);

        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    protected java.util.Map doLStat(int, java.lang.String, int) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        java.lang.String r1, $r8, varReplacer5248;
        java.nio.file.Path r2;
        org.slf4j.Logger $r3, $r7;
        boolean $z0;
        int i0, i1, varReplacer5249;
        java.nio.file.LinkOption[] $r4;
        java.util.Map $r5;
        java.lang.Object[] $r6;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        i1 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.nio.file.Path resolveFile(java.lang.String)>(r1);

        $r3 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r3.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r7 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r6 = newarray (java.lang.Object)[3];

        $r6[0] = r1;

        $r6[1] = r2;

        $r8 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r6[2] = $r8;

        varReplacer5248 = "Received SSH_FXP_LSTAT (path={}[{}], flags=0x{})";

        interfaceinvoke $r7.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(varReplacer5248, $r6);

     label1:
        varReplacer5249 = 0;

        $r4 = staticinvoke <org.apache.sshd.common.util.io.IoUtils: java.nio.file.LinkOption[] getLinkOptions(boolean)>(varReplacer5249);

        $r5 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map resolveFileAttributes(java.nio.file.Path,int,java.nio.file.LinkOption[])>(r2, i0, $r4);

        return $r5;
    }

    protected void doWrite(org.apache.sshd.common.util.buffer.Buffer, int) throws java.io.IOException
    {
        org.apache.sshd.common.util.buffer.Buffer r0, $r4, $r7;
        java.lang.String r1, varReplacer5251;
        long l0;
        int i1, i2, $i3, $i4, varReplacer5250;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r2;
        byte[] $r3;
        java.lang.Throwable $r5, r6;
        java.lang.Exception $r8;

        nop;

        r2 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i2 := @parameter1: int;

        r1 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

        l0 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: long getLong()>();

        i1 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: int getInt()>();

     label1:
        $r3 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: byte[] array()>();

        $i3 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: int rpos()>();

        $i4 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: int available()>();

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doWrite(int,java.lang.String,long,int,byte[],int,int)>(i2, r1, l0, i1, $r3, $i3, $i4);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r6 = $r5;

        $r7 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        $r8 = (java.lang.Exception) r6;

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,java.lang.Exception)>($r7, i2, $r8);

        return;

     label4:
        $r4 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        varReplacer5250 = 0;

        varReplacer5251 = "";

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,int,java.lang.String)>($r4, i2, varReplacer5250, varReplacer5251);

        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    protected void doWrite(int, java.lang.String, long, int, byte[], int, int) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        java.lang.String r1, $r17, $r24, varReplacer5252, varReplacer5253, varReplacer5254, varReplacer5255, varReplacer5256, varReplacer5257;
        java.util.Map $r2;
        java.lang.Object $r3;
        org.apache.sshd.server.subsystem.sftp.Handle r4, $r6;
        org.slf4j.Logger $r5, $r26;
        boolean $z0, $z1;
        org.apache.sshd.server.subsystem.sftp.FileHandle r7;
        int i0, i1, i2, i4;
        byte[] r8;
        long l3;
        java.lang.IllegalStateException $r9, $r18;
        java.lang.StringBuilder $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r19, $r20, $r21, $r22, $r23;
        java.lang.Object[] $r25;
        java.lang.Long $r27;
        java.lang.Integer $r28;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        i4 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        l3 := @parameter2: long;

        i0 := @parameter3: int;

        r8 := @parameter4: byte[];

        i2 := @parameter5: int;

        i1 := @parameter6: int;

        $r2 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map handles>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (org.apache.sshd.server.subsystem.sftp.Handle) $r3;

        $r5 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r5.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r26 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r25 = newarray (java.lang.Object)[4];

        $r25[0] = r1;

        $r25[1] = r4;

        $r27 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l3);

        $r25[2] = $r27;

        $r28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r25[3] = $r28;

        varReplacer5256 = "Received SSH_FXP_WRITE (handle={}[{}], offset={}, data=byte[{}])";

        interfaceinvoke $r26.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(varReplacer5256, $r25);

     label1:
        $r6 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.subsystem.sftp.Handle validateHandle(java.lang.String,org.apache.sshd.server.subsystem.sftp.Handle,java.lang.Class)>(r1, r4, class "Lorg/apache/sshd/server/subsystem/sftp/FileHandle;");

        r7 = (org.apache.sshd.server.subsystem.sftp.FileHandle) $r6;

        if i0 >= 0 goto label2;

        $r18 = new java.lang.IllegalStateException;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        varReplacer5254 = "Bad length (";

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5254);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        varReplacer5252 = ") for writing to ";

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5252);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r24);

        throw $r18;

     label2:
        if i1 >= i0 goto label3;

        $r9 = new java.lang.IllegalStateException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        varReplacer5253 = "Not enough buffer data for writing to ";

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5253);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        varReplacer5255 = ": required=";

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5255);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        varReplacer5257 = ", available=";

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5257);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r17);

        throw $r9;

     label3:
        $z1 = virtualinvoke r7.<org.apache.sshd.server.subsystem.sftp.FileHandle: boolean isOpenAppend()>();

        if $z1 == 0 goto label4;

        virtualinvoke r7.<org.apache.sshd.server.subsystem.sftp.FileHandle: void append(byte[],int,int)>(r8, i2, i0);

        goto label5;

     label4:
        virtualinvoke r7.<org.apache.sshd.server.subsystem.sftp.FileHandle: void write(byte[],int,int,long)>(r8, i2, i0, l3);

     label5:
        return;
    }

    protected void doRead(org.apache.sshd.common.util.buffer.Buffer, int) throws java.io.IOException
    {
        org.apache.sshd.common.util.buffer.Buffer r0, $r24;
        java.lang.String r1, $r16, varReplacer5258, varReplacer5260, varReplacer5261, varReplacer5263, varReplacer5265, varReplacer5266;
        long l0, $l6, varReplacer5262;
        int i1, i2, i3, $i4, i5, i7, i8, $i9, i10, varReplacer5259, varReplacer5264;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r2;
        org.apache.sshd.server.session.ServerSession $r3;
        org.slf4j.Logger $r4, $r18;
        boolean $z0, $z1;
        java.lang.Integer $r5, $r20, $r21, $r22;
        org.apache.sshd.common.util.Int2IntFunction $r6;
        byte[] $r7;
        java.lang.StringBuilder $r10, $r11, $r12, $r13, $r14, $r15, $r26;
        java.lang.Object[] $r17;
        java.lang.Long $r19;
        java.lang.Throwable $r23, r25;
        java.io.EOFException $r27;
        java.lang.Exception $r28;

        nop;

        r2 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i5 := @parameter1: int;

        r1 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

        l0 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: long getLong()>();

        i1 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: int getInt()>();

        $r3 = r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession session>;

        varReplacer5263 = "sftp-max-packet-length";

        varReplacer5264 = 16384;

        i2 = staticinvoke <org.apache.sshd.common.FactoryManagerUtils: int getIntProperty(org.apache.sshd.common.session.Session,java.lang.String,int)>($r3, varReplacer5263, varReplacer5264);

        i3 = staticinvoke <java.lang.Math: int min(int,int)>(i1, i2);

        $r4 = r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r4.<org.slf4j.Logger: boolean isTraceEnabled()>();

        if $z0 == 0 goto label1;

        $r18 = r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r17 = newarray (java.lang.Object)[5];

        $r17[0] = r1;

        $r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r17[1] = $r19;

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r17[2] = $r20;

        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r17[3] = $r21;

        $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        $r17[4] = $r22;

        varReplacer5258 = "doRead({})[offset={}] - req.={}, max.={}, effective={}";

        interfaceinvoke $r18.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object[])>(varReplacer5258, $r17);

     label1:
        if i3 < 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        varReplacer5265 = "Illegal requested read length: %d";

        staticinvoke <org.apache.sshd.common.util.ValidateUtils: void checkTrue(boolean,java.lang.String,java.lang.Object)>($z1, varReplacer5265, $r5);

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void clear()>();

        $i4 = i3 + 64;

        $r6 = <org.apache.sshd.common.util.Int2IntFunction: org.apache.sshd.common.util.Int2IntFunction IDENTITY>;

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void ensureCapacity(int,org.apache.sshd.common.util.Int2IntFunction)>($i4, $r6);

        varReplacer5259 = 103;

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putByte(byte)>(varReplacer5259);

        $l6 = (long) i5;

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putInt(long)>($l6);

        i10 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: int wpos()>();

        varReplacer5262 = 0L;

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putInt(long)>(varReplacer5262);

        i7 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: int wpos()>();

        $r7 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: byte[] array()>();

        i8 = virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int doRead(int,java.lang.String,long,int,byte[],int)>(i5, r1, l0, i3, $r7, i7);

        if i8 >= 0 goto label4;

        $r27 = new java.io.EOFException;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        varReplacer5260 = "Unable to read ";

        $r10 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5260);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        varReplacer5266 = " bytes from offset=";

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5266);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        varReplacer5261 = " of ";

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5261);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r27.<java.io.EOFException: void <init>(java.lang.String)>($r16);

        throw $r27;

     label4:
        $i9 = i7 + i8;

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void wpos(int)>($i9);

        staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: void updateLengthPlaceholder(org.apache.sshd.common.util.buffer.Buffer,int,int)>(r0, i10, i8);

     label5:
        goto label7;

     label6:
        $r23 := @caughtexception;

        r25 = $r23;

        $r24 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        $r28 = (java.lang.Exception) r25;

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,java.lang.Exception)>($r24, i5, $r28);

        return;

     label7:
        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void send(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        return;

        catch java.io.IOException from label1 to label5 with label6;
        catch java.lang.RuntimeException from label1 to label5 with label6;
    }

    protected int doRead(int, java.lang.String, long, int, byte[], int) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        java.lang.String r1, varReplacer5267, varReplacer5268;
        java.util.Map $r2;
        java.lang.Object $r3;
        org.apache.sshd.server.subsystem.sftp.Handle r4, $r7;
        org.slf4j.Logger $r5, $r11;
        boolean $z0, $z1;
        int i0, i1, $i3, i4;
        java.lang.Integer $r6, $r13;
        org.apache.sshd.server.subsystem.sftp.FileHandle r8;
        byte[] r9;
        long l2;
        java.lang.Object[] $r10;
        java.lang.Long $r12;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        i4 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        l2 := @parameter2: long;

        i0 := @parameter3: int;

        r9 := @parameter4: byte[];

        i1 := @parameter5: int;

        $r2 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map handles>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (org.apache.sshd.server.subsystem.sftp.Handle) $r3;

        $r5 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r5.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r11 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r10 = newarray (java.lang.Object)[4];

        $r10[0] = r1;

        $r10[1] = r4;

        $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l2);

        $r10[2] = $r12;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r10[3] = $r13;

        varReplacer5268 = "Received SSH_FXP_READ (handle={}[{}], offset={}, length={})";

        interfaceinvoke $r11.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(varReplacer5268, $r10);

     label1:
        if i0 <= 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        varReplacer5267 = "Invalid read length: %d";

        staticinvoke <org.apache.sshd.common.util.ValidateUtils: void checkTrue(boolean,java.lang.String,java.lang.Object)>($z1, varReplacer5267, $r6);

        $r7 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.subsystem.sftp.Handle validateHandle(java.lang.String,org.apache.sshd.server.subsystem.sftp.Handle,java.lang.Class)>(r1, r4, class "Lorg/apache/sshd/server/subsystem/sftp/FileHandle;");

        r8 = (org.apache.sshd.server.subsystem.sftp.FileHandle) $r7;

        $i3 = virtualinvoke r8.<org.apache.sshd.server.subsystem.sftp.FileHandle: int read(byte[],int,int,long)>(r9, i1, i0, l2);

        return $i3;
    }

    protected void doClose(org.apache.sshd.common.util.buffer.Buffer, int) throws java.io.IOException
    {
        org.apache.sshd.common.util.buffer.Buffer r0, $r3, $r6;
        java.lang.String r1, varReplacer5270, varReplacer5271;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r2;
        int i0, varReplacer5269;
        java.lang.Throwable $r4, r5;
        java.lang.Exception $r7;

        nop;

        r2 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i0 := @parameter1: int;

        r1 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

     label1:
        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doClose(int,java.lang.String)>(i0, r1);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r5 = $r4;

        $r6 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        $r7 = (java.lang.Exception) r5;

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,java.lang.Exception)>($r6, i0, $r7);

        return;

     label4:
        $r3 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        varReplacer5269 = 0;

        varReplacer5270 = "";

        varReplacer5271 = "";

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,int,java.lang.String,java.lang.String)>($r3, i0, varReplacer5269, varReplacer5270, varReplacer5270);

        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    protected void doClose(int, java.lang.String) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        java.lang.String r1, varReplacer5272;
        java.util.Map $r2;
        java.lang.Object $r3;
        org.apache.sshd.server.subsystem.sftp.Handle r4, $r6;
        org.slf4j.Logger $r5;
        int i0;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r2 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map handles>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        r4 = (org.apache.sshd.server.subsystem.sftp.Handle) $r3;

        $r5 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        varReplacer5272 = "Received SSH_FXP_CLOSE (handle={}[{}])";

        interfaceinvoke $r5.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>(varReplacer5272, r1, r4);

        $r6 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.subsystem.sftp.Handle validateHandle(java.lang.String,org.apache.sshd.server.subsystem.sftp.Handle,java.lang.Class)>(r1, r4, class "Lorg/apache/sshd/server/subsystem/sftp/Handle;");

        virtualinvoke $r6.<org.apache.sshd.server.subsystem.sftp.Handle: void close()>();

        return;
    }

    protected void doOpen(org.apache.sshd.common.util.buffer.Buffer, int) throws java.io.IOException
    {
        org.apache.sshd.common.util.buffer.Buffer r0, $r4, $r7;
        java.lang.String r1, r3;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r2;
        int $i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10, i11, i12, $i13;
        java.lang.Throwable $r5, r6;
        java.util.Map r8;
        java.lang.Exception $r9;

        nop;

        r2 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i2 := @parameter1: int;

        r1 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

        i8 = 0;

        $i0 = r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int version>;

        if $i0 < 5 goto label01;

        i8 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: int getInt()>();

        if i8 != 0 goto label01;

        i8 = 129;

     label01:
        i9 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: int getInt()>();

        if i9 != 0 goto label02;

        i9 = 1;

     label02:
        $i1 = r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int version>;

        if $i1 >= 5 goto label12;

        i10 = i9;

        i11 = 0;

        $i3 = i10 & 3;

        lookupswitch($i3)
        {
            case 1: goto label03;
            case 2: goto label04;
            default: goto label05;
        };

     label03:
        i8 = i8 | 129;

        goto label06;

     label04:
        i8 = i8 | 258;

        goto label06;

     label05:
        i12 = i8 | 129;

        i8 = i12 | 258;

     label06:
        $i13 = i10 & 4;

        if $i13 == 0 goto label07;

        i8 = i8 | 4;

        i11 = i11 | 24;

     label07:
        $i4 = i10 & 8;

        if $i4 == 0 goto label10;

        $i6 = i10 & 32;

        if $i6 == 0 goto label08;

        i9 = i11 | 0;

        goto label12;

     label08:
        $i7 = i10 & 16;

        if $i7 == 0 goto label09;

        i9 = i11 | 1;

        goto label12;

     label09:
        i9 = i11 | 3;

        goto label12;

     label10:
        $i5 = i10 & 16;

        if $i5 == 0 goto label11;

        i9 = i11 | 4;

        goto label12;

     label11:
        i9 = i11 | 2;

     label12:
        r8 = virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map readAttrs(org.apache.sshd.common.util.buffer.Buffer)>(r0);

     label13:
        r3 = virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.lang.String doOpen(int,java.lang.String,int,int,java.util.Map)>(i2, r1, i9, i8, r8);

     label14:
        goto label16;

     label15:
        $r5 := @caughtexception;

        r6 = $r5;

        $r7 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        $r9 = (java.lang.Exception) r6;

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,java.lang.Exception)>($r7, i2, $r9);

        return;

     label16:
        $r4 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendHandle(org.apache.sshd.common.util.buffer.Buffer,int,java.lang.String)>($r4, i2, r3);

        return;

        catch java.io.IOException from label13 to label14 with label15;
        catch java.lang.RuntimeException from label13 to label14 with label15;
    }

    protected java.lang.String doOpen(int, java.lang.String, int, int, java.util.Map) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        org.slf4j.Logger $r1, $r19;
        boolean $z0;
        java.util.Map $r2, r8, $r9;
        int i0, i1, i2, i3, i4, varReplacer5275;
        org.apache.sshd.server.session.ServerSession $r3;
        java.lang.String r4, r6, $r17, $r20, $r21, varReplacer5273, varReplacer5274, varReplacer5276, varReplacer5277;
        java.nio.file.Path r5;
        org.apache.sshd.server.subsystem.sftp.FileHandle $r7;
        java.lang.IllegalStateException $r11;
        java.lang.StringBuilder $r12, $r13, $r14, $r15, $r16;
        java.lang.Object[] $r18;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        i4 := @parameter0: int;

        r4 := @parameter1: java.lang.String;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r8 := @parameter4: java.util.Map;

        $r1 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r1.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r19 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r18 = newarray (java.lang.Object)[4];

        $r18[0] = r4;

        $r20 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i3);

        $r18[1] = $r20;

        $r21 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i2);

        $r18[2] = $r21;

        $r18[3] = r8;

        varReplacer5273 = "Received SSH_FXP_OPEN (path={}, access=0x{}, pflags=0x{}, attrs={})";

        interfaceinvoke $r19.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(varReplacer5273, $r18);

     label1:
        $r2 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map handles>;

        i0 = interfaceinvoke $r2.<java.util.Map: int size()>();

        $r3 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession session>;

        varReplacer5274 = "max-open-handles-per-session";

        varReplacer5275 = 2147483647;

        i1 = staticinvoke <org.apache.sshd.common.FactoryManagerUtils: int getIntProperty(org.apache.sshd.common.session.Session,java.lang.String,int)>($r3, varReplacer5274, varReplacer5275);

        if i0 <= i1 goto label2;

        $r11 = new java.lang.IllegalStateException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        varReplacer5276 = "Too many open handles: current=";

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5276);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        varReplacer5277 = ", max.=";

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5277);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r17);

        throw $r11;

     label2:
        r5 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.nio.file.Path resolveFile(java.lang.String)>(r4);

        r6 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.lang.String generateFileHandle(java.nio.file.Path)>(r5);

        $r9 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map handles>;

        $r7 = new org.apache.sshd.server.subsystem.sftp.FileHandle;

        specialinvoke $r7.<org.apache.sshd.server.subsystem.sftp.FileHandle: void <init>(org.apache.sshd.server.subsystem.sftp.SftpSubsystem,java.nio.file.Path,int,int,java.util.Map)>(r0, r5, i2, i3, r8);

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, $r7);

        return r6;
    }

    protected java.lang.String generateFileHandle(java.nio.file.Path)
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        int $i0, $i1, $i2, i3, varReplacer5281, varReplacer5282, varReplacer5283;
        java.lang.IllegalStateException $r1;
        java.lang.StringBuilder $r2, $r3, $r5;
        java.nio.file.Path r4;
        java.lang.String $r6, r10, varReplacer5278, varReplacer5279, varReplacer5280;
        byte[] $r7, $r9;
        org.apache.sshd.common.random.Random $r8;
        java.util.Map $r11;
        boolean $z0, $z1, $z2;
        org.slf4j.Logger $r12, $r13, $r14, $r16;
        java.lang.Object[] $r15;
        java.lang.Integer $r17;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r4 := @parameter0: java.nio.file.Path;

        i3 = 0;

     label1:
        $i0 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int maxFileHandleRounds>;

        if i3 >= $i0 goto label5;

        $r8 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.common.random.Random randomizer>;

        $r7 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: byte[] workBuf>;

        $i1 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int fileHandleSize>;

        varReplacer5283 = 0;

        interfaceinvoke $r8.<org.apache.sshd.common.random.Random: void fill(byte[],int,int)>($r7, varReplacer5283, $i1);

        $r9 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: byte[] workBuf>;

        $i2 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int fileHandleSize>;

        varReplacer5281 = 0;

        varReplacer5282 = 0;

        r10 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: java.lang.String printHex(byte[],int,int,char)>($r9, varReplacer5281, $i2, varReplacer5281);

        $r11 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map handles>;

        $z0 = interfaceinvoke $r11.<java.util.Map: boolean containsKey(java.lang.Object)>(r10);

        if $z0 == 0 goto label2;

        $r14 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z2 = interfaceinvoke $r14.<org.slf4j.Logger: boolean isTraceEnabled()>();

        if $z2 == 0 goto label4;

        $r16 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r15 = newarray (java.lang.Object)[3];

        $r15[0] = r4;

        $r15[1] = r10;

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        $r15[2] = $r17;

        varReplacer5278 = "generateFileHandle({}) handle={} in use at round {}";

        interfaceinvoke $r16.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object[])>(varReplacer5278, $r15);

        goto label4;

     label2:
        $r12 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z1 = interfaceinvoke $r12.<org.slf4j.Logger: boolean isTraceEnabled()>();

        if $z1 == 0 goto label3;

        $r13 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        varReplacer5279 = "generateFileHandle({}) {}";

        interfaceinvoke $r13.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>(varReplacer5279, r4, r10);

     label3:
        return r10;

     label4:
        i3 = i3 + 1;

        goto label1;

     label5:
        $r1 = new java.lang.IllegalStateException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        varReplacer5280 = "Failed to generate a unique file handle for ";

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5280);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        throw $r1;
    }

    protected void doInit(org.apache.sshd.common.util.buffer.Buffer, int) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        org.slf4j.Logger $r1, $r8;
        boolean $z0, $z1;
        org.apache.sshd.common.util.buffer.Buffer r2;
        int i0, $i1, $i2, varReplacer5285, varReplacer5286;
        java.lang.String r3, r4, varReplacer5284;
        long $l3;
        byte[] r5;
        java.util.Map $r6;
        java.lang.Integer $r9;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r2 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i0 := @parameter1: int;

        $r1 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r1.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r8 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        varReplacer5284 = "Received SSH_FXP_INIT (version={})";

        interfaceinvoke $r8.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>(varReplacer5284, $r9);

     label1:
        varReplacer5285 = 8;

        r3 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.lang.String checkVersionCompatibility(org.apache.sshd.common.util.buffer.Buffer,int,int,int)>(r2, i0, i0, varReplacer5285);

        $z1 = staticinvoke <org.apache.sshd.common.util.GenericUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z1 == 0 goto label2;

        return;

     label2:
        r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int version> = i0;

     label3:
        $i1 = virtualinvoke r2.<org.apache.sshd.common.util.buffer.Buffer: int available()>();

        if $i1 <= 0 goto label4;

        r4 = virtualinvoke r2.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

        r5 = virtualinvoke r2.<org.apache.sshd.common.util.buffer.Buffer: byte[] getBytes()>();

        $r6 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map extensions>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, r5);

        goto label3;

     label4:
        virtualinvoke r2.<org.apache.sshd.common.util.buffer.Buffer: void clear()>();

        varReplacer5286 = 2;

        virtualinvoke r2.<org.apache.sshd.common.util.buffer.Buffer: void putByte(byte)>(varReplacer5286);

        $i2 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int version>;

        $l3 = (long) $i2;

        virtualinvoke r2.<org.apache.sshd.common.util.buffer.Buffer: void putInt(long)>($l3);

        virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void appendExtensions(org.apache.sshd.common.util.buffer.Buffer,java.lang.String)>(r2, r3);

        virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void send(org.apache.sshd.common.util.buffer.Buffer)>(r2);

        return;
    }

    protected void appendExtensions(org.apache.sshd.common.util.buffer.Buffer, java.lang.String)
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        org.apache.sshd.common.util.buffer.Buffer r1;
        java.lang.String r2, $r3, varReplacer5287;
        java.util.Map $r4;
        java.util.Collection r6;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r1 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void appendVersionsExtension(org.apache.sshd.common.util.buffer.Buffer,java.lang.String)>(r1, r2);

        varReplacer5287 = "line.separator";

        $r3 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(varReplacer5287);

        virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void appendNewlineExtension(org.apache.sshd.common.util.buffer.Buffer,java.lang.String)>(r1, $r3);

        $r4 = staticinvoke <org.apache.sshd.common.config.VersionProperties: java.util.Map getVersionProperties()>();

        virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void appendVendorIdExtension(org.apache.sshd.common.util.buffer.Buffer,java.util.Map)>(r1, $r4);

        virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.List appendOpenSSHExtensions(org.apache.sshd.common.util.buffer.Buffer)>(r1);

        r6 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Collection getSupportedClientExtensions()>();

        virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void appendSupportedExtension(org.apache.sshd.common.util.buffer.Buffer,java.util.Collection)>(r1, r6);

        virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void appendSupported2Extension(org.apache.sshd.common.util.buffer.Buffer,java.util.Collection)>(r1, r6);

        return;
    }

    protected java.util.List appendOpenSSHExtensions(org.apache.sshd.common.util.buffer.Buffer)
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        java.util.List r1;
        boolean $z0, $z1;
        java.util.Iterator r2;
        java.lang.Object $r3;
        org.apache.sshd.common.subsystem.sftp.extensions.openssh.AbstractOpenSSHExtensionParser$OpenSSHExtension r4;
        org.apache.sshd.common.util.buffer.Buffer r5;
        java.lang.String $r6, $r7;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r5 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        r1 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.List resolveOpenSSHExtensions()>();

        $z0 = staticinvoke <org.apache.sshd.common.util.GenericUtils: boolean isEmpty(java.util.Collection)>(r1);

        if $z0 == 0 goto label1;

        return r1;

     label1:
        r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.sshd.common.subsystem.sftp.extensions.openssh.AbstractOpenSSHExtensionParser$OpenSSHExtension) $r3;

        $r6 = virtualinvoke r4.<org.apache.sshd.common.subsystem.sftp.extensions.openssh.AbstractOpenSSHExtensionParser$OpenSSHExtension: java.lang.String getName()>();

        virtualinvoke r5.<org.apache.sshd.common.util.buffer.Buffer: void putString(java.lang.String)>($r6);

        $r7 = virtualinvoke r4.<org.apache.sshd.common.subsystem.sftp.extensions.openssh.AbstractOpenSSHExtensionParser$OpenSSHExtension: java.lang.String getVersion()>();

        virtualinvoke r5.<org.apache.sshd.common.util.buffer.Buffer: void putString(java.lang.String)>($r7);

        goto label2;

     label3:
        return r1;
    }

    protected java.util.List resolveOpenSSHExtensions()
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        org.apache.sshd.server.session.ServerSession $r1;
        java.lang.String r2, r7, r8, r11, r12, $r13, $r14, $r16, varReplacer5289, varReplacer5290, varReplacer5291;
        java.lang.String[] r3, r6;
        int i0, i1, i2, $i3, $i4, i5, $i6, varReplacer5288, varReplacer5292, varReplacer5293;
        java.util.ArrayList $r4, r5;
        boolean $z0, $z2;
        java.util.List $r9, $r10;
        org.apache.sshd.common.subsystem.sftp.extensions.openssh.AbstractOpenSSHExtensionParser$OpenSSHExtension $r15;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        $r1 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession session>;

        varReplacer5291 = "sftp-openssh-extensions";

        r2 = staticinvoke <org.apache.sshd.common.FactoryManagerUtils: java.lang.String getString(org.apache.sshd.common.session.Session,java.lang.String)>($r1, varReplacer5291);

        if r2 != null goto label1;

        $r10 = <org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.List DEFAULT_OPEN_SSH_EXTENSIONS>;

        return $r10;

     label1:
        varReplacer5288 = 44;

        r3 = staticinvoke <org.apache.sshd.common.util.GenericUtils: java.lang.String[] split(java.lang.String,char)>(r2, varReplacer5288);

        i0 = staticinvoke <org.apache.sshd.common.util.GenericUtils: int length(java.lang.Object[])>(r3);

        if i0 > 0 goto label2;

        $r9 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r9;

     label2:
        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>(i0);

        r5 = $r4;

        r6 = r3;

        i1 = lengthof r6;

        i5 = 0;

     label3:
        if i5 >= i1 goto label8;

        r11 = r6[i5];

        r12 = staticinvoke <org.apache.sshd.common.util.GenericUtils: java.lang.String trimToEmpty(java.lang.String)>(r11);

        $z0 = staticinvoke <org.apache.sshd.common.util.GenericUtils: boolean isEmpty(java.lang.CharSequence)>(r12);

        if $z0 == 0 goto label4;

        goto label7;

     label4:
        varReplacer5293 = 61;

        i2 = virtualinvoke r12.<java.lang.String: int indexOf(int)>(varReplacer5293);

        if i2 <= 0 goto label5;

        $i3 = virtualinvoke r12.<java.lang.String: int length()>();

        $i4 = $i3 - 1;

        if i2 >= $i4 goto label5;

        $z2 = 1;

        goto label6;

     label5:
        $z2 = 0;

     label6:
        varReplacer5289 = "Malformed OpenSSH extension spec: %s";

        staticinvoke <org.apache.sshd.common.util.ValidateUtils: void checkTrue(boolean,java.lang.String,java.lang.Object)>($z2, varReplacer5289, r12);

        varReplacer5292 = 0;

        $r13 = virtualinvoke r12.<java.lang.String: java.lang.String substring(int,int)>(varReplacer5292, i2);

        r7 = staticinvoke <org.apache.sshd.common.util.GenericUtils: java.lang.String trimToEmpty(java.lang.String)>($r13);

        $i6 = i2 + 1;

        $r14 = virtualinvoke r12.<java.lang.String: java.lang.String substring(int)>($i6);

        r8 = staticinvoke <org.apache.sshd.common.util.GenericUtils: java.lang.String trimToEmpty(java.lang.String)>($r14);

        $r15 = new org.apache.sshd.common.subsystem.sftp.extensions.openssh.AbstractOpenSSHExtensionParser$OpenSSHExtension;

        varReplacer5290 = "No version specified for OpenSSH extension %s";

        $r16 = staticinvoke <org.apache.sshd.common.util.ValidateUtils: java.lang.String checkNotNullAndNotEmpty(java.lang.String,java.lang.String,java.lang.Object)>(r8, varReplacer5290, r7);

        specialinvoke $r15.<org.apache.sshd.common.subsystem.sftp.extensions.openssh.AbstractOpenSSHExtensionParser$OpenSSHExtension: void <init>(java.lang.String,java.lang.String)>(r7, $r16);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r15);

     label7:
        i5 = i5 + 1;

        goto label3;

     label8:
        return r5;
    }

    protected java.util.Collection getSupportedClientExtensions()
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        org.apache.sshd.server.session.ServerSession $r1;
        java.lang.String r2, varReplacer5295;
        int $i0, varReplacer5294;
        java.lang.String[] r3;
        java.util.List $r4, $r5;
        java.util.Set $r6;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        $r1 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession session>;

        varReplacer5295 = "sftp-client-extensions";

        r2 = staticinvoke <org.apache.sshd.common.FactoryManagerUtils: java.lang.String getString(org.apache.sshd.common.session.Session,java.lang.String)>($r1, varReplacer5295);

        if r2 != null goto label1;

        $r6 = <org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Set DEFAULT_SUPPORTED_CLIENT_EXTENSIONS>;

        return $r6;

     label1:
        $i0 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i0 > 0 goto label2;

        $r5 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r5;

     label2:
        varReplacer5294 = 44;

        r3 = staticinvoke <org.apache.sshd.common.util.GenericUtils: java.lang.String[] split(java.lang.String,char)>(r2, varReplacer5294);

        $r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r3);

        return $r4;
    }

    protected void appendVersionsExtension(org.apache.sshd.common.util.buffer.Buffer, java.lang.String)
    {
        org.apache.sshd.common.util.buffer.Buffer r0;
        java.lang.String r1, varReplacer5296;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r2;

        nop;

        r2 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        r1 := @parameter1: java.lang.String;

        varReplacer5296 = "versions";

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putString(java.lang.String)>(varReplacer5296);

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putString(java.lang.String)>(r1);

        return;
    }

    protected void appendNewlineExtension(org.apache.sshd.common.util.buffer.Buffer, java.lang.String)
    {
        org.apache.sshd.common.util.buffer.Buffer r0;
        java.lang.String r1, varReplacer5297;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r2;

        nop;

        r2 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        r1 := @parameter1: java.lang.String;

        varReplacer5297 = "newline";

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putString(java.lang.String)>(varReplacer5297);

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putString(java.lang.String)>(r1);

        return;
    }

    protected void appendVendorIdExtension(org.apache.sshd.common.util.buffer.Buffer, java.util.Map)
    {
        org.apache.sshd.common.util.buffer.Buffer r0;
        int i0;
        java.util.Map r1;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r2;
        java.lang.Class $r3, $r7;
        java.lang.Package $r4;
        java.lang.String $r5, $r6, $r8, $r9, $r10, varReplacer5298, varReplacer5299, varReplacer5302, varReplacer5303, varReplacer5304;
        long varReplacer5300, varReplacer5301;

        nop;

        r2 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        r1 := @parameter1: java.util.Map;

        varReplacer5302 = "vendor-id";

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putString(java.lang.String)>(varReplacer5302);

        i0 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: int wpos()>();

        varReplacer5301 = 0L;

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putInt(long)>(varReplacer5301);

        $r3 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Package getPackage()>();

        $r5 = virtualinvoke $r4.<java.lang.Package: java.lang.String getName()>();

        varReplacer5304 = "groupId";

        $r6 = staticinvoke <org.apache.sshd.common.FactoryManagerUtils: java.lang.String getStringProperty(java.util.Map,java.lang.String,java.lang.String)>(r1, varReplacer5304, $r5);

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putString(java.lang.String)>($r6);

        $r7 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getSimpleName()>();

        varReplacer5303 = "artifactId";

        $r9 = staticinvoke <org.apache.sshd.common.FactoryManagerUtils: java.lang.String getStringProperty(java.util.Map,java.lang.String,java.lang.String)>(r1, varReplacer5303, $r8);

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putString(java.lang.String)>($r9);

        varReplacer5298 = "version";

        varReplacer5299 = "SSHD-UNKNOWN";

        $r10 = staticinvoke <org.apache.sshd.common.FactoryManagerUtils: java.lang.String getStringProperty(java.util.Map,java.lang.String,java.lang.String)>(r1, varReplacer5298, varReplacer5299);

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putString(java.lang.String)>($r10);

        varReplacer5300 = 0L;

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putLong(long)>(varReplacer5300);

        staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: int updateLengthPlaceholder(org.apache.sshd.common.util.buffer.Buffer,int)>(r0, i0);

        return;
    }

    protected void appendSupportedExtension(org.apache.sshd.common.util.buffer.Buffer, java.util.Collection)
    {
        org.apache.sshd.common.util.buffer.Buffer r0;
        int i0, varReplacer5305;
        java.util.Collection r1;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r2;
        java.lang.String varReplacer5306;
        long varReplacer5307, varReplacer5308, varReplacer5309, varReplacer5310, varReplacer5311, varReplacer5312;

        nop;

        r2 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        r1 := @parameter1: java.util.Collection;

        varReplacer5306 = "supported";

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putString(java.lang.String)>(varReplacer5306);

        i0 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: int wpos()>();

        varReplacer5307 = 0L;

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putInt(long)>(varReplacer5307);

        varReplacer5311 = 701L;

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putInt(long)>(varReplacer5311);

        varReplacer5309 = 0L;

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putInt(long)>(varReplacer5309);

        varReplacer5308 = 63L;

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putInt(long)>(varReplacer5308);

        varReplacer5310 = 0L;

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putInt(long)>(varReplacer5310);

        varReplacer5312 = 0L;

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putInt(long)>(varReplacer5312);

        varReplacer5305 = 0;

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putStringList(java.util.Collection,boolean)>(r1, varReplacer5305);

        staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: int updateLengthPlaceholder(org.apache.sshd.common.util.buffer.Buffer,int)>(r0, i0);

        return;
    }

    protected void appendSupported2Extension(org.apache.sshd.common.util.buffer.Buffer, java.util.Collection)
    {
        org.apache.sshd.common.util.buffer.Buffer r0;
        int i0, varReplacer5316, varReplacer5317, varReplacer5321, varReplacer5322;
        java.util.List $r1;
        java.util.Collection r2;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r3;
        long varReplacer5313, varReplacer5314, varReplacer5315, varReplacer5319, varReplacer5320, varReplacer5323;
        java.lang.String varReplacer5318;

        nop;

        r3 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        r2 := @parameter1: java.util.Collection;

        varReplacer5318 = "supported2";

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putString(java.lang.String)>(varReplacer5318);

        i0 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: int wpos()>();

        varReplacer5314 = 0L;

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putInt(long)>(varReplacer5314);

        varReplacer5319 = 701L;

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putInt(long)>(varReplacer5319);

        varReplacer5315 = 0L;

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putInt(long)>(varReplacer5315);

        varReplacer5323 = 15L;

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putInt(long)>(varReplacer5323);

        varReplacer5320 = 0L;

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putInt(long)>(varReplacer5320);

        varReplacer5313 = 0L;

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putInt(long)>(varReplacer5313);

        varReplacer5316 = 0;

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putShort(int)>(varReplacer5316);

        varReplacer5321 = 0;

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putShort(int)>(varReplacer5321);

        $r1 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        varReplacer5317 = 1;

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putStringList(java.util.Collection,boolean)>($r1, varReplacer5317);

        varReplacer5322 = 1;

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putStringList(java.util.Collection,boolean)>(r2, varReplacer5322);

        staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: int updateLengthPlaceholder(org.apache.sshd.common.util.buffer.Buffer,int)>(r0, i0);

        return;
    }

    protected void sendHandle(org.apache.sshd.common.util.buffer.Buffer, int, java.lang.String) throws java.io.IOException
    {
        org.apache.sshd.common.util.buffer.Buffer r0;
        int i0, varReplacer5324;
        long $l1;
        java.lang.String r1;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r2;

        nop;

        r2 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        varReplacer5324 = 102;

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putByte(byte)>(varReplacer5324);

        $l1 = (long) i0;

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putInt(long)>($l1);

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putString(java.lang.String)>(r1);

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void send(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        return;
    }

    protected void sendAttrs(org.apache.sshd.common.util.buffer.Buffer, int, java.util.Map) throws java.io.IOException
    {
        org.apache.sshd.common.util.buffer.Buffer r0;
        int i0, varReplacer5325;
        long $l1;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r1;
        java.util.Map r2;

        nop;

        r1 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i0 := @parameter1: int;

        r2 := @parameter2: java.util.Map;

        varReplacer5325 = 105;

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putByte(byte)>(varReplacer5325);

        $l1 = (long) i0;

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putInt(long)>($l1);

        virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void writeAttrs(org.apache.sshd.common.util.buffer.Buffer,java.util.Map)>(r0, r2);

        virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void send(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        return;
    }

    protected void sendPath(org.apache.sshd.common.util.buffer.Buffer, int, java.nio.file.Path, java.util.Map) throws java.io.IOException
    {
        org.apache.sshd.common.util.buffer.Buffer r0;
        int i0, $i3, $i4, $i5, $i6, varReplacer5328, varReplacer5331;
        long $l1, varReplacer5326, varReplacer5330;
        java.lang.String r1, r2, $r10, $r12, r14, varReplacer5327, varReplacer5329, varReplacer5332;
        char $c2;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r3;
        java.lang.IllegalStateException $r4;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9;
        java.util.Map r11;
        java.nio.file.Path r13, r15;

        nop;

        r3 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i0 := @parameter1: int;

        r13 := @parameter2: java.nio.file.Path;

        r11 := @parameter3: java.util.Map;

        varReplacer5328 = 104;

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putByte(byte)>(varReplacer5328);

        $l1 = (long) i0;

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putInt(long)>($l1);

        varReplacer5326 = 1L;

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putInt(long)>(varReplacer5326);

        r1 = interfaceinvoke r13.<java.nio.file.Path: java.lang.String toString()>();

        $c2 = <java.io.File: char separatorChar>;

        varReplacer5331 = 47;

        r2 = virtualinvoke r1.<java.lang.String: java.lang.String replace(char,char)>($c2, varReplacer5331);

        varReplacer5329 = "/";

        r14 = staticinvoke <org.apache.sshd.common.util.SelectorUtils: java.lang.String normalizePath(java.lang.String,java.lang.String)>(r2, varReplacer5329);

        $i3 = virtualinvoke r14.<java.lang.String: int length()>();

        if $i3 != 0 goto label1;

        r14 = "/";

     label1:
        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putString(java.lang.String)>(r14);

        $i4 = r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int version>;

        if $i4 != 3 goto label2;

        r15 = virtualinvoke r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.nio.file.Path resolveFile(java.lang.String)>(r14);

        $r12 = specialinvoke r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.lang.String getLongName(java.nio.file.Path,java.util.Map)>(r15, r11);

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putString(java.lang.String)>($r12);

        varReplacer5330 = 0L;

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putInt(long)>(varReplacer5330);

        goto label4;

     label2:
        $i5 = r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int version>;

        if $i5 < 4 goto label3;

        virtualinvoke r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void writeAttrs(org.apache.sshd.common.util.buffer.Buffer,java.util.Map)>(r0, r11);

        goto label4;

     label3:
        $r4 = new java.lang.IllegalStateException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        varReplacer5332 = "sendPath(";

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5332);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r13);

        varReplacer5327 = ") unsupported version: ";

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5327);

        $i6 = r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int version>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r10);

        throw $r4;

     label4:
        virtualinvoke r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void send(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        return;
    }

    protected void sendLink(org.apache.sshd.common.util.buffer.Buffer, int, java.lang.String) throws java.io.IOException
    {
        java.lang.String r0, r1;
        char $c0;
        org.apache.sshd.common.util.buffer.Buffer r2;
        int i1, $i3, $i4, varReplacer5333, varReplacer5335;
        long $l2, varReplacer5334;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r3;
        java.util.Map $r4;

        nop;

        r3 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r2 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i1 := @parameter1: int;

        r0 := @parameter2: java.lang.String;

        $c0 = <java.io.File: char separatorChar>;

        varReplacer5335 = 47;

        r1 = virtualinvoke r0.<java.lang.String: java.lang.String replace(char,char)>($c0, varReplacer5335);

        varReplacer5333 = 104;

        virtualinvoke r2.<org.apache.sshd.common.util.buffer.Buffer: void putByte(byte)>(varReplacer5333);

        $l2 = (long) i1;

        virtualinvoke r2.<org.apache.sshd.common.util.buffer.Buffer: void putInt(long)>($l2);

        varReplacer5334 = 1L;

        virtualinvoke r2.<org.apache.sshd.common.util.buffer.Buffer: void putInt(long)>(varReplacer5334);

        virtualinvoke r2.<org.apache.sshd.common.util.buffer.Buffer: void putString(java.lang.String)>(r1);

        $i3 = r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int version>;

        if $i3 != 3 goto label1;

        virtualinvoke r2.<org.apache.sshd.common.util.buffer.Buffer: void putString(java.lang.String)>(r1);

     label1:
        $i4 = r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int version>;

        $r4 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        staticinvoke <org.apache.sshd.server.subsystem.sftp.SftpHelper: void writeAttrs(int,org.apache.sshd.common.util.buffer.Buffer,java.util.Map)>($i4, r2, $r4);

        virtualinvoke r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void send(org.apache.sshd.common.util.buffer.Buffer)>(r2);

        return;
    }

    protected int doReadDir(int, org.apache.sshd.server.subsystem.sftp.DirectoryHandle, org.apache.sshd.common.util.buffer.Buffer, int) throws java.io.IOException
    {
        java.nio.file.LinkOption[] r0;
        org.apache.sshd.server.subsystem.sftp.DirectoryHandle r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.sshd.common.util.buffer.Buffer r2;
        int i0, i1, i2, $i3, varReplacer5338;
        java.nio.file.Path r3, $r6, $r7, $r8;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r4;
        java.lang.String $r5, varReplacer5336, varReplacer5337;

        nop;

        r4 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        i1 := @parameter0: int;

        r1 := @parameter1: org.apache.sshd.server.subsystem.sftp.DirectoryHandle;

        r2 := @parameter2: org.apache.sshd.common.util.buffer.Buffer;

        i0 := @parameter3: int;

        i2 = 0;

        varReplacer5338 = 0;

        r0 = staticinvoke <org.apache.sshd.common.util.io.IoUtils: java.nio.file.LinkOption[] getLinkOptions(boolean)>(varReplacer5338);

     label1:
        $z0 = virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.DirectoryHandle: boolean isSendDot()>();

        if $z0 != 0 goto label2;

        $z3 = virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.DirectoryHandle: boolean isSendDotDot()>();

        if $z3 != 0 goto label2;

        $z4 = virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.DirectoryHandle: boolean hasNext()>();

        if $z4 == 0 goto label6;

     label2:
        $i3 = virtualinvoke r2.<org.apache.sshd.common.util.buffer.Buffer: int wpos()>();

        if $i3 >= i0 goto label6;

        $z1 = virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.DirectoryHandle: boolean isSendDot()>();

        if $z1 == 0 goto label3;

        $r8 = virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.DirectoryHandle: java.nio.file.Path getFile()>();

        varReplacer5336 = ".";

        virtualinvoke r4.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void writeDirEntry(int,org.apache.sshd.server.subsystem.sftp.DirectoryHandle,org.apache.sshd.common.util.buffer.Buffer,int,java.nio.file.Path,java.lang.String,java.nio.file.LinkOption[])>(i1, r1, r2, i2, $r8, varReplacer5336, r0);

        virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.DirectoryHandle: void markDotSent()>();

        goto label5;

     label3:
        $z2 = virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.DirectoryHandle: boolean isSendDotDot()>();

        if $z2 == 0 goto label4;

        $r6 = virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.DirectoryHandle: java.nio.file.Path getFile()>();

        $r7 = interfaceinvoke $r6.<java.nio.file.Path: java.nio.file.Path getParent()>();

        varReplacer5337 = "..";

        virtualinvoke r4.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void writeDirEntry(int,org.apache.sshd.server.subsystem.sftp.DirectoryHandle,org.apache.sshd.common.util.buffer.Buffer,int,java.nio.file.Path,java.lang.String,java.nio.file.LinkOption[])>(i1, r1, r2, i2, $r7, varReplacer5337, r0);

        virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.DirectoryHandle: void markDotDotSent()>();

        goto label5;

     label4:
        r3 = virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.DirectoryHandle: java.nio.file.Path next()>();

        $r5 = virtualinvoke r4.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.lang.String getShortName(java.nio.file.Path)>(r3);

        virtualinvoke r4.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void writeDirEntry(int,org.apache.sshd.server.subsystem.sftp.DirectoryHandle,org.apache.sshd.common.util.buffer.Buffer,int,java.nio.file.Path,java.lang.String,java.nio.file.LinkOption[])>(i1, r1, r2, i2, r3, $r5, r0);

     label5:
        i2 = i2 + 1;

        goto label1;

     label6:
        return i2;
    }

    protected transient void writeDirEntry(int, org.apache.sshd.server.subsystem.sftp.DirectoryHandle, org.apache.sshd.common.util.buffer.Buffer, int, java.nio.file.Path, java.lang.String, java.nio.file.LinkOption[]) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        java.nio.file.Path r1;
        java.nio.file.LinkOption[] r2;
        java.util.Map r3;
        org.apache.sshd.common.util.buffer.Buffer r4;
        java.lang.String r5, $r17, r18, $r32, varReplacer5339, varReplacer5340, varReplacer5342, varReplacer5343, varReplacer5344, varReplacer5345, varReplacer5346, varReplacer5347, varReplacer5348;
        int $i0, i1, i2, varReplacer5341;
        org.slf4j.Logger $r6, $r8, $r19, $r21;
        boolean $z0, $z1;
        java.lang.StringBuilder $r7, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r20, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31;
        org.apache.sshd.server.subsystem.sftp.DirectoryHandle r33;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        i1 := @parameter0: int;

        r33 := @parameter1: org.apache.sshd.server.subsystem.sftp.DirectoryHandle;

        r4 := @parameter2: org.apache.sshd.common.util.buffer.Buffer;

        i2 := @parameter3: int;

        r1 := @parameter4: java.nio.file.Path;

        r5 := @parameter5: java.lang.String;

        r2 := @parameter6: java.nio.file.LinkOption[];

        varReplacer5341 = 65535;

        r3 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map resolveFileAttributes(java.nio.file.Path,int,java.nio.file.LinkOption[])>(r1, varReplacer5341, r2);

        virtualinvoke r4.<org.apache.sshd.common.util.buffer.Buffer: void putString(java.lang.String)>(r5);

        $i0 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int version>;

        if $i0 != 3 goto label2;

        r18 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.lang.String getLongName(java.nio.file.Path,java.nio.file.LinkOption[])>(r1, r2);

        virtualinvoke r4.<org.apache.sshd.common.util.buffer.Buffer: void putString(java.lang.String)>(r18);

        $r19 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z1 = interfaceinvoke $r19.<org.slf4j.Logger: boolean isTraceEnabled()>();

        if $z1 == 0 goto label1;

        $r21 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        varReplacer5344 = "writeDirEntry(id=";

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5344);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        varReplacer5348 = ")[";

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5348);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        varReplacer5342 = "] - ";

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5342);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        varReplacer5347 = " [";

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5347);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        varReplacer5339 = "]: ";

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5339);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r21.<org.slf4j.Logger: void trace(java.lang.String)>($r32);

     label1:
        goto label3;

     label2:
        $r6 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r6.<org.slf4j.Logger: boolean isTraceEnabled()>();

        if $z0 == 0 goto label3;

        $r8 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        varReplacer5340 = "writeDirEntry(id=";

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5340);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        varReplacer5346 = ")[";

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5346);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        varReplacer5345 = "] - ";

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5345);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        varReplacer5343 = ": ";

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5343);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r8.<org.slf4j.Logger: void trace(java.lang.String)>($r17);

     label3:
        virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void writeAttrs(org.apache.sshd.common.util.buffer.Buffer,java.util.Map)>(r4, r3);

        return;
    }

    protected transient java.lang.String getLongName(java.nio.file.Path, java.nio.file.LinkOption[]) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        java.nio.file.Path r1;
        java.nio.file.LinkOption[] r2;
        java.lang.String $r3;
        int varReplacer5349;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r1 := @parameter0: java.nio.file.Path;

        r2 := @parameter1: java.nio.file.LinkOption[];

        varReplacer5349 = 1;

        $r3 = specialinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.lang.String getLongName(java.nio.file.Path,boolean,java.nio.file.LinkOption[])>(r1, varReplacer5349, r2);

        return $r3;
    }

    private transient java.lang.String getLongName(java.nio.file.Path, boolean, java.nio.file.LinkOption[]) throws java.io.IOException
    {
        boolean z0;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        java.nio.file.Path r1;
        java.lang.String $r2;
        java.nio.file.LinkOption[] r3;
        java.util.Map r4;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r1 := @parameter0: java.nio.file.Path;

        z0 := @parameter1: boolean;

        r3 := @parameter2: java.nio.file.LinkOption[];

        if z0 == 0 goto label1;

        r4 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map getAttributes(java.nio.file.Path,java.nio.file.LinkOption[])>(r1, r3);

        goto label2;

     label1:
        r4 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

     label2:
        $r2 = specialinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.lang.String getLongName(java.nio.file.Path,java.util.Map)>(r1, r4);

        return $r2;
    }

    private java.lang.String getLongName(java.nio.file.Path, java.util.Map) throws java.io.IOException
    {
        java.util.Map r0;
        boolean $z0, $z1, $z2, $z3, $z4;
        int $i0, $i1, i2, i3, varReplacer5351, varReplacer5352, varReplacer5355, varReplacer5356;
        java.lang.Object $r1, $r4, $r6, $r8, $r18, $r31, $r35, r38, r39, $r45;
        java.lang.Object[] $r2;
        java.lang.String r3, $r20, $r25, $r27, r36, r37, $r41, $r43, varReplacer5353, varReplacer5354, varReplacer5357, varReplacer5358, varReplacer5359, varReplacer5360, varReplacer5361, varReplacer5363, varReplacer5364, varReplacer5365, varReplacer5366, varReplacer5367, varReplacer5368, varReplacer5369, varReplacer5370, varReplacer5371, varReplacer5372, varReplacer5373, varReplacer5374, varReplacer5375;
        java.lang.Boolean r5, r7;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r21, $r22, $r26, $r29, $r30, $r33, $r34, $r42, $r44, $r46, $r47, $r48;
        java.nio.file.attribute.FileTime $r19;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r23;
        java.nio.file.Path r24;
        java.util.Set $r49;
        null_type varReplacer5350, varReplacer5362;
        long varReplacer5376;

        nop;

        r23 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r24 := @parameter0: java.nio.file.Path;

        r0 := @parameter1: java.util.Map;

        varReplacer5361 = "owner";

        $z0 = interfaceinvoke r0.<java.util.Map: boolean containsKey(java.lang.Object)>(varReplacer5361);

        if $z0 == 0 goto label01;

        varReplacer5365 = "owner";

        $r35 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(varReplacer5365);

        varReplacer5350 = null;

        r36 = staticinvoke <java.util.Objects: java.lang.String toString(java.lang.Object,java.lang.String)>($r35, varReplacer5350);

        goto label02;

     label01:
        r36 = "owner";

     label02:
        $i0 = virtualinvoke r36.<java.lang.String: int length()>();

        if $i0 <= 8 goto label03;

        varReplacer5355 = 0;

        varReplacer5356 = 8;

        r36 = virtualinvoke r36.<java.lang.String: java.lang.String substring(int,int)>(varReplacer5355, varReplacer5356);

        goto label05;

     label03:
        i2 = virtualinvoke r36.<java.lang.String: int length()>();

     label04:
        if i2 >= 8 goto label05;

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r36);

        varReplacer5375 = " ";

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5375);

        r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        i2 = i2 + 1;

        goto label04;

     label05:
        varReplacer5366 = "group";

        $z1 = interfaceinvoke r0.<java.util.Map: boolean containsKey(java.lang.Object)>(varReplacer5366);

        if $z1 == 0 goto label06;

        varReplacer5363 = "group";

        $r31 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(varReplacer5363);

        varReplacer5362 = null;

        r37 = staticinvoke <java.util.Objects: java.lang.String toString(java.lang.Object,java.lang.String)>($r31, varReplacer5362);

        goto label07;

     label06:
        r37 = "group";

     label07:
        $i1 = virtualinvoke r37.<java.lang.String: int length()>();

        if $i1 <= 8 goto label08;

        varReplacer5351 = 0;

        varReplacer5352 = 8;

        r37 = virtualinvoke r37.<java.lang.String: java.lang.String substring(int,int)>(varReplacer5351, varReplacer5352);

        goto label10;

     label08:
        i3 = virtualinvoke r37.<java.lang.String: int length()>();

     label09:
        if i3 >= 8 goto label10;

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r37);

        varReplacer5358 = " ";

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5358);

        r37 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        i3 = i3 + 1;

        goto label09;

     label10:
        varReplacer5371 = "size";

        $r1 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(varReplacer5371);

        r38 = (java.lang.Number) $r1;

        if r38 != null goto label11;

        varReplacer5376 = 0L;

        r38 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(varReplacer5376);

     label11:
        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = r38;

        varReplacer5372 = "%1$8s";

        r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(varReplacer5372, $r2);

        varReplacer5364 = "isDirectory";

        $r4 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(varReplacer5364);

        r5 = (java.lang.Boolean) $r4;

        varReplacer5368 = "isSymbolicLink";

        $r6 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(varReplacer5368);

        r7 = (java.lang.Boolean) $r6;

        varReplacer5373 = "permissions";

        $r8 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(varReplacer5373);

        r39 = (java.util.Set) $r8;

        if r39 != null goto label12;

        r39 = staticinvoke <java.util.EnumSet: java.util.EnumSet noneOf(java.lang.Class)>(class "Ljava/nio/file/attribute/PosixFilePermission;");

     label12:
        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        $z2 = staticinvoke <org.apache.sshd.server.subsystem.sftp.SftpHelper: boolean getBool(java.lang.Boolean)>(r5);

        if $z2 == 0 goto label13;

        $r41 = "d";

        goto label15;

     label13:
        $z3 = staticinvoke <org.apache.sshd.server.subsystem.sftp.SftpHelper: boolean getBool(java.lang.Boolean)>(r7);

        if $z3 == 0 goto label14;

        $r41 = "l";

        goto label15;

     label14:
        $r41 = "-";

     label15:
        $r42 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

        $r49 = (java.util.Set) r39;

        $r43 = staticinvoke <java.nio.file.attribute.PosixFilePermissions: java.lang.String toString(java.util.Set)>($r49);

        $r44 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        varReplacer5353 = "  ";

        $r9 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5353);

        varReplacer5359 = "nlink";

        $z4 = interfaceinvoke r0.<java.util.Map: boolean containsKey(java.lang.Object)>(varReplacer5359);

        if $z4 == 0 goto label16;

        varReplacer5374 = "nlink";

        $r45 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(varReplacer5374);

        goto label17;

     label16:
        $r45 = "1";

     label17:
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r45);

        varReplacer5354 = " ";

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5354);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r36);

        varReplacer5367 = " ";

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5367);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r37);

        varReplacer5357 = " ";

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5357);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        varReplacer5370 = " ";

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5370);

        varReplacer5369 = "lastModifiedTime";

        $r18 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(varReplacer5369);

        $r19 = (java.nio.file.attribute.FileTime) $r18;

        $r20 = staticinvoke <org.apache.sshd.server.subsystem.sftp.UnixDateFormat: java.lang.String getUnixDate(java.nio.file.attribute.FileTime)>($r19);

        $r21 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        varReplacer5360 = " ";

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5360);

        $r25 = virtualinvoke r23.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.lang.String getShortName(java.nio.file.Path)>(r24);

        $r26 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r27;
    }

    protected java.lang.String getShortName(java.nio.file.Path) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        java.nio.file.Path r1, r2, r8, r9, r10;
        int i0, varReplacer5378;
        boolean $z0;
        java.lang.String $r3, $r4, $r5, $r6, $r7, varReplacer5377;
        char $c1;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r1 := @parameter0: java.nio.file.Path;

        r2 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.nio.file.Path normalize(java.nio.file.Path)>(r1);

        i0 = interfaceinvoke r2.<java.nio.file.Path: int getNameCount()>();

        $z0 = staticinvoke <org.apache.sshd.common.util.OsUtils: boolean isUNIX()>();

        if $z0 == 0 goto label4;

        r9 = interfaceinvoke r1.<java.nio.file.Path: java.nio.file.Path getFileName()>();

        if r9 != null goto label1;

        varReplacer5377 = ".";

        r8 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.nio.file.Path resolveFile(java.lang.String)>(varReplacer5377);

        r9 = interfaceinvoke r8.<java.nio.file.Path: java.nio.file.Path getFileName()>();

     label1:
        if r9 != null goto label2;

        if i0 <= 0 goto label2;

        r9 = interfaceinvoke r2.<java.nio.file.Path: java.nio.file.Path getFileName()>();

     label2:
        if r9 == null goto label3;

        $r7 = interfaceinvoke r9.<java.nio.file.Path: java.lang.String toString()>();

        return $r7;

     label3:
        $r6 = interfaceinvoke r2.<java.nio.file.Path: java.lang.String toString()>();

        return $r6;

     label4:
        if i0 <= 0 goto label5;

        r10 = interfaceinvoke r2.<java.nio.file.Path: java.nio.file.Path getFileName()>();

        $r5 = interfaceinvoke r10.<java.nio.file.Path: java.lang.String toString()>();

        return $r5;

     label5:
        $r3 = interfaceinvoke r2.<java.nio.file.Path: java.lang.String toString()>();

        $c1 = <java.io.File: char separatorChar>;

        varReplacer5378 = 47;

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String replace(char,char)>($c1, varReplacer5378);

        return $r4;
    }

    protected transient java.util.Map resolveFileAttributes(java.nio.file.Path, int, java.nio.file.LinkOption[]) throws java.io.IOException
    {
        java.nio.file.Path r0;
        java.nio.file.LinkOption[] r1;
        java.lang.Boolean r2;
        boolean $z0;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r3;
        int i0;
        java.util.Map $r4, $r7;
        java.io.FileNotFoundException $r5;
        java.lang.String $r6;

        nop;

        r3 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: java.nio.file.Path;

        i0 := @parameter1: int;

        r1 := @parameter2: java.nio.file.LinkOption[];

        r2 = staticinvoke <org.apache.sshd.common.util.io.IoUtils: java.lang.Boolean checkFileExists(java.nio.file.Path,java.nio.file.LinkOption[])>(r0, r1);

        if r2 != null goto label1;

        $r7 = virtualinvoke r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map handleUnknownStatusFileAttributes(java.nio.file.Path,int,java.nio.file.LinkOption[])>(r0, i0, r1);

        return $r7;

     label1:
        $z0 = virtualinvoke r2.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

        $r5 = new java.io.FileNotFoundException;

        $r6 = interfaceinvoke r0.<java.nio.file.Path: java.lang.String toString()>();

        specialinvoke $r5.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label2:
        $r4 = virtualinvoke r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map getAttributes(java.nio.file.Path,int,java.nio.file.LinkOption[])>(r0, i0, r1);

        return $r4;
    }

    protected void writeAttrs(org.apache.sshd.common.util.buffer.Buffer, java.util.Map) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        org.apache.sshd.common.util.buffer.Buffer r1;
        java.util.Map r2;
        int $i0;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r1 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        r2 := @parameter1: java.util.Map;

        $i0 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int version>;

        staticinvoke <org.apache.sshd.server.subsystem.sftp.SftpHelper: void writeAttrs(int,org.apache.sshd.common.util.buffer.Buffer,java.util.Map)>($i0, r1, r2);

        return;
    }

    protected transient java.util.Map getAttributes(java.nio.file.Path, java.nio.file.LinkOption[]) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        java.nio.file.Path r1;
        java.nio.file.LinkOption[] r2;
        java.util.Map $r3;
        int varReplacer5379;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r1 := @parameter0: java.nio.file.Path;

        r2 := @parameter1: java.nio.file.LinkOption[];

        varReplacer5379 = 65535;

        $r3 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map getAttributes(java.nio.file.Path,int,java.nio.file.LinkOption[])>(r1, varReplacer5379, r2);

        return $r3;
    }

    protected transient java.util.Map handleUnknownStatusFileAttributes(java.nio.file.Path, int, java.nio.file.LinkOption[]) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        org.apache.sshd.server.subsystem.sftp.UnsupportedAttributePolicy $r1, $r21;
        int[] $r2;
        int $i0, $i1, i2;
        java.lang.StringBuilder $r3, $r5, $r7, $r8, $r12, $r13, $r14, $r16, $r18, $r19, $r20, $r22;
        org.slf4j.Logger $r4, $r17;
        java.nio.file.Path r6;
        java.lang.String $r9, $r15, $r23, varReplacer5380, varReplacer5381, varReplacer5382, varReplacer5383, varReplacer5384;
        java.nio.file.LinkOption[] r10;
        java.nio.file.AccessDeniedException $r11;
        java.util.Map $r24;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r6 := @parameter0: java.nio.file.Path;

        i2 := @parameter1: int;

        r10 := @parameter2: java.nio.file.LinkOption[];

        $r2 = <org.apache.sshd.server.subsystem.sftp.SftpSubsystem$3: int[] $SwitchMap$org$apache$sshd$server$subsystem$sftp$UnsupportedAttributePolicy>;

        $r1 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.subsystem.sftp.UnsupportedAttributePolicy unsupportedAttributePolicy>;

        $i0 = virtualinvoke $r1.<org.apache.sshd.server.subsystem.sftp.UnsupportedAttributePolicy: int ordinal()>();

        $i1 = $r2[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            default: goto label4;
        };

     label1:
        goto label5;

     label2:
        $r11 = new java.nio.file.AccessDeniedException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        varReplacer5383 = "Cannot determine existence for attributes of ";

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5383);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.nio.file.AccessDeniedException: void <init>(java.lang.String)>($r15);

        throw $r11;

     label3:
        $r4 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        varReplacer5380 = "handleUnknownStatusFileAttributes(";

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5380);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        varReplacer5381 = ") cannot determine existence";

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5381);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<org.slf4j.Logger: void warn(java.lang.String)>($r9);

        goto label5;

     label4:
        $r17 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        varReplacer5382 = "handleUnknownStatusFileAttributes(";

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5382);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        varReplacer5384 = ") unknown policy: ";

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5384);

        $r21 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.subsystem.sftp.UnsupportedAttributePolicy unsupportedAttributePolicy>;

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r17.<org.slf4j.Logger: void warn(java.lang.String)>($r23);

     label5:
        $r24 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map getAttributes(java.nio.file.Path,int,java.nio.file.LinkOption[])>(r6, i2, r10);

        return $r24;
    }

    protected transient java.util.Map getAttributes(java.nio.file.Path, int, java.nio.file.LinkOption[]) throws java.io.IOException
    {
        java.nio.file.Path r0;
        java.nio.file.FileSystem r1;
        java.util.Set r2;
        java.util.Comparator $r4;
        java.util.TreeMap r5, $r22;
        boolean $z0, $z1, $z2, $z4;
        int $i0, i1, $i2, $i3;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r7;
        java.nio.file.LinkOption[] r8;
        java.lang.Object $r9, $r11, r16;
        java.util.Map r10, r21;
        java.lang.StringBuilder $r13, $r14, $r24;
        java.lang.String $r15, r18, r20, varReplacer5385, varReplacer5386;
        java.util.Iterator r17, r19;
        java.util.ArrayList $r23;
        java.util.Collection $r25, $r26;

        nop;

        r7 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: java.nio.file.Path;

        i1 := @parameter1: int;

        r8 := @parameter2: java.nio.file.LinkOption[];

        r1 = interfaceinvoke r0.<java.nio.file.Path: java.nio.file.FileSystem getFileSystem()>();

        r2 = virtualinvoke r1.<java.nio.file.FileSystem: java.util.Set supportedFileAttributeViews()>();

        $r22 = new java.util.TreeMap;

        $r4 = <java.lang.String: java.util.Comparator CASE_INSENSITIVE_ORDER>;

        specialinvoke $r22.<java.util.TreeMap: void <init>(java.util.Comparator)>($r4);

        r5 = $r22;

        $z0 = staticinvoke <org.apache.sshd.common.util.GenericUtils: boolean isEmpty(java.util.Collection)>(r2);

        if $z0 == 0 goto label1;

        r16 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        goto label4;

     label1:
        varReplacer5385 = "unix";

        $z1 = interfaceinvoke r2.<java.util.Collection: boolean contains(java.lang.Object)>(varReplacer5385);

        if $z1 == 0 goto label2;

        r16 = <org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.List DEFAULT_UNIX_VIEW>;

        goto label4;

     label2:
        $r23 = new java.util.ArrayList;

        $i0 = interfaceinvoke r2.<java.util.Collection: int size()>();

        specialinvoke $r23.<java.util.ArrayList: void <init>(int)>($i0);

        r16 = $r23;

        r17 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z2 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        $r11 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>();

        r18 = (java.lang.String) $r11;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        varReplacer5386 = ":*";

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5386);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $r25 = (java.util.Collection) r16;

        interfaceinvoke $r25.<java.util.Collection: boolean add(java.lang.Object)>($r15);

        goto label3;

     label4:
        $r26 = (java.util.Collection) r16;

        r19 = interfaceinvoke $r26.<java.util.Collection: java.util.Iterator iterator()>();

     label5:
        $z4 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label7;

        $r9 = interfaceinvoke r19.<java.util.Iterator: java.lang.Object next()>();

        r20 = (java.lang.String) $r9;

        r10 = virtualinvoke r7.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map readFileAttributes(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption[])>(r0, r20, r8);

        $i3 = staticinvoke <org.apache.sshd.common.util.GenericUtils: int size(java.util.Map)>(r10);

        if $i3 <= 0 goto label6;

        interfaceinvoke r5.<java.util.Map: void putAll(java.util.Map)>(r10);

     label6:
        goto label5;

     label7:
        r21 = virtualinvoke r7.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map resolveMissingFileAttributes(java.nio.file.Path,int,java.util.Map,java.nio.file.LinkOption[])>(r0, i1, r5, r8);

        $i2 = staticinvoke <org.apache.sshd.common.util.GenericUtils: int size(java.util.Map)>(r21);

        if $i2 <= 0 goto label8;

        interfaceinvoke r5.<java.util.Map: void putAll(java.util.Map)>(r21);

     label8:
        return r5;
    }

    protected transient java.util.Map resolveMissingFileAttributes(java.nio.file.Path, int, java.util.Map, java.nio.file.LinkOption[]) throws java.io.IOException
    {
        java.util.Map $r0, $r3, r8;
        java.util.Set $r1;
        java.util.Iterator r2;
        java.lang.Object $r4, $r6, r9, $r10, $r47, r48;
        java.util.Map$Entry r5;
        java.lang.String r7, $r27, $r40, $r43, $r45, varReplacer5387, varReplacer5388, varReplacer5389, varReplacer5390, varReplacer5391, varReplacer5392, varReplacer5393, varReplacer5394;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.sshd.common.util.io.FileInfoExtractor r11;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r12;
        java.nio.file.Path r13;
        java.nio.file.LinkOption[] r14;
        org.slf4j.Logger $r16, $r18, $r31, $r33;
        java.lang.StringBuilder $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r34, $r35, $r36, $r37, $r38, $r41, $r42, $r44, $r51, $r52;
        java.util.Comparator $r29;
        java.lang.Throwable $r30, r49;
        java.lang.Class $r39;
        int i0;
        java.util.TreeMap r46, $r50;
        java.io.IOException $r53;

        nop;

        r12 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r13 := @parameter0: java.nio.file.Path;

        i0 := @parameter1: int;

        r8 := @parameter2: java.util.Map;

        r14 := @parameter3: java.nio.file.LinkOption[];

        r46 = null;

        $r0 = <org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map FILEATTRS_RESOLVERS>;

        $r1 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z4 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label11;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r4;

        $r6 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        r7 = (java.lang.String) $r6;

        $z0 = staticinvoke <org.apache.sshd.common.util.GenericUtils: boolean isEmpty(java.util.Map)>(r8);

        if $z0 == 0 goto label02;

        $r47 = null;

        goto label03;

     label02:
        $r47 = interfaceinvoke r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7);

     label03:
        r9 = $r47;

        $r10 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        r11 = (org.apache.sshd.common.util.io.FileInfoExtractor) $r10;

     label04:
        r48 = virtualinvoke r12.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.lang.Object resolveMissingFileAttributeValue(java.nio.file.Path,java.lang.String,java.lang.Object,org.apache.sshd.common.util.io.FileInfoExtractor,java.nio.file.LinkOption[])>(r13, r7, r9, r11, r14);

        $z1 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(r48, r9);

        if $z1 == 0 goto label06;

     label05:
        goto label01;

     label06:
        if r46 != null goto label07;

        $r50 = new java.util.TreeMap;

        $r29 = <java.lang.String: java.util.Comparator CASE_INSENSITIVE_ORDER>;

        specialinvoke $r50.<java.util.TreeMap: void <init>(java.util.Comparator)>($r29);

        r46 = $r50;

     label07:
        interfaceinvoke r46.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, r48);

        $r16 = r12.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z2 = interfaceinvoke $r16.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z2 == 0 goto label08;

        $r18 = r12.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();

        varReplacer5388 = "resolveMissingFileAttributes(";

        $r19 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5388);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r13);

        varReplacer5394 = ")[";

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5394);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        varReplacer5392 = "] replace ";

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5392);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r9);

        varReplacer5387 = " with ";

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5387);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r48);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r18.<org.slf4j.Logger: void debug(java.lang.String)>($r27);

     label08:
        goto label10;

     label09:
        $r30 := @caughtexception;

        r49 = $r30;

        $r31 = r12.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z3 = interfaceinvoke $r31.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z3 == 0 goto label10;

        $r33 = r12.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r52 = new java.lang.StringBuilder;

        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        varReplacer5393 = "resolveMissingFileAttributes(";

        $r34 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5393);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r13);

        varReplacer5391 = ")[";

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5391);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        varReplacer5389 = "] failed (";

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5389);

        $r39 = virtualinvoke r49.<java.lang.Object: java.lang.Class getClass()>();

        $r40 = virtualinvoke $r39.<java.lang.Class: java.lang.String getSimpleName()>();

        $r41 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        varReplacer5390 = ") to resolve missing value: ";

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5390);

        $r53 = (java.io.IOException) r49;

        $r43 = virtualinvoke $r53.<java.io.IOException: java.lang.String getMessage()>();

        $r44 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r33.<org.slf4j.Logger: void debug(java.lang.String)>($r45);

     label10:
        goto label01;

     label11:
        if r46 != null goto label12;

        $r3 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        return $r3;

     label12:
        return r46;

        catch java.io.IOException from label04 to label05 with label09;
        catch java.io.IOException from label06 to label08 with label09;
    }

    protected transient java.lang.Object resolveMissingFileAttributeValue(java.nio.file.Path, java.lang.String, java.lang.Object, org.apache.sshd.common.util.io.FileInfoExtractor, java.nio.file.LinkOption[]) throws java.io.IOException
    {
        java.lang.Object r0, $r4;
        org.apache.sshd.common.util.io.FileInfoExtractor r1;
        java.nio.file.Path r2;
        java.nio.file.LinkOption[] r3;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r5;
        java.lang.String r6;

        nop;

        r5 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r2 := @parameter0: java.nio.file.Path;

        r6 := @parameter1: java.lang.String;

        r0 := @parameter2: java.lang.Object;

        r1 := @parameter3: org.apache.sshd.common.util.io.FileInfoExtractor;

        r3 := @parameter4: java.nio.file.LinkOption[];

        if r0 == null goto label1;

        return r0;

     label1:
        $r4 = interfaceinvoke r1.<org.apache.sshd.common.util.io.FileInfoExtractor: java.lang.Object infoOf(java.nio.file.Path,java.nio.file.LinkOption[])>(r2, r3);

        return $r4;
    }

    protected transient java.util.Map addMissingAttribute(java.nio.file.Path, java.util.Map, java.lang.String, org.apache.sshd.common.util.io.FileInfoExtractor, java.nio.file.LinkOption[]) throws java.io.IOException
    {
        boolean $z0;
        java.lang.String r0;
        org.apache.sshd.common.util.io.FileInfoExtractor r1;
        java.nio.file.Path r2;
        java.nio.file.LinkOption[] r3;
        java.util.Comparator $r6;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r7;
        java.lang.Object r8, $r9, r10, r11;
        java.util.TreeMap $r12;
        java.util.Map $r13, $r14, $r15, $r16, $r17, $r18;

        nop;

        r7 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r2 := @parameter0: java.nio.file.Path;

        r8 := @parameter1: java.util.Map;

        r0 := @parameter2: java.lang.String;

        r1 := @parameter3: org.apache.sshd.common.util.io.FileInfoExtractor;

        r3 := @parameter4: java.nio.file.LinkOption[];

        $r13 = (java.util.Map) r8;

        $z0 = staticinvoke <org.apache.sshd.common.util.GenericUtils: boolean isEmpty(java.util.Map)>($r13);

        if $z0 == 0 goto label1;

        $r9 = null;

        goto label2;

     label1:
        $r14 = (java.util.Map) r8;

        $r9 = interfaceinvoke $r14.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

     label2:
        r10 = $r9;

        if r10 == null goto label3;

        $r15 = (java.util.Map) r8;

        return $r15;

     label3:
        r11 = interfaceinvoke r1.<org.apache.sshd.common.util.io.FileInfoExtractor: java.lang.Object infoOf(java.nio.file.Path,java.nio.file.LinkOption[])>(r2, r3);

        if r11 != null goto label4;

        $r16 = (java.util.Map) r8;

        return $r16;

     label4:
        if r8 != null goto label5;

        $r12 = new java.util.TreeMap;

        $r6 = <java.lang.String: java.util.Comparator CASE_INSENSITIVE_ORDER>;

        specialinvoke $r12.<java.util.TreeMap: void <init>(java.util.Comparator)>($r6);

        r8 = $r12;

     label5:
        $r17 = (java.util.Map) r8;

        interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r11);

        $r18 = (java.util.Map) r8;

        return $r18;
    }

    protected transient java.util.Map readFileAttributes(java.nio.file.Path, java.lang.String, java.nio.file.LinkOption[]) throws java.io.IOException
    {
        java.nio.file.Path r0;
        java.lang.String r1;
        java.nio.file.LinkOption[] r2;
        java.util.Map $r3, $r7;
        java.lang.Throwable $r4, r5;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r6;
        java.io.IOException $r8;

        nop;

        r6 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: java.nio.file.Path;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.nio.file.LinkOption[];

     label1:
        $r3 = staticinvoke <java.nio.file.Files: java.util.Map readAttributes(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption[])>(r0, r1, r2);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        r5 = $r4;

        $r8 = (java.io.IOException) r5;

        $r7 = virtualinvoke r6.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map handleReadFileAttributesException(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption[],java.io.IOException)>(r0, r1, r2, $r8);

        return $r7;

        catch java.io.IOException from label1 to label2 with label3;
    }

    protected java.util.Map handleReadFileAttributesException(java.nio.file.Path, java.lang.String, java.nio.file.LinkOption[], java.io.IOException) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        org.apache.sshd.server.subsystem.sftp.UnsupportedAttributePolicy $r1, $r27;
        int[] $r2;
        int $i0, $i1;
        java.lang.StringBuilder $r3, $r5, $r7, $r8, $r10, $r11, $r15, $r16, $r18, $r20, $r22, $r23, $r24, $r25, $r26, $r28, $r29, $r32, $r33, $r35;
        org.slf4j.Logger $r4, $r21;
        java.nio.file.Path r6;
        java.lang.String r9, $r14, $r17, $r19, $r31, $r34, $r36, varReplacer5395, varReplacer5396, varReplacer5397, varReplacer5398, varReplacer5399, varReplacer5400, varReplacer5401, varReplacer5402, varReplacer5403;
        java.io.IOException r12;
        java.lang.Class $r13, $r30;
        java.nio.file.LinkOption[] r37;
        java.util.Map $r38;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r6 := @parameter0: java.nio.file.Path;

        r9 := @parameter1: java.lang.String;

        r37 := @parameter2: java.nio.file.LinkOption[];

        r12 := @parameter3: java.io.IOException;

        $r2 = <org.apache.sshd.server.subsystem.sftp.SftpSubsystem$3: int[] $SwitchMap$org$apache$sshd$server$subsystem$sftp$UnsupportedAttributePolicy>;

        $r1 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.subsystem.sftp.UnsupportedAttributePolicy unsupportedAttributePolicy>;

        $i0 = virtualinvoke $r1.<org.apache.sshd.server.subsystem.sftp.UnsupportedAttributePolicy: int ordinal()>();

        $i1 = $r2[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label3;
            case 3: goto label2;
            default: goto label4;
        };

     label1:
        goto label5;

     label2:
        $r4 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        varReplacer5401 = "handleReadFileAttributesException(";

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5401);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        varReplacer5399 = ")[";

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5399);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        varReplacer5402 = "] ";

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5402);

        $r13 = virtualinvoke r12.<java.lang.Object: java.lang.Class getClass()>();

        $r14 = virtualinvoke $r13.<java.lang.Class: java.lang.String getSimpleName()>();

        $r15 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        varReplacer5397 = ": ";

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5397);

        $r17 = virtualinvoke r12.<java.io.IOException: java.lang.String getMessage()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<org.slf4j.Logger: void warn(java.lang.String)>($r19);

        goto label5;

     label3:
        throw r12;

     label4:
        $r21 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        varReplacer5395 = "handleReadFileAttributesException(";

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5395);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        varReplacer5400 = ")[";

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5400);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        varReplacer5398 = "] Unknown policy (";

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5398);

        $r27 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.subsystem.sftp.UnsupportedAttributePolicy unsupportedAttributePolicy>;

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r27);

        varReplacer5396 = ") for ";

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5396);

        $r30 = virtualinvoke r12.<java.lang.Object: java.lang.Class getClass()>();

        $r31 = virtualinvoke $r30.<java.lang.Class: java.lang.String getSimpleName()>();

        $r32 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        varReplacer5403 = ": ";

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5403);

        $r34 = virtualinvoke r12.<java.io.IOException: java.lang.String getMessage()>();

        $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r21.<org.slf4j.Logger: void warn(java.lang.String)>($r36);

     label5:
        $r38 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        return $r38;
    }

    protected void setAttributes(java.nio.file.Path, java.util.Map) throws java.io.IOException
    {
        java.util.HashSet r1, $r39;
        java.util.Map r2;
        java.util.Set $r3;
        java.util.Iterator r4;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r5;
        java.lang.Object $r6, r32;
        java.lang.String r7, $r13, r31, r33, varReplacer5404, varReplacer5405, varReplacer5406, varReplacer5407, varReplacer5408, varReplacer5409, varReplacer5411, varReplacer5412, varReplacer5413, varReplacer5414;
        int $i0, varReplacer5410;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z11;
        java.nio.file.Path r8;
        java.lang.StringBuilder $r10, $r11, $r12, $r40;
        java.nio.file.LinkOption[] $r14;
        java.io.File $r16;
        java.nio.file.attribute.GroupPrincipal $r17;
        java.nio.file.attribute.UserPrincipal $r18;
        java.lang.Number $r19;
        java.lang.Object[] $r20;
        java.nio.file.StandardOpenOption $r21;
        java.nio.channels.FileChannel r22;
        java.lang.Throwable $r24, $r25, r26, r27, $r28, $r29, $r30, r34, r35, r36, r38;
        byte b1;
        long l2;
        java.util.Collection r37;
        java.nio.file.OpenOption[] $r41;

        nop;

        r5 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r8 := @parameter0: java.nio.file.Path;

        r2 := @parameter1: java.util.Map;

        $r39 = new java.util.HashSet;

        specialinvoke $r39.<java.util.HashSet: void <init>()>();

        r1 = $r39;

        $r3 = interfaceinvoke r2.<java.util.Map: java.util.Set keySet()>();

        r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z11 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z11 == 0 goto label42;

        $r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.lang.String) $r6;

        r31 = null;

        r32 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7);

        r33 = r7;

        b1 = -1;

        $i0 = virtualinvoke r33.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case -1540361492: goto label09;
            case -932915833: goto label10;
            case 102338: goto label04;
            case 115792: goto label03;
            case 3530753: goto label02;
            case 98629247: goto label06;
            case 106164915: goto label05;
            case 1133704324: goto label07;
            case 1586015820: goto label08;
            default: goto label11;
        };

     label02:
        varReplacer5412 = "size";

        $z5 = virtualinvoke r33.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer5412);

        if $z5 == 0 goto label11;

        b1 = 0;

        goto label11;

     label03:
        varReplacer5406 = "uid";

        $z6 = virtualinvoke r33.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer5406);

        if $z6 == 0 goto label11;

        b1 = 1;

        goto label11;

     label04:
        varReplacer5414 = "gid";

        $z7 = virtualinvoke r33.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer5414);

        if $z7 == 0 goto label11;

        b1 = 2;

        goto label11;

     label05:
        varReplacer5413 = "owner";

        $z3 = virtualinvoke r33.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer5413);

        if $z3 == 0 goto label11;

        b1 = 3;

        goto label11;

     label06:
        varReplacer5408 = "group";

        $z4 = virtualinvoke r33.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer5408);

        if $z4 == 0 goto label11;

        b1 = 4;

        goto label11;

     label07:
        varReplacer5407 = "permissions";

        $z2 = virtualinvoke r33.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer5407);

        if $z2 == 0 goto label11;

        b1 = 5;

        goto label11;

     label08:
        varReplacer5409 = "creationTime";

        $z0 = virtualinvoke r33.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer5409);

        if $z0 == 0 goto label11;

        b1 = 6;

        goto label11;

     label09:
        varReplacer5411 = "lastModifiedTime";

        $z9 = virtualinvoke r33.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer5411);

        if $z9 == 0 goto label11;

        b1 = 7;

        goto label11;

     label10:
        varReplacer5404 = "lastAccessTime";

        $z8 = virtualinvoke r33.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer5404);

        if $z8 == 0 goto label11;

        b1 = 8;

     label11:
        tableswitch(b1)
        {
            case 0: goto label12;
            case 1: goto label28;
            case 2: goto label29;
            case 3: goto label30;
            case 4: goto label31;
            case 5: goto label32;
            case 6: goto label34;
            case 7: goto label35;
            case 8: goto label36;
            default: goto label37;
        };

     label12:
        $r19 = (java.lang.Number) r32;

        l2 = virtualinvoke $r19.<java.lang.Number: long longValue()>();

        $r20 = newarray (java.nio.file.OpenOption)[1];

        $r21 = <java.nio.file.StandardOpenOption: java.nio.file.StandardOpenOption WRITE>;

        $r20[0] = $r21;

        $r41 = (java.nio.file.OpenOption[]) $r20;

        r22 = staticinvoke <java.nio.channels.FileChannel: java.nio.channels.FileChannel open(java.nio.file.Path,java.nio.file.OpenOption[])>(r8, $r41);

        r34 = null;

     label13:
        virtualinvoke r22.<java.nio.channels.FileChannel: java.nio.channels.FileChannel truncate(long)>(l2);

     label14:
        if r22 == null goto label27;

        if r34 == null goto label18;

     label15:
        virtualinvoke r22.<java.nio.channels.FileChannel: void close()>();

     label16:
        goto label27;

     label17:
        $r30 := @caughtexception;

        r35 = $r30;

        virtualinvoke r34.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r35);

        goto label27;

     label18:
        virtualinvoke r22.<java.nio.channels.FileChannel: void close()>();

        goto label27;

     label19:
        $r29 := @caughtexception;

        r36 = $r29;

        r34 = r36;

        throw r36;

     label20:
        $r28 := @caughtexception;

        r27 = $r28;

     label21:
        if r22 == null goto label26;

        if r34 == null goto label25;

     label22:
        virtualinvoke r22.<java.nio.channels.FileChannel: void close()>();

     label23:
        goto label26;

     label24:
        $r25 := @caughtexception;

        r26 = $r25;

        virtualinvoke r34.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r26);

        goto label26;

     label25:
        virtualinvoke r22.<java.nio.channels.FileChannel: void close()>();

     label26:
        throw r27;

     label27:
        goto label01;

     label28:
        r31 = "unix";

        goto label37;

     label29:
        r31 = "unix";

        goto label37;

     label30:
        r31 = "posix";

        $r18 = (java.nio.file.attribute.UserPrincipal) r32;

        r32 = specialinvoke r5.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.nio.file.attribute.UserPrincipal toUser(java.nio.file.Path,java.nio.file.attribute.UserPrincipal)>(r8, $r18);

        goto label37;

     label31:
        r31 = "posix";

        $r17 = (java.nio.file.attribute.GroupPrincipal) r32;

        r32 = specialinvoke r5.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.nio.file.attribute.GroupPrincipal toGroup(java.nio.file.Path,java.nio.file.attribute.GroupPrincipal)>(r8, $r17);

        goto label37;

     label32:
        $z1 = staticinvoke <org.apache.sshd.common.util.OsUtils: boolean isWin32()>();

        if $z1 == 0 goto label33;

        r37 = (java.util.Collection) r32;

        $r16 = interfaceinvoke r8.<java.nio.file.Path: java.io.File toFile()>();

        staticinvoke <org.apache.sshd.common.util.io.IoUtils: void setPermissionsToFile(java.io.File,java.util.Collection)>($r16, r37);

        goto label01;

     label33:
        r31 = "posix";

        goto label37;

     label34:
        r31 = "basic";

        goto label37;

     label35:
        r31 = "basic";

        goto label37;

     label36:
        r31 = "basic";

        goto label37;

     label37:
        if r31 == null goto label41;

        if r32 == null goto label41;

     label38:
        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r31);

        varReplacer5405 = ":";

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5405);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer5410 = 0;

        $r14 = staticinvoke <org.apache.sshd.common.util.io.IoUtils: java.nio.file.LinkOption[] getLinkOptions(boolean)>(varReplacer5410);

        staticinvoke <java.nio.file.Files: java.nio.file.Path setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption[])>(r8, $r13, r32, $r14);

     label39:
        goto label41;

     label40:
        $r24 := @caughtexception;

        r38 = $r24;

        interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>(r7);

     label41:
        goto label01;

     label42:
        virtualinvoke r5.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void handleUnsupportedAttributes(java.util.Collection)>(r1);

        return;

        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.lang.Throwable from label13 to label14 with label19;
        catch java.lang.Throwable from label22 to label23 with label24;
        catch java.lang.Throwable from label19 to label21 with label20;
        catch java.lang.UnsupportedOperationException from label38 to label39 with label40;
    }

    protected void handleUnsupportedAttributes(java.util.Collection)
    {
        java.util.Collection r0;
        boolean $z0, $z1;
        java.lang.StringBuilder $r1, r2, $r7, $r9, $r11, $r14, $r15, $r17, $r19, $r21, $r23, $r24, $r26;
        java.util.Iterator r3;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r4;
        org.apache.sshd.server.subsystem.sftp.UnsupportedAttributePolicy $r5, $r25;
        int[] $r6;
        int $i0, $i1, $i2;
        org.slf4j.Logger $r8, $r20;
        java.lang.String $r10, $r12, $r16, $r18, $r22, $r27, r29, varReplacer5415, varReplacer5416, varReplacer5417, varReplacer5418, varReplacer5419;
        java.lang.UnsupportedOperationException $r13;
        java.lang.Object $r28;

        nop;

        r4 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: java.util.Collection;

        $z0 = interfaceinvoke r0.<java.util.Collection: boolean isEmpty()>();

        if $z0 != 0 goto label8;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        r2 = $r1;

        r3 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r28 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r29 = (java.lang.String) $r28;

        $i2 = virtualinvoke r2.<java.lang.StringBuilder: int length()>();

        if $i2 <= 0 goto label2;

        varReplacer5418 = ", ";

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5418);

     label2:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r29);

        goto label1;

     label3:
        $r6 = <org.apache.sshd.server.subsystem.sftp.SftpSubsystem$3: int[] $SwitchMap$org$apache$sshd$server$subsystem$sftp$UnsupportedAttributePolicy>;

        $r5 = r4.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.subsystem.sftp.UnsupportedAttributePolicy unsupportedAttributePolicy>;

        $i0 = virtualinvoke $r5.<org.apache.sshd.server.subsystem.sftp.UnsupportedAttributePolicy: int ordinal()>();

        $i1 = $r6[$i0];

        tableswitch($i1)
        {
            case 1: goto label4;
            case 2: goto label6;
            case 3: goto label5;
            default: goto label7;
        };

     label4:
        goto label8;

     label5:
        $r8 = r4.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        varReplacer5417 = "Unsupported attributes: ";

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5417);

        $r10 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r8.<org.slf4j.Logger: void warn(java.lang.String)>($r12);

        goto label8;

     label6:
        $r13 = new java.lang.UnsupportedOperationException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        varReplacer5415 = "Unsupported attributes: ";

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5415);

        $r16 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r18);

        throw $r13;

     label7:
        $r20 = r4.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        varReplacer5416 = "Unknown policy for attributes=";

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5416);

        $r22 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        varReplacer5419 = ": ";

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5419);

        $r25 = r4.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.subsystem.sftp.UnsupportedAttributePolicy unsupportedAttributePolicy>;

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r20.<org.slf4j.Logger: void warn(java.lang.String)>($r27);

     label8:
        return;
    }

    private java.nio.file.attribute.GroupPrincipal toGroup(java.nio.file.Path, java.nio.file.attribute.GroupPrincipal) throws java.io.IOException
    {
        java.nio.file.attribute.GroupPrincipal r0, $r5;
        java.lang.String r1;
        java.nio.file.Path r2;
        java.nio.file.FileSystem r3;
        java.nio.file.attribute.UserPrincipalLookupService r4;
        java.lang.Throwable $r6, r7;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r8;
        java.io.IOException $r9;
        null_type varReplacer5420;

        nop;

        r8 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r2 := @parameter0: java.nio.file.Path;

        r0 := @parameter1: java.nio.file.attribute.GroupPrincipal;

        r1 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        r3 = interfaceinvoke r2.<java.nio.file.Path: java.nio.file.FileSystem getFileSystem()>();

        r4 = virtualinvoke r3.<java.nio.file.FileSystem: java.nio.file.attribute.UserPrincipalLookupService getUserPrincipalLookupService()>();

     label1:
        $r5 = virtualinvoke r4.<java.nio.file.attribute.UserPrincipalLookupService: java.nio.file.attribute.GroupPrincipal lookupPrincipalByGroupName(java.lang.String)>(r1);

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        r7 = $r6;

        $r9 = (java.io.IOException) r7;

        virtualinvoke r8.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void handleUserPrincipalLookupServiceException(java.lang.Class,java.lang.String,java.io.IOException)>(class "Ljava/nio/file/attribute/GroupPrincipal;", r1, $r9);

        varReplacer5420 = null;

        return varReplacer5420;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private java.nio.file.attribute.UserPrincipal toUser(java.nio.file.Path, java.nio.file.attribute.UserPrincipal) throws java.io.IOException
    {
        java.nio.file.attribute.UserPrincipal r0, $r5;
        java.lang.String r1;
        java.nio.file.Path r2;
        java.nio.file.FileSystem r3;
        java.nio.file.attribute.UserPrincipalLookupService r4;
        java.lang.Throwable $r6, r7;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r8;
        java.io.IOException $r9;
        null_type varReplacer5421;

        nop;

        r8 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r2 := @parameter0: java.nio.file.Path;

        r0 := @parameter1: java.nio.file.attribute.UserPrincipal;

        r1 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        r3 = interfaceinvoke r2.<java.nio.file.Path: java.nio.file.FileSystem getFileSystem()>();

        r4 = virtualinvoke r3.<java.nio.file.FileSystem: java.nio.file.attribute.UserPrincipalLookupService getUserPrincipalLookupService()>();

     label1:
        $r5 = virtualinvoke r4.<java.nio.file.attribute.UserPrincipalLookupService: java.nio.file.attribute.UserPrincipal lookupPrincipalByName(java.lang.String)>(r1);

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        r7 = $r6;

        $r9 = (java.io.IOException) r7;

        virtualinvoke r8.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void handleUserPrincipalLookupServiceException(java.lang.Class,java.lang.String,java.io.IOException)>(class "Ljava/nio/file/attribute/UserPrincipal;", r1, $r9);

        varReplacer5421 = null;

        return varReplacer5421;

        catch java.io.IOException from label1 to label2 with label3;
    }

    protected void handleUserPrincipalLookupServiceException(java.lang.Class, java.lang.String, java.io.IOException) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        org.apache.sshd.server.subsystem.sftp.UnsupportedAttributePolicy $r1, $r29;
        int[] $r2;
        int $i0, $i1;
        java.lang.StringBuilder $r3, $r5, $r8, $r9, $r11, $r12, $r16, $r17, $r19, $r21, $r23, $r25, $r26, $r27, $r28, $r30;
        org.slf4j.Logger $r4, $r22;
        java.lang.Class r6, $r14;
        java.lang.String $r7, r10, $r15, $r18, $r20, $r24, $r31, varReplacer5422, varReplacer5423, varReplacer5424, varReplacer5425, varReplacer5426, varReplacer5427, varReplacer5428;
        java.io.IOException r13;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r6 := @parameter0: java.lang.Class;

        r10 := @parameter1: java.lang.String;

        r13 := @parameter2: java.io.IOException;

        $r2 = <org.apache.sshd.server.subsystem.sftp.SftpSubsystem$3: int[] $SwitchMap$org$apache$sshd$server$subsystem$sftp$UnsupportedAttributePolicy>;

        $r1 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.subsystem.sftp.UnsupportedAttributePolicy unsupportedAttributePolicy>;

        $i0 = virtualinvoke $r1.<org.apache.sshd.server.subsystem.sftp.UnsupportedAttributePolicy: int ordinal()>();

        $i1 = $r2[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label3;
            case 3: goto label2;
            default: goto label4;
        };

     label1:
        goto label5;

     label2:
        $r4 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        varReplacer5422 = "handleUserPrincipalLookupServiceException(";

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5422);

        $r7 = virtualinvoke r6.<java.lang.Class: java.lang.String getSimpleName()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        varReplacer5425 = "[";

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5425);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        varReplacer5426 = "]) failed (";

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5426);

        $r14 = virtualinvoke r13.<java.lang.Object: java.lang.Class getClass()>();

        $r15 = virtualinvoke $r14.<java.lang.Class: java.lang.String getSimpleName()>();

        $r16 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        varReplacer5423 = "): ";

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5423);

        $r18 = virtualinvoke r13.<java.io.IOException: java.lang.String getMessage()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<org.slf4j.Logger: void warn(java.lang.String)>($r20);

        goto label5;

     label3:
        throw r13;

     label4:
        $r22 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        varReplacer5424 = "Unknown policy for principal=";

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5424);

        $r24 = virtualinvoke r6.<java.lang.Class: java.lang.String getSimpleName()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        varReplacer5427 = "[";

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5427);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        varReplacer5428 = "]: ";

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5428);

        $r29 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.subsystem.sftp.UnsupportedAttributePolicy unsupportedAttributePolicy>;

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r22.<org.slf4j.Logger: void warn(java.lang.String)>($r31);

     label5:
        return;
    }

    protected java.util.Map readAttrs(org.apache.sshd.common.util.buffer.Buffer) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        org.apache.sshd.common.util.buffer.Buffer r1;
        int $i0;
        java.util.Map $r2;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r1 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        $i0 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int version>;

        $r2 = staticinvoke <org.apache.sshd.server.subsystem.sftp.SftpHelper: java.util.Map readAttrs(int,org.apache.sshd.common.util.buffer.Buffer)>($i0, r1);

        return $r2;
    }

    protected org.apache.sshd.server.subsystem.sftp.Handle validateHandle(java.lang.String, org.apache.sshd.server.subsystem.sftp.Handle, java.lang.Class) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.Handle r0, $r4;
        java.lang.Class r1, r2;
        boolean $z0;
        java.lang.Object $r3;
        org.apache.sshd.server.subsystem.sftp.InvalidHandleException $r5;
        java.lang.String r6, $r11, varReplacer5429;
        java.io.FileNotFoundException $r7;
        java.lang.StringBuilder $r8, $r9, $r10;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r12;

        nop;

        r12 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r6 := @parameter0: java.lang.String;

        r0 := @parameter1: org.apache.sshd.server.subsystem.sftp.Handle;

        r2 := @parameter2: java.lang.Class;

        if r0 != null goto label1;

        $r7 = new java.io.FileNotFoundException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        varReplacer5429 = "No such current handle: ";

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5429);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r11);

        throw $r7;

     label1:
        r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke r2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r1);

        if $z0 != 0 goto label2;

        $r5 = new org.apache.sshd.server.subsystem.sftp.InvalidHandleException;

        specialinvoke $r5.<org.apache.sshd.server.subsystem.sftp.InvalidHandleException: void <init>(java.lang.String,org.apache.sshd.server.subsystem.sftp.Handle,java.lang.Class)>(r6, r0, r2);

        throw $r5;

     label2:
        $r3 = virtualinvoke r2.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(r0);

        $r4 = (org.apache.sshd.server.subsystem.sftp.Handle) $r3;

        return $r4;
    }

    protected void sendStatus(org.apache.sshd.common.util.buffer.Buffer, int, java.lang.Exception) throws java.io.IOException
    {
        java.lang.Exception r0;
        int i0, i1;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r1;
        org.apache.sshd.common.util.buffer.Buffer r2;
        java.lang.String $r3;

        nop;

        r1 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r2 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i1 := @parameter1: int;

        r0 := @parameter2: java.lang.Exception;

        i0 = staticinvoke <org.apache.sshd.server.subsystem.sftp.SftpHelper: int resolveSubstatus(java.lang.Exception)>(r0);

        $r3 = virtualinvoke r0.<java.lang.Exception: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,int,java.lang.String)>(r2, i1, i0, $r3);

        return;
    }

    protected void sendStatus(org.apache.sshd.common.util.buffer.Buffer, int, int, java.lang.String) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        org.apache.sshd.common.util.buffer.Buffer r1;
        int i0, i1;
        java.lang.String r2, $r5, varReplacer5430;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r1 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        if r2 == null goto label1;

        $r5 = r2;

        goto label2;

     label1:
        $r5 = "";

     label2:
        varReplacer5430 = "";

        virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,int,java.lang.String,java.lang.String)>(r1, i0, i1, $r5, varReplacer5430);

        return;
    }

    protected void sendStatus(org.apache.sshd.common.util.buffer.Buffer, int, int, java.lang.String, java.lang.String) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        org.slf4j.Logger $r1, $r6;
        boolean $z0;
        org.apache.sshd.common.util.buffer.Buffer r2;
        int i0, i2, varReplacer5432;
        long $l1, $l3;
        java.lang.String r3, r4, varReplacer5431;
        java.lang.Object[] $r5;
        java.lang.Integer $r7;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r2 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i0 := @parameter1: int;

        i2 := @parameter2: int;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String;

        $r1 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r1.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r6 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r5 = newarray (java.lang.Object)[3];

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r5[0] = $r7;

        $r5[1] = r4;

        $r5[2] = r3;

        varReplacer5431 = "Send SSH_FXP_STATUS (substatus={}, lang={}, msg={})";

        interfaceinvoke $r6.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(varReplacer5431, $r5);

     label1:
        varReplacer5432 = 101;

        virtualinvoke r2.<org.apache.sshd.common.util.buffer.Buffer: void putByte(byte)>(varReplacer5432);

        $l1 = (long) i0;

        virtualinvoke r2.<org.apache.sshd.common.util.buffer.Buffer: void putInt(long)>($l1);

        $l3 = (long) i2;

        virtualinvoke r2.<org.apache.sshd.common.util.buffer.Buffer: void putInt(long)>($l3);

        virtualinvoke r2.<org.apache.sshd.common.util.buffer.Buffer: void putString(java.lang.String)>(r3);

        virtualinvoke r2.<org.apache.sshd.common.util.buffer.Buffer: void putString(java.lang.String)>(r4);

        virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void send(org.apache.sshd.common.util.buffer.Buffer)>(r2);

        return;
    }

    protected void send(org.apache.sshd.common.util.buffer.Buffer) throws java.io.IOException
    {
        org.apache.sshd.common.util.buffer.Buffer r0;
        int i0, $i1, $i2, varReplacer5433;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r1;
        byte[] $r2, $r3, $r6;
        java.io.OutputStream $r4, $r5, $r7;

        nop;

        r1 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i0 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: int available()>();

        $r4 = r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.io.OutputStream out>;

        $r3 = r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: byte[] workBuf>;

        $r2 = r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: byte[] workBuf>;

        $i1 = lengthof $r2;

        varReplacer5433 = 0;

        staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: void writeInt(java.io.OutputStream,int,byte[],int,int)>($r4, i0, $r3, varReplacer5433, $i1);

        $r5 = r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.io.OutputStream out>;

        $r6 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: byte[] array()>();

        $i2 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: int rpos()>();

        virtualinvoke $r5.<java.io.OutputStream: void write(byte[],int,int)>($r6, $i2, i0);

        $r7 = r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.io.OutputStream out>;

        virtualinvoke $r7.<java.io.OutputStream: void flush()>();

        return;
    }

    public void destroy()
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, z8;
        org.slf4j.Logger $r1, $r5, $r7, $r13, $r15, $r19, $r21, $r23, $r24;
        java.util.concurrent.Future $r2, $r11, $r12;
        java.util.concurrent.ExecutorService $r3, $r4, $r25;
        java.lang.StringBuilder $r6, $r8, $r9, $r14, $r16, $r17;
        int $i0, varReplacer5434, varReplacer5439;
        java.lang.String $r10, $r18, varReplacer5436, varReplacer5437, varReplacer5438, varReplacer5441, varReplacer5442;
        java.lang.Throwable $r20, $r22, r28, r29;
        java.util.List r26;
        java.nio.file.FileSystem $r27;
        null_type varReplacer5435, varReplacer5440;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        $z0 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: boolean closed>;

        if $z0 != 0 goto label9;

        $r1 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z1 = interfaceinvoke $r1.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z1 == 0 goto label1;

        $r19 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        varReplacer5441 = "destroy() - mark as closed";

        interfaceinvoke $r19.<org.slf4j.Logger: void debug(java.lang.String)>(varReplacer5441);

     label1:
        varReplacer5434 = 1;

        r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: boolean closed> = varReplacer5434;

        $r2 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.concurrent.Future pendingFuture>;

        if $r2 == null goto label2;

        $r11 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.concurrent.Future pendingFuture>;

        $z5 = interfaceinvoke $r11.<java.util.concurrent.Future: boolean isDone()>();

        if $z5 != 0 goto label2;

        $r12 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.concurrent.Future pendingFuture>;

        varReplacer5439 = 1;

        z8 = interfaceinvoke $r12.<java.util.concurrent.Future: boolean cancel(boolean)>(varReplacer5439);

        $r13 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z6 = interfaceinvoke $r13.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z6 == 0 goto label2;

        $r15 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        varReplacer5442 = "destroy() - cancel pending future=";

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5442);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z8);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r15.<org.slf4j.Logger: void debug(java.lang.String)>($r18);

     label2:
        varReplacer5435 = null;

        r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.concurrent.Future pendingFuture> = varReplacer5435;

        $r25 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.concurrent.ExecutorService executors>;

        if $r25 == null goto label3;

        $r3 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.concurrent.ExecutorService executors>;

        $z2 = interfaceinvoke $r3.<java.util.concurrent.ExecutorService: boolean isShutdown()>();

        if $z2 != 0 goto label3;

        $z3 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: boolean shutdownExecutor>;

        if $z3 == 0 goto label3;

        $r4 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.concurrent.ExecutorService executors>;

        r26 = interfaceinvoke $r4.<java.util.concurrent.ExecutorService: java.util.List shutdownNow()>();

        $r5 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z4 = interfaceinvoke $r5.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z4 == 0 goto label3;

        $r7 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        varReplacer5438 = "destroy() - shutdown executor service - runners count=";

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5438);

        $i0 = interfaceinvoke r26.<java.util.Collection: int size()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r7.<org.slf4j.Logger: void debug(java.lang.String)>($r10);

     label3:
        varReplacer5440 = null;

        r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.concurrent.ExecutorService executors> = varReplacer5440;

     label4:
        $r27 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.nio.file.FileSystem fileSystem>;

        virtualinvoke $r27.<java.nio.file.FileSystem: void close()>();

     label5:
        goto label9;

     label6:
        $r22 := @caughtexception;

        r28 = $r22;

        $r23 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z7 = interfaceinvoke $r23.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z7 == 0 goto label7;

        $r24 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        varReplacer5436 = "Closing the file system is not supported";

        interfaceinvoke $r24.<org.slf4j.Logger: void debug(java.lang.String)>(varReplacer5436);

     label7:
        goto label9;

     label8:
        $r20 := @caughtexception;

        r29 = $r20;

        $r21 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        varReplacer5437 = "Error closing FileSystem";

        interfaceinvoke $r21.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Throwable)>(varReplacer5437, r29);

     label9:
        return;

        catch java.lang.UnsupportedOperationException from label4 to label5 with label6;
        catch java.io.IOException from label4 to label5 with label8;
    }

    protected java.nio.file.Path resolveNormalizedLocation(java.lang.String) throws java.io.IOException, java.nio.file.InvalidPathException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        java.lang.String r1;
        java.nio.file.Path $r2, $r3;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.nio.file.Path resolveFile(java.lang.String)>(r1);

        $r3 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.nio.file.Path normalize(java.nio.file.Path)>($r2);

        return $r3;
    }

    protected java.nio.file.Path normalize(java.nio.file.Path)
    {
        java.nio.file.Path r0, r1, $r2, $r4;
        boolean $z0;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r3;
        null_type varReplacer5443;

        nop;

        r3 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: java.nio.file.Path;

        if r0 != null goto label1;

        varReplacer5443 = null;

        return varReplacer5443;

     label1:
        $z0 = interfaceinvoke r0.<java.nio.file.Path: boolean isAbsolute()>();

        if $z0 == 0 goto label2;

        $r4 = r0;

        goto label3;

     label2:
        $r4 = interfaceinvoke r0.<java.nio.file.Path: java.nio.file.Path toAbsolutePath()>();

     label3:
        r1 = $r4;

        $r2 = interfaceinvoke r1.<java.nio.file.Path: java.nio.file.Path normalize()>();

        return $r2;
    }

    protected java.nio.file.Path resolveFile(java.lang.String) throws java.io.IOException, java.nio.file.InvalidPathException
    {
        java.lang.String r0, r4, varReplacer5444;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r1;
        java.nio.file.Path $r2, $r5, r6;
        java.nio.file.FileSystem $r3;
        org.slf4j.Logger $r7, $r8;
        boolean $z0;
        int varReplacer5445;

        nop;

        r1 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: java.lang.String;

        $r2 = r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.nio.file.Path defaultDir>;

        $r3 = interfaceinvoke $r2.<java.nio.file.Path: java.nio.file.FileSystem getFileSystem()>();

        varReplacer5445 = 47;

        r4 = staticinvoke <org.apache.sshd.common.util.SelectorUtils: java.lang.String translateToLocalFileSystemPath(java.lang.String,char,java.nio.file.FileSystem)>(r0, varReplacer5445, $r3);

        $r5 = r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.nio.file.Path defaultDir>;

        r6 = interfaceinvoke $r5.<java.nio.file.Path: java.nio.file.Path resolve(java.lang.String)>(r4);

        $r7 = r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r7.<org.slf4j.Logger: boolean isTraceEnabled()>();

        if $z0 == 0 goto label1;

        $r8 = r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        varReplacer5444 = "resolveFile({}) {}";

        interfaceinvoke $r8.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>(varReplacer5444, r0, r6);

     label1:
        return r6;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0;
        java.util.Comparator $r1, $r14;
        java.util.List $r2, $r7, $r8, $r10, $r11, $r12;
        java.util.SortedSet $r3;
        java.util.Set $r4;
        org.apache.sshd.common.subsystem.sftp.extensions.openssh.AbstractOpenSSHExtensionParser$OpenSSHExtension[] $r5;
        org.apache.sshd.common.subsystem.sftp.extensions.openssh.AbstractOpenSSHExtensionParser$OpenSSHExtension $r6;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem$1 $r9;
        int $i0, $i1, i2, varReplacer5446, varReplacer5450;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem$2 $r13;
        java.util.Map $r15;
        java.lang.StringBuilder $r16, r17;
        java.lang.String $r18, varReplacer5447, varReplacer5448, varReplacer5449;

        nop;

        $r1 = <java.lang.String: java.util.Comparator CASE_INSENSITIVE_ORDER>;

        $r0 = newarray (java.lang.String)[8];

        $r0[0] = "version-select";

        $r0[1] = "copy-file";

        $r0[2] = "md5-hash";

        $r0[3] = "md5-hash-handle";

        $r0[4] = "check-file-handle";

        $r0[5] = "check-file-name";

        $r0[6] = "copy-data";

        $r0[7] = "space-available";

        $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r0);

        $r3 = staticinvoke <org.apache.sshd.common.util.GenericUtils: java.util.SortedSet asSortedSet(java.util.Comparator,java.util.Collection)>($r1, $r2);

        $r4 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r3);

        <org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Set DEFAULT_SUPPORTED_CLIENT_EXTENSIONS> = $r4;

        $r5 = newarray (org.apache.sshd.common.subsystem.sftp.extensions.openssh.AbstractOpenSSHExtensionParser$OpenSSHExtension)[1];

        $r6 = new org.apache.sshd.common.subsystem.sftp.extensions.openssh.AbstractOpenSSHExtensionParser$OpenSSHExtension;

        varReplacer5447 = "fsync@openssh.com";

        varReplacer5448 = "1";

        specialinvoke $r6.<org.apache.sshd.common.subsystem.sftp.extensions.openssh.AbstractOpenSSHExtensionParser$OpenSSHExtension: void <init>(java.lang.String,java.lang.String)>(varReplacer5447, varReplacer5448);

        $r5[0] = $r6;

        $r7 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r5);

        $r8 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r7);

        <org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.List DEFAULT_OPEN_SSH_EXTENSIONS> = $r8;

        $r9 = new org.apache.sshd.server.subsystem.sftp.SftpSubsystem$1;

        $r10 = <org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.List DEFAULT_OPEN_SSH_EXTENSIONS>;

        $i0 = interfaceinvoke $r10.<java.util.List: int size()>();

        specialinvoke $r9.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem$1: void <init>(int)>($i0);

        $r11 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r9);

        <org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.List DEFAULT_OPEN_SSH_EXTENSIONS_NAMES> = $r11;

        varReplacer5449 = "unix:*";

        $r12 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(varReplacer5449);

        <org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.List DEFAULT_UNIX_VIEW> = $r12;

        $r13 = new org.apache.sshd.server.subsystem.sftp.SftpSubsystem$2;

        $r14 = <java.lang.String: java.util.Comparator CASE_INSENSITIVE_ORDER>;

        specialinvoke $r13.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem$2: void <init>(java.util.Comparator)>($r14);

        $r15 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r13);

        <org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map FILEATTRS_RESOLVERS> = $r15;

        $r16 = new java.lang.StringBuilder;

        varReplacer5446 = 8;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>(int)>(varReplacer5446);

        r17 = $r16;

        i2 = 3;

     label1:
        if i2 > 6 goto label3;

        $i1 = virtualinvoke r17.<java.lang.StringBuilder: int length()>();

        if $i1 <= 0 goto label2;

        varReplacer5450 = 44;

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(varReplacer5450);

     label2:
        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        i2 = i2 + 1;

        goto label1;

     label3:
        $r18 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.String toString()>();

        <org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.lang.String ALL_SFTP_IMPL> = $r18;

        return;
    }
}
