public abstract class org.apache.sshd.client.kex.AbstractDHGClient extends java.lang.Object implements org.apache.sshd.common.KeyExchange
{
    private final org.slf4j.Logger log;
    private org.apache.sshd.client.session.ClientSessionImpl session;
    private byte[] V_S;
    private byte[] V_C;
    private byte[] I_S;
    private byte[] I_C;
    private org.apache.sshd.common.Digest hash;
    private org.apache.sshd.common.kex.AbstractDH dh;
    private byte[] e;
    private byte[] f;
    private byte[] K;
    private byte[] H;
    private java.security.PublicKey serverKey;

    public void <init>()
    {
        org.apache.sshd.client.kex.AbstractDHGClient r0;
        java.lang.Class $r1;
        org.slf4j.Logger $r2;

        nop;

        r0 := @this: org.apache.sshd.client.kex.AbstractDHGClient;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>($r1);

        r0.<org.apache.sshd.client.kex.AbstractDHGClient: org.slf4j.Logger log> = $r2;

        return;
    }

    public void init(org.apache.sshd.common.session.AbstractSession, byte[], byte[], byte[], byte[]) throws java.lang.Exception
    {
        org.apache.sshd.common.session.AbstractSession r0;
        boolean $z0;
        org.apache.sshd.client.kex.AbstractDHGClient r1;
        org.apache.sshd.client.session.ClientSessionImpl $r2, $r16;
        byte[] r3, r4, r5, r6, $r12, $r15;
        org.apache.sshd.common.kex.AbstractDH $r7, $r8, $r11;
        org.apache.sshd.common.Digest $r9, $r10;
        org.slf4j.Logger $r13;
        org.apache.sshd.common.util.Buffer r14;
        java.lang.IllegalStateException $r18;
        int varReplacer108;
        java.lang.String varReplacer109, varReplacer110;

        nop;

        r1 := @this: org.apache.sshd.client.kex.AbstractDHGClient;

        r0 := @parameter0: org.apache.sshd.common.session.AbstractSession;

        r3 := @parameter1: byte[];

        r4 := @parameter2: byte[];

        r5 := @parameter3: byte[];

        r6 := @parameter4: byte[];

        $z0 = r0 instanceof org.apache.sshd.client.session.ClientSessionImpl;

        if $z0 != 0 goto label1;

        $r18 = new java.lang.IllegalStateException;

        varReplacer110 = "Using a client side KeyExchange on a server";

        specialinvoke $r18.<java.lang.IllegalStateException: void <init>(java.lang.String)>(varReplacer110);

        throw $r18;

     label1:
        $r2 = (org.apache.sshd.client.session.ClientSessionImpl) r0;

        r1.<org.apache.sshd.client.kex.AbstractDHGClient: org.apache.sshd.client.session.ClientSessionImpl session> = $r2;

        r1.<org.apache.sshd.client.kex.AbstractDHGClient: byte[] V_S> = r3;

        r1.<org.apache.sshd.client.kex.AbstractDHGClient: byte[] V_C> = r4;

        r1.<org.apache.sshd.client.kex.AbstractDHGClient: byte[] I_S> = r5;

        r1.<org.apache.sshd.client.kex.AbstractDHGClient: byte[] I_C> = r6;

        $r7 = virtualinvoke r1.<org.apache.sshd.client.kex.AbstractDHGClient: org.apache.sshd.common.kex.AbstractDH getDH()>();

        r1.<org.apache.sshd.client.kex.AbstractDHGClient: org.apache.sshd.common.kex.AbstractDH dh> = $r7;

        $r8 = r1.<org.apache.sshd.client.kex.AbstractDHGClient: org.apache.sshd.common.kex.AbstractDH dh>;

        $r9 = virtualinvoke $r8.<org.apache.sshd.common.kex.AbstractDH: org.apache.sshd.common.Digest getHash()>();

        r1.<org.apache.sshd.client.kex.AbstractDHGClient: org.apache.sshd.common.Digest hash> = $r9;

        $r10 = r1.<org.apache.sshd.client.kex.AbstractDHGClient: org.apache.sshd.common.Digest hash>;

        interfaceinvoke $r10.<org.apache.sshd.common.Digest: void init()>();

        $r11 = r1.<org.apache.sshd.client.kex.AbstractDHGClient: org.apache.sshd.common.kex.AbstractDH dh>;

        $r12 = virtualinvoke $r11.<org.apache.sshd.common.kex.AbstractDH: byte[] getE()>();

        r1.<org.apache.sshd.client.kex.AbstractDHGClient: byte[] e> = $r12;

        $r13 = r1.<org.apache.sshd.client.kex.AbstractDHGClient: org.slf4j.Logger log>;

        varReplacer109 = "Send SSH_MSG_KEXDH_INIT";

        interfaceinvoke $r13.<org.slf4j.Logger: void debug(java.lang.String)>(varReplacer109);

        varReplacer108 = 30;

        r14 = virtualinvoke r0.<org.apache.sshd.common.session.AbstractSession: org.apache.sshd.common.util.Buffer createBuffer(byte)>(varReplacer108);

        $r15 = r1.<org.apache.sshd.client.kex.AbstractDHGClient: byte[] e>;

        virtualinvoke r14.<org.apache.sshd.common.util.Buffer: void putMPInt(byte[])>($r15);

        $r16 = r1.<org.apache.sshd.client.kex.AbstractDHGClient: org.apache.sshd.client.session.ClientSessionImpl session>;

        virtualinvoke $r16.<org.apache.sshd.client.session.ClientSessionImpl: org.apache.sshd.common.io.IoWriteFuture writePacket(org.apache.sshd.common.util.Buffer)>(r14);

        return;
    }

    protected abstract org.apache.sshd.common.kex.AbstractDH getDH() throws java.lang.Exception;

    public boolean next(org.apache.sshd.common.util.Buffer) throws java.lang.Exception
    {
        byte b0;
        org.apache.sshd.client.kex.AbstractDHGClient r0;
        org.slf4j.Logger $r1;
        byte[] r2, $r3, r4, $r5, $r8, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r22, $r24, $r31, $r32;
        org.apache.sshd.common.kex.AbstractDH $r6, $r7;
        org.apache.sshd.common.util.Buffer $r9, $r13, r40, r41, r42;
        java.security.PublicKey $r10, $r11, $r30;
        java.lang.String r12, $r39, varReplacer111, varReplacer115, varReplacer116, varReplacer120;
        org.apache.sshd.common.Digest $r21, $r23;
        int $i1, $i2, varReplacer112, varReplacer113, varReplacer117, varReplacer118, varReplacer119;
        org.apache.sshd.client.session.ClientSessionImpl $r25;
        org.apache.sshd.client.ClientFactoryManager $r26;
        java.util.List $r27;
        java.lang.Object $r28;
        org.apache.sshd.common.Signature r29;
        boolean $z0;
        org.apache.sshd.common.SshException $r33, $r34, $r35;
        java.lang.StringBuilder $r36, $r37, $r38;
        null_type varReplacer114;

        nop;

        r0 := @this: org.apache.sshd.client.kex.AbstractDHGClient;

        r40 := @parameter0: org.apache.sshd.common.util.Buffer;

        b0 = virtualinvoke r40.<org.apache.sshd.common.util.Buffer: byte getByte()>();

        if b0 == 31 goto label1;

        $r35 = new org.apache.sshd.common.SshException;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        varReplacer116 = "Protocol error: expected packet SSH_MSG_KEXDH_REPLY, got ";

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer116);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer117 = 3;

        specialinvoke $r35.<org.apache.sshd.common.SshException: void <init>(int,java.lang.String)>(varReplacer117, $r39);

        throw $r35;

     label1:
        $r1 = r0.<org.apache.sshd.client.kex.AbstractDHGClient: org.slf4j.Logger log>;

        varReplacer115 = "Received SSH_MSG_KEXDH_REPLY";

        interfaceinvoke $r1.<org.slf4j.Logger: void debug(java.lang.String)>(varReplacer115);

        r2 = virtualinvoke r40.<org.apache.sshd.common.util.Buffer: byte[] getBytes()>();

        $r3 = virtualinvoke r40.<org.apache.sshd.common.util.Buffer: byte[] getMPIntAsBytes()>();

        r0.<org.apache.sshd.client.kex.AbstractDHGClient: byte[] f> = $r3;

        r4 = virtualinvoke r40.<org.apache.sshd.common.util.Buffer: byte[] getBytes()>();

        $r6 = r0.<org.apache.sshd.client.kex.AbstractDHGClient: org.apache.sshd.common.kex.AbstractDH dh>;

        $r5 = r0.<org.apache.sshd.client.kex.AbstractDHGClient: byte[] f>;

        virtualinvoke $r6.<org.apache.sshd.common.kex.AbstractDH: void setF(byte[])>($r5);

        $r7 = r0.<org.apache.sshd.client.kex.AbstractDHGClient: org.apache.sshd.common.kex.AbstractDH dh>;

        $r8 = virtualinvoke $r7.<org.apache.sshd.common.kex.AbstractDH: byte[] getK()>();

        r0.<org.apache.sshd.client.kex.AbstractDHGClient: byte[] K> = $r8;

        $r9 = new org.apache.sshd.common.util.Buffer;

        specialinvoke $r9.<org.apache.sshd.common.util.Buffer: void <init>(byte[])>(r2);

        r41 = $r9;

        $r10 = virtualinvoke r41.<org.apache.sshd.common.util.Buffer: java.security.PublicKey getRawPublicKey()>();

        r0.<org.apache.sshd.client.kex.AbstractDHGClient: java.security.PublicKey serverKey> = $r10;

        $r11 = r0.<org.apache.sshd.client.kex.AbstractDHGClient: java.security.PublicKey serverKey>;

        r12 = staticinvoke <org.apache.sshd.common.util.KeyUtils: java.lang.String getKeyType(java.security.Key)>($r11);

        if r12 != null goto label2;

        $r34 = new org.apache.sshd.common.SshException;

        varReplacer111 = "Unsupported server key type";

        specialinvoke $r34.<org.apache.sshd.common.SshException: void <init>(java.lang.String)>(varReplacer111);

        throw $r34;

     label2:
        $r13 = new org.apache.sshd.common.util.Buffer;

        specialinvoke $r13.<org.apache.sshd.common.util.Buffer: void <init>()>();

        r42 = $r13;

        $r14 = r0.<org.apache.sshd.client.kex.AbstractDHGClient: byte[] V_C>;

        virtualinvoke r42.<org.apache.sshd.common.util.Buffer: void putString(byte[])>($r14);

        $r15 = r0.<org.apache.sshd.client.kex.AbstractDHGClient: byte[] V_S>;

        virtualinvoke r42.<org.apache.sshd.common.util.Buffer: void putString(byte[])>($r15);

        $r16 = r0.<org.apache.sshd.client.kex.AbstractDHGClient: byte[] I_C>;

        virtualinvoke r42.<org.apache.sshd.common.util.Buffer: void putString(byte[])>($r16);

        $r17 = r0.<org.apache.sshd.client.kex.AbstractDHGClient: byte[] I_S>;

        virtualinvoke r42.<org.apache.sshd.common.util.Buffer: void putString(byte[])>($r17);

        virtualinvoke r42.<org.apache.sshd.common.util.Buffer: void putString(byte[])>(r2);

        $r18 = r0.<org.apache.sshd.client.kex.AbstractDHGClient: byte[] e>;

        virtualinvoke r42.<org.apache.sshd.common.util.Buffer: void putMPInt(byte[])>($r18);

        $r19 = r0.<org.apache.sshd.client.kex.AbstractDHGClient: byte[] f>;

        virtualinvoke r42.<org.apache.sshd.common.util.Buffer: void putMPInt(byte[])>($r19);

        $r20 = r0.<org.apache.sshd.client.kex.AbstractDHGClient: byte[] K>;

        virtualinvoke r42.<org.apache.sshd.common.util.Buffer: void putMPInt(byte[])>($r20);

        $r21 = r0.<org.apache.sshd.client.kex.AbstractDHGClient: org.apache.sshd.common.Digest hash>;

        $r22 = virtualinvoke r42.<org.apache.sshd.common.util.Buffer: byte[] array()>();

        $i1 = virtualinvoke r42.<org.apache.sshd.common.util.Buffer: int available()>();

        varReplacer112 = 0;

        interfaceinvoke $r21.<org.apache.sshd.common.Digest: void update(byte[],int,int)>($r22, varReplacer112, $i1);

        $r23 = r0.<org.apache.sshd.client.kex.AbstractDHGClient: org.apache.sshd.common.Digest hash>;

        $r24 = interfaceinvoke $r23.<org.apache.sshd.common.Digest: byte[] digest()>();

        r0.<org.apache.sshd.client.kex.AbstractDHGClient: byte[] H> = $r24;

        $r25 = r0.<org.apache.sshd.client.kex.AbstractDHGClient: org.apache.sshd.client.session.ClientSessionImpl session>;

        $r26 = virtualinvoke $r25.<org.apache.sshd.client.session.ClientSessionImpl: org.apache.sshd.client.ClientFactoryManager getFactoryManager()>();

        $r27 = interfaceinvoke $r26.<org.apache.sshd.client.ClientFactoryManager: java.util.List getSignatureFactories()>();

        $r28 = staticinvoke <org.apache.sshd.common.NamedFactory$Utils: java.lang.Object create(java.util.List,java.lang.String)>($r27, r12);

        r29 = (org.apache.sshd.common.Signature) $r28;

        $r30 = r0.<org.apache.sshd.client.kex.AbstractDHGClient: java.security.PublicKey serverKey>;

        varReplacer114 = null;

        interfaceinvoke r29.<org.apache.sshd.common.Signature: void init(java.security.PublicKey,java.security.PrivateKey)>($r30, varReplacer114);

        $r32 = r0.<org.apache.sshd.client.kex.AbstractDHGClient: byte[] H>;

        $r31 = r0.<org.apache.sshd.client.kex.AbstractDHGClient: byte[] H>;

        $i2 = lengthof $r31;

        varReplacer118 = 0;

        interfaceinvoke r29.<org.apache.sshd.common.Signature: void update(byte[],int,int)>($r32, varReplacer118, $i2);

        $z0 = interfaceinvoke r29.<org.apache.sshd.common.Signature: boolean verify(byte[])>(r4);

        if $z0 != 0 goto label3;

        $r33 = new org.apache.sshd.common.SshException;

        varReplacer119 = 3;

        varReplacer120 = "KeyExchange signature verification failed";

        specialinvoke $r33.<org.apache.sshd.common.SshException: void <init>(int,java.lang.String)>(varReplacer119, varReplacer120);

        throw $r33;

     label3:
        varReplacer113 = 1;

        return varReplacer113;
    }

    public org.apache.sshd.common.Digest getHash()
    {
        org.apache.sshd.client.kex.AbstractDHGClient r0;
        org.apache.sshd.common.Digest $r1;

        nop;

        r0 := @this: org.apache.sshd.client.kex.AbstractDHGClient;

        $r1 = r0.<org.apache.sshd.client.kex.AbstractDHGClient: org.apache.sshd.common.Digest hash>;

        return $r1;
    }

    public byte[] getH()
    {
        org.apache.sshd.client.kex.AbstractDHGClient r0;
        byte[] $r1;

        nop;

        r0 := @this: org.apache.sshd.client.kex.AbstractDHGClient;

        $r1 = r0.<org.apache.sshd.client.kex.AbstractDHGClient: byte[] H>;

        return $r1;
    }

    public byte[] getK()
    {
        org.apache.sshd.client.kex.AbstractDHGClient r0;
        byte[] $r1;

        nop;

        r0 := @this: org.apache.sshd.client.kex.AbstractDHGClient;

        $r1 = r0.<org.apache.sshd.client.kex.AbstractDHGClient: byte[] K>;

        return $r1;
    }

    public java.security.PublicKey getServerKey()
    {
        org.apache.sshd.client.kex.AbstractDHGClient r0;
        java.security.PublicKey $r1;

        nop;

        r0 := @this: org.apache.sshd.client.kex.AbstractDHGClient;

        $r1 = r0.<org.apache.sshd.client.kex.AbstractDHGClient: java.security.PublicKey serverKey>;

        return $r1;
    }
}
