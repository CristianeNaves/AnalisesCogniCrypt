public class org.apache.sshd.client.kex.DHGEXClient extends org.apache.sshd.client.kex.AbstractDHClientKeyExchange
{
    protected final org.apache.sshd.common.kex.DHFactory factory;
    protected byte expected;
    protected int min;
    protected int prf;
    protected int max;
    protected org.apache.sshd.common.kex.AbstractDH dh;
    protected byte[] p;
    protected byte[] g;

    protected void <init>(org.apache.sshd.common.kex.DHFactory)
    {
        org.apache.sshd.client.kex.DHGEXClient r0;
        org.apache.sshd.common.kex.DHFactory r1, $r3;
        java.lang.Object $r2;
        int $i0, $i1, $i2, varReplacer23, varReplacer24;
        java.lang.String varReplacer25;

        nop;

        r0 := @this: org.apache.sshd.client.kex.DHGEXClient;

        r1 := @parameter0: org.apache.sshd.common.kex.DHFactory;

        specialinvoke r0.<org.apache.sshd.client.kex.AbstractDHClientKeyExchange: void <init>()>();

        varReplacer23 = 1024;

        r0.<org.apache.sshd.client.kex.DHGEXClient: int min> = varReplacer23;

        varReplacer25 = "No factory";

        $r2 = staticinvoke <org.apache.sshd.common.util.ValidateUtils: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(r1, varReplacer25);

        $r3 = (org.apache.sshd.common.kex.DHFactory) $r2;

        r0.<org.apache.sshd.client.kex.DHGEXClient: org.apache.sshd.common.kex.DHFactory factory> = $r3;

        $i0 = staticinvoke <org.apache.sshd.common.util.SecurityUtils: int getMaxDHGroupExchangeKeySize()>();

        r0.<org.apache.sshd.client.kex.DHGEXClient: int max> = $i0;

        $i1 = r0.<org.apache.sshd.client.kex.DHGEXClient: int max>;

        varReplacer24 = 4096;

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>(varReplacer24, $i1);

        r0.<org.apache.sshd.client.kex.DHGEXClient: int prf> = $i2;

        return;
    }

    public final java.lang.String getName()
    {
        org.apache.sshd.client.kex.DHGEXClient r0;
        org.apache.sshd.common.kex.DHFactory $r1;
        java.lang.String $r2;

        nop;

        r0 := @this: org.apache.sshd.client.kex.DHGEXClient;

        $r1 = r0.<org.apache.sshd.client.kex.DHGEXClient: org.apache.sshd.common.kex.DHFactory factory>;

        $r2 = interfaceinvoke $r1.<org.apache.sshd.common.kex.DHFactory: java.lang.String getName()>();

        return $r2;
    }

    public static org.apache.sshd.common.kex.KeyExchangeFactory newFactory(org.apache.sshd.common.kex.DHFactory)
    {
        org.apache.sshd.client.kex.DHGEXClient$1 $r0;
        org.apache.sshd.common.kex.DHFactory r1;

        nop;

        r1 := @parameter0: org.apache.sshd.common.kex.DHFactory;

        $r0 = new org.apache.sshd.client.kex.DHGEXClient$1;

        specialinvoke $r0.<org.apache.sshd.client.kex.DHGEXClient$1: void <init>(org.apache.sshd.common.kex.DHFactory)>(r1);

        return $r0;
    }

    public void init(org.apache.sshd.common.session.Session, byte[], byte[], byte[], byte[]) throws java.lang.Exception
    {
        org.apache.sshd.client.kex.DHGEXClient r0;
        org.apache.sshd.common.session.Session r1;
        byte[] r2, r3, r4, r5;
        org.slf4j.Logger $r6, $r9;
        boolean $z0;
        org.apache.sshd.common.util.buffer.Buffer r7;
        int $i0, $i2, $i4, varReplacer26, varReplacer28, varReplacer29;
        long $l1, $l3, $l5;
        java.lang.String varReplacer27;

        nop;

        r0 := @this: org.apache.sshd.client.kex.DHGEXClient;

        r1 := @parameter0: org.apache.sshd.common.session.Session;

        r2 := @parameter1: byte[];

        r3 := @parameter2: byte[];

        r4 := @parameter3: byte[];

        r5 := @parameter4: byte[];

        specialinvoke r0.<org.apache.sshd.client.kex.AbstractDHClientKeyExchange: void init(org.apache.sshd.common.session.Session,byte[],byte[],byte[],byte[])>(r1, r2, r3, r4, r5);

        $r6 = r0.<org.apache.sshd.client.kex.DHGEXClient: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r6.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r9 = r0.<org.apache.sshd.client.kex.DHGEXClient: org.slf4j.Logger log>;

        varReplacer27 = "init({}) Send SSH_MSG_KEX_DH_GEX_REQUEST";

        interfaceinvoke $r9.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>(varReplacer27, r1);

     label1:
        varReplacer28 = 34;

        varReplacer29 = 32;

        r7 = interfaceinvoke r1.<org.apache.sshd.common.session.Session: org.apache.sshd.common.util.buffer.Buffer createBuffer(byte,int)>(varReplacer28, varReplacer29);

        $i0 = r0.<org.apache.sshd.client.kex.DHGEXClient: int min>;

        $l1 = (long) $i0;

        virtualinvoke r7.<org.apache.sshd.common.util.buffer.Buffer: void putInt(long)>($l1);

        $i2 = r0.<org.apache.sshd.client.kex.DHGEXClient: int prf>;

        $l3 = (long) $i2;

        virtualinvoke r7.<org.apache.sshd.common.util.buffer.Buffer: void putInt(long)>($l3);

        $i4 = r0.<org.apache.sshd.client.kex.DHGEXClient: int max>;

        $l5 = (long) $i4;

        virtualinvoke r7.<org.apache.sshd.common.util.buffer.Buffer: void putInt(long)>($l5);

        interfaceinvoke r1.<org.apache.sshd.common.session.Session: org.apache.sshd.common.io.IoWriteFuture writePacket(org.apache.sshd.common.util.buffer.Buffer)>(r7);

        varReplacer26 = 31;

        r0.<org.apache.sshd.client.kex.DHGEXClient: byte expected> = varReplacer26;

        return;
    }

    public boolean next(int, org.apache.sshd.common.util.buffer.Buffer) throws java.lang.Exception
    {
        org.apache.sshd.client.kex.DHGEXClient r0;
        org.apache.sshd.common.session.AbstractSession r1;
        org.slf4j.Logger $r2, $r58, $r62, $r73;
        boolean $z0, $z1, $z2, $z3;
        int i0, $i2, $i4, $i6, $i8, varReplacer31, varReplacer33, varReplacer37, varReplacer38, varReplacer41, varReplacer43, varReplacer44;
        byte $b1, $b9;
        java.lang.IllegalStateException $r3;
        java.lang.StringBuilder $r4, $r5, $r7, $r41, $r42, $r43, $r64, $r65, $r67, $r68, $r70;
        java.lang.String $r6, $r8, r19, $r44, $r66, $r69, $r71, $r74, varReplacer30, varReplacer32, varReplacer34, varReplacer35, varReplacer36, varReplacer39, varReplacer40, varReplacer42;
        byte[] r9, $r10, r11, $r12, $r15, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r31, $r33, $r39, $r46, $r47, $r49, $r51, $r57, $r60;
        org.apache.sshd.common.kex.AbstractDH $r13, $r14, $r52, $r53, $r56;
        org.apache.sshd.common.util.buffer.ByteArrayBuffer $r16, $r20, r77, r78;
        java.security.PublicKey $r17, $r18, $r38;
        long $l3, $l5, $l7;
        org.apache.sshd.common.digest.Digest $r30, $r32, $r54, $r55;
        java.util.List $r34;
        java.lang.Object $r35, $r36;
        org.apache.sshd.common.signature.Signature r37;
        org.apache.sshd.common.SshException $r40, $r45, $r63;
        java.math.BigInteger $r48, $r50;
        org.apache.sshd.common.util.buffer.Buffer $r59, r75, r76;
        java.lang.Object[] $r72;

        nop;

        r0 := @this: org.apache.sshd.client.kex.DHGEXClient;

        i0 := @parameter0: int;

        r75 := @parameter1: org.apache.sshd.common.util.buffer.Buffer;

        r1 = virtualinvoke r0.<org.apache.sshd.client.kex.DHGEXClient: org.apache.sshd.common.session.AbstractSession getSession()>();

        $r2 = r0.<org.apache.sshd.client.kex.DHGEXClient: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r2.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r73 = r0.<org.apache.sshd.client.kex.DHGEXClient: org.slf4j.Logger log>;

        $r72 = newarray (java.lang.Object)[3];

        $r72[0] = r0;

        $r72[1] = r1;

        $r74 = staticinvoke <org.apache.sshd.common.kex.KeyExchange$Utils: java.lang.String getGroupKexOpcodeName(int)>(i0);

        $r72[2] = $r74;

        varReplacer40 = "next({})[{}] process command={}";

        interfaceinvoke $r73.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(varReplacer40, $r72);

     label1:
        $b1 = r0.<org.apache.sshd.client.kex.DHGEXClient: byte expected>;

        if i0 == $b1 goto label2;

        $r63 = new org.apache.sshd.common.SshException;

        $r64 = new java.lang.StringBuilder;

        specialinvoke $r64.<java.lang.StringBuilder: void <init>()>();

        varReplacer36 = "Protocol error: expected packet ";

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer36);

        $b9 = r0.<org.apache.sshd.client.kex.DHGEXClient: byte expected>;

        $r66 = staticinvoke <org.apache.sshd.common.kex.KeyExchange$Utils: java.lang.String getGroupKexOpcodeName(int)>($b9);

        $r67 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r66);

        varReplacer42 = ", got ";

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer42);

        $r69 = staticinvoke <org.apache.sshd.common.kex.KeyExchange$Utils: java.lang.String getGroupKexOpcodeName(int)>(i0);

        $r70 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r69);

        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer43 = 3;

        specialinvoke $r63.<org.apache.sshd.common.SshException: void <init>(int,java.lang.String)>(varReplacer43, $r71);

        throw $r63;

     label2:
        if i0 != 31 goto label4;

        $r46 = virtualinvoke r75.<org.apache.sshd.common.util.buffer.Buffer: byte[] getMPIntAsBytes()>();

        r0.<org.apache.sshd.client.kex.DHGEXClient: byte[] p> = $r46;

        $r47 = virtualinvoke r75.<org.apache.sshd.common.util.buffer.Buffer: byte[] getMPIntAsBytes()>();

        r0.<org.apache.sshd.client.kex.DHGEXClient: byte[] g> = $r47;

        $r48 = new java.math.BigInteger;

        $r49 = r0.<org.apache.sshd.client.kex.DHGEXClient: byte[] p>;

        specialinvoke $r48.<java.math.BigInteger: void <init>(byte[])>($r49);

        $r50 = new java.math.BigInteger;

        $r51 = r0.<org.apache.sshd.client.kex.DHGEXClient: byte[] g>;

        specialinvoke $r50.<java.math.BigInteger: void <init>(byte[])>($r51);

        $r52 = virtualinvoke r0.<org.apache.sshd.client.kex.DHGEXClient: org.apache.sshd.common.kex.AbstractDH getDH(java.math.BigInteger,java.math.BigInteger)>($r48, $r50);

        r0.<org.apache.sshd.client.kex.DHGEXClient: org.apache.sshd.common.kex.AbstractDH dh> = $r52;

        $r53 = r0.<org.apache.sshd.client.kex.DHGEXClient: org.apache.sshd.common.kex.AbstractDH dh>;

        $r54 = virtualinvoke $r53.<org.apache.sshd.common.kex.AbstractDH: org.apache.sshd.common.digest.Digest getHash()>();

        r0.<org.apache.sshd.client.kex.DHGEXClient: org.apache.sshd.common.digest.Digest hash> = $r54;

        $r55 = r0.<org.apache.sshd.client.kex.DHGEXClient: org.apache.sshd.common.digest.Digest hash>;

        interfaceinvoke $r55.<org.apache.sshd.common.digest.Digest: void init()>();

        $r56 = r0.<org.apache.sshd.client.kex.DHGEXClient: org.apache.sshd.common.kex.AbstractDH dh>;

        $r57 = virtualinvoke $r56.<org.apache.sshd.common.kex.AbstractDH: byte[] getE()>();

        r0.<org.apache.sshd.client.kex.DHGEXClient: byte[] e> = $r57;

        $r58 = r0.<org.apache.sshd.client.kex.DHGEXClient: org.slf4j.Logger log>;

        $z3 = interfaceinvoke $r58.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z3 == 0 goto label3;

        $r62 = r0.<org.apache.sshd.client.kex.DHGEXClient: org.slf4j.Logger log>;

        varReplacer32 = "next({})[{}] Send SSH_MSG_KEX_DH_GEX_INIT";

        interfaceinvoke $r62.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>(varReplacer32, r0, r1);

     label3:
        $r59 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r75);

        varReplacer37 = 32;

        r76 = interfaceinvoke r1.<org.apache.sshd.common.session.Session: org.apache.sshd.common.util.buffer.Buffer prepareBuffer(byte,org.apache.sshd.common.util.buffer.Buffer)>(varReplacer37, $r59);

        $r60 = r0.<org.apache.sshd.client.kex.DHGEXClient: byte[] e>;

        virtualinvoke r76.<org.apache.sshd.common.util.buffer.Buffer: void putMPInt(byte[])>($r60);

        interfaceinvoke r1.<org.apache.sshd.common.session.Session: org.apache.sshd.common.io.IoWriteFuture writePacket(org.apache.sshd.common.util.buffer.Buffer)>(r76);

        varReplacer38 = 33;

        r0.<org.apache.sshd.client.kex.DHGEXClient: byte expected> = varReplacer38;

        varReplacer44 = 0;

        return varReplacer44;

     label4:
        if i0 != 33 goto label7;

        r9 = virtualinvoke r75.<org.apache.sshd.common.util.buffer.Buffer: byte[] getBytes()>();

        $r10 = virtualinvoke r75.<org.apache.sshd.common.util.buffer.Buffer: byte[] getMPIntAsBytes()>();

        r0.<org.apache.sshd.client.kex.DHGEXClient: byte[] f> = $r10;

        r11 = virtualinvoke r75.<org.apache.sshd.common.util.buffer.Buffer: byte[] getBytes()>();

        $r13 = r0.<org.apache.sshd.client.kex.DHGEXClient: org.apache.sshd.common.kex.AbstractDH dh>;

        $r12 = r0.<org.apache.sshd.client.kex.DHGEXClient: byte[] f>;

        virtualinvoke $r13.<org.apache.sshd.common.kex.AbstractDH: void setF(byte[])>($r12);

        $r14 = r0.<org.apache.sshd.client.kex.DHGEXClient: org.apache.sshd.common.kex.AbstractDH dh>;

        $r15 = virtualinvoke $r14.<org.apache.sshd.common.kex.AbstractDH: byte[] getK()>();

        r0.<org.apache.sshd.client.kex.DHGEXClient: byte[] k> = $r15;

        $r16 = new org.apache.sshd.common.util.buffer.ByteArrayBuffer;

        specialinvoke $r16.<org.apache.sshd.common.util.buffer.ByteArrayBuffer: void <init>(byte[])>(r9);

        r77 = $r16;

        $r17 = virtualinvoke r77.<org.apache.sshd.common.util.buffer.Buffer: java.security.PublicKey getRawPublicKey()>();

        r0.<org.apache.sshd.client.kex.DHGEXClient: java.security.PublicKey serverKey> = $r17;

        $r18 = r0.<org.apache.sshd.client.kex.DHGEXClient: java.security.PublicKey serverKey>;

        r19 = staticinvoke <org.apache.sshd.common.config.keys.KeyUtils: java.lang.String getKeyType(java.security.Key)>($r18);

        $z1 = staticinvoke <org.apache.sshd.common.util.GenericUtils: boolean isEmpty(java.lang.CharSequence)>(r19);

        if $z1 == 0 goto label5;

        $r45 = new org.apache.sshd.common.SshException;

        varReplacer30 = "Unsupported server key type";

        specialinvoke $r45.<org.apache.sshd.common.SshException: void <init>(java.lang.String)>(varReplacer30);

        throw $r45;

     label5:
        $r20 = new org.apache.sshd.common.util.buffer.ByteArrayBuffer;

        specialinvoke $r20.<org.apache.sshd.common.util.buffer.ByteArrayBuffer: void <init>()>();

        r78 = $r20;

        $r21 = r0.<org.apache.sshd.client.kex.DHGEXClient: byte[] v_c>;

        virtualinvoke r78.<org.apache.sshd.common.util.buffer.Buffer: void putBytes(byte[])>($r21);

        $r22 = r0.<org.apache.sshd.client.kex.DHGEXClient: byte[] v_s>;

        virtualinvoke r78.<org.apache.sshd.common.util.buffer.Buffer: void putBytes(byte[])>($r22);

        $r23 = r0.<org.apache.sshd.client.kex.DHGEXClient: byte[] i_c>;

        virtualinvoke r78.<org.apache.sshd.common.util.buffer.Buffer: void putBytes(byte[])>($r23);

        $r24 = r0.<org.apache.sshd.client.kex.DHGEXClient: byte[] i_s>;

        virtualinvoke r78.<org.apache.sshd.common.util.buffer.Buffer: void putBytes(byte[])>($r24);

        virtualinvoke r78.<org.apache.sshd.common.util.buffer.Buffer: void putBytes(byte[])>(r9);

        $i2 = r0.<org.apache.sshd.client.kex.DHGEXClient: int min>;

        $l3 = (long) $i2;

        virtualinvoke r78.<org.apache.sshd.common.util.buffer.Buffer: void putInt(long)>($l3);

        $i4 = r0.<org.apache.sshd.client.kex.DHGEXClient: int prf>;

        $l5 = (long) $i4;

        virtualinvoke r78.<org.apache.sshd.common.util.buffer.Buffer: void putInt(long)>($l5);

        $i6 = r0.<org.apache.sshd.client.kex.DHGEXClient: int max>;

        $l7 = (long) $i6;

        virtualinvoke r78.<org.apache.sshd.common.util.buffer.Buffer: void putInt(long)>($l7);

        $r25 = r0.<org.apache.sshd.client.kex.DHGEXClient: byte[] p>;

        virtualinvoke r78.<org.apache.sshd.common.util.buffer.Buffer: void putMPInt(byte[])>($r25);

        $r26 = r0.<org.apache.sshd.client.kex.DHGEXClient: byte[] g>;

        virtualinvoke r78.<org.apache.sshd.common.util.buffer.Buffer: void putMPInt(byte[])>($r26);

        $r27 = r0.<org.apache.sshd.client.kex.DHGEXClient: byte[] e>;

        virtualinvoke r78.<org.apache.sshd.common.util.buffer.Buffer: void putMPInt(byte[])>($r27);

        $r28 = r0.<org.apache.sshd.client.kex.DHGEXClient: byte[] f>;

        virtualinvoke r78.<org.apache.sshd.common.util.buffer.Buffer: void putMPInt(byte[])>($r28);

        $r29 = r0.<org.apache.sshd.client.kex.DHGEXClient: byte[] k>;

        virtualinvoke r78.<org.apache.sshd.common.util.buffer.Buffer: void putMPInt(byte[])>($r29);

        $r30 = r0.<org.apache.sshd.client.kex.DHGEXClient: org.apache.sshd.common.digest.Digest hash>;

        $r31 = virtualinvoke r78.<org.apache.sshd.common.util.buffer.Buffer: byte[] array()>();

        $i8 = virtualinvoke r78.<org.apache.sshd.common.util.buffer.Buffer: int available()>();

        varReplacer31 = 0;

        interfaceinvoke $r30.<org.apache.sshd.common.digest.Digest: void update(byte[],int,int)>($r31, varReplacer31, $i8);

        $r32 = r0.<org.apache.sshd.client.kex.DHGEXClient: org.apache.sshd.common.digest.Digest hash>;

        $r33 = interfaceinvoke $r32.<org.apache.sshd.common.digest.Digest: byte[] digest()>();

        r0.<org.apache.sshd.client.kex.DHGEXClient: byte[] h> = $r33;

        $r34 = interfaceinvoke r1.<org.apache.sshd.common.session.Session: java.util.List getSignatureFactories()>();

        $r35 = staticinvoke <org.apache.sshd.common.NamedFactory$Utils: java.lang.Object create(java.util.Collection,java.lang.String)>($r34, r19);

        varReplacer34 = "No verifier located for algorithm=%s";

        $r36 = staticinvoke <org.apache.sshd.common.util.ValidateUtils: java.lang.Object checkNotNull(java.lang.Object,java.lang.String,java.lang.Object)>($r35, varReplacer34, r19);

        r37 = (org.apache.sshd.common.signature.Signature) $r36;

        $r38 = r0.<org.apache.sshd.client.kex.DHGEXClient: java.security.PublicKey serverKey>;

        interfaceinvoke r37.<org.apache.sshd.common.signature.Signature: void initVerifier(java.security.PublicKey)>($r38);

        $r39 = r0.<org.apache.sshd.client.kex.DHGEXClient: byte[] h>;

        interfaceinvoke r37.<org.apache.sshd.common.signature.Signature: void update(byte[])>($r39);

        $z2 = interfaceinvoke r37.<org.apache.sshd.common.signature.Signature: boolean verify(byte[])>(r11);

        if $z2 != 0 goto label6;

        $r40 = new org.apache.sshd.common.SshException;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        varReplacer35 = "KeyExchange signature verification failed for key type=";

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer35);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer33 = 3;

        specialinvoke $r40.<org.apache.sshd.common.SshException: void <init>(int,java.lang.String)>(varReplacer33, $r44);

        throw $r40;

     label6:
        varReplacer41 = 1;

        return varReplacer41;

     label7:
        $r3 = new java.lang.IllegalStateException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        varReplacer39 = "Unknown command value: ";

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer39);

        $r6 = staticinvoke <org.apache.sshd.common.kex.KeyExchange$Utils: java.lang.String getGroupKexOpcodeName(int)>(i0);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8);

        throw $r3;
    }

    protected org.apache.sshd.common.kex.AbstractDH getDH(java.math.BigInteger, java.math.BigInteger) throws java.lang.Exception
    {
        org.apache.sshd.client.kex.DHGEXClient r0;
        java.lang.Object[] $r1;
        java.math.BigInteger r2, r3;
        org.apache.sshd.common.kex.DHFactory $r4;
        org.apache.sshd.common.kex.AbstractDH $r5;

        nop;

        r0 := @this: org.apache.sshd.client.kex.DHGEXClient;

        r2 := @parameter0: java.math.BigInteger;

        r3 := @parameter1: java.math.BigInteger;

        $r4 = r0.<org.apache.sshd.client.kex.DHGEXClient: org.apache.sshd.common.kex.DHFactory factory>;

        $r1 = newarray (java.lang.Object)[2];

        $r1[0] = r2;

        $r1[1] = r3;

        $r5 = interfaceinvoke $r4.<org.apache.sshd.common.kex.DHFactory: org.apache.sshd.common.kex.AbstractDH create(java.lang.Object[])>($r1);

        return $r5;
    }
}
