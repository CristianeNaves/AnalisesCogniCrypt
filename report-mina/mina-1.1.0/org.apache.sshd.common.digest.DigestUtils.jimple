public final class org.apache.sshd.common.digest.DigestUtils extends java.lang.Object
{

    private void <init>()
    {
        org.apache.sshd.common.digest.DigestUtils r0;
        java.lang.UnsupportedOperationException $r1;
        java.lang.String varReplacer3360;

        nop;

        r0 := @this: org.apache.sshd.common.digest.DigestUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.UnsupportedOperationException;

        varReplacer3360 = "No instance";

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>(varReplacer3360);

        throw $r1;
    }

    public static boolean checkSupported(java.lang.String)
    {
        java.lang.String r0, varReplacer3362;
        java.lang.Exception $r2, r4;
        java.security.MessageDigest r3;
        boolean $z0;
        int varReplacer3361;

        nop;

        r0 := @parameter0: java.lang.String;

        varReplacer3362 = "No algorithm";

        staticinvoke <org.apache.sshd.common.util.ValidateUtils: java.lang.String checkNotNullAndNotEmpty(java.lang.String,java.lang.String)>(r0, varReplacer3362);

     label1:
        r3 = staticinvoke <org.apache.sshd.common.util.SecurityUtils: java.security.MessageDigest getMessageDigest(java.lang.String)>(r0);

        if r3 == null goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;

     label4:
        $r2 := @caughtexception;

        r4 = $r2;

        varReplacer3361 = 0;

        return varReplacer3361;

        catch java.lang.Exception from label1 to label3 with label4;
    }

    public static org.apache.sshd.common.digest.Digest findDigestByAlgorithm(java.lang.String, java.util.Comparator, java.util.Collection)
    {
        java.lang.String r0, $r6;
        boolean $z0, $z1, $z2;
        java.util.Collection r1;
        java.util.Iterator r2;
        java.lang.Object $r3;
        org.apache.sshd.common.digest.Digest r4;
        java.util.Comparator r5;
        int $i0;
        null_type varReplacer3363, varReplacer3364;

        nop;

        r0 := @parameter0: java.lang.String;

        r5 := @parameter1: java.util.Comparator;

        r1 := @parameter2: java.util.Collection;

        $z0 = staticinvoke <org.apache.sshd.common.util.GenericUtils: boolean isEmpty(java.lang.CharSequence)>(r0);

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <org.apache.sshd.common.util.GenericUtils: boolean isEmpty(java.util.Collection)>(r1);

        if $z1 == 0 goto label2;

     label1:
        varReplacer3364 = null;

        return varReplacer3364;

     label2:
        r2 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.sshd.common.digest.Digest) $r3;

        $r6 = interfaceinvoke r4.<org.apache.sshd.common.digest.Digest: java.lang.String getAlgorithm()>();

        $i0 = interfaceinvoke r5.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(r0, $r6);

        if $i0 != 0 goto label4;

        return r4;

     label4:
        goto label3;

     label5:
        varReplacer3363 = null;

        return varReplacer3363;
    }

    public static org.apache.sshd.common.digest.DigestFactory findFactoryByAlgorithm(java.lang.String, java.util.Comparator, java.util.Collection)
    {
        java.lang.String r0, $r6;
        boolean $z0, $z1, $z2;
        java.util.Collection r1;
        java.util.Iterator r2;
        java.lang.Object $r3;
        org.apache.sshd.common.digest.DigestFactory r4;
        java.util.Comparator r5;
        int $i0;
        null_type varReplacer3365, varReplacer3366;

        nop;

        r0 := @parameter0: java.lang.String;

        r5 := @parameter1: java.util.Comparator;

        r1 := @parameter2: java.util.Collection;

        $z0 = staticinvoke <org.apache.sshd.common.util.GenericUtils: boolean isEmpty(java.lang.CharSequence)>(r0);

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <org.apache.sshd.common.util.GenericUtils: boolean isEmpty(java.util.Collection)>(r1);

        if $z1 == 0 goto label2;

     label1:
        varReplacer3365 = null;

        return varReplacer3365;

     label2:
        r2 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.sshd.common.digest.DigestFactory) $r3;

        $r6 = interfaceinvoke r4.<org.apache.sshd.common.digest.DigestFactory: java.lang.String getAlgorithm()>();

        $i0 = interfaceinvoke r5.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(r0, $r6);

        if $i0 != 0 goto label4;

        return r4;

     label4:
        goto label3;

     label5:
        varReplacer3366 = null;

        return varReplacer3366;
    }

    public static java.lang.String getFingerPrint(org.apache.sshd.common.Factory, java.lang.String) throws java.lang.Exception
    {
        org.apache.sshd.common.Factory r0;
        java.lang.String r1, $r3;
        java.nio.charset.Charset $r2;

        nop;

        r0 := @parameter0: org.apache.sshd.common.Factory;

        r1 := @parameter1: java.lang.String;

        $r2 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r3 = staticinvoke <org.apache.sshd.common.digest.DigestUtils: java.lang.String getFingerPrint(org.apache.sshd.common.Factory,java.lang.String,java.nio.charset.Charset)>(r0, r1, $r2);

        return $r3;
    }

    public static java.lang.String getFingerPrint(org.apache.sshd.common.Factory, java.lang.String, java.nio.charset.Charset) throws java.lang.Exception
    {
        org.apache.sshd.common.Factory r0, $r2;
        java.lang.Object $r1, $r3;
        java.lang.String r4, $r7, varReplacer3367;
        java.nio.charset.Charset r5;
        org.apache.sshd.common.digest.Digest $r6;

        nop;

        r0 := @parameter0: org.apache.sshd.common.Factory;

        r4 := @parameter1: java.lang.String;

        r5 := @parameter2: java.nio.charset.Charset;

        varReplacer3367 = "No factory";

        $r1 = staticinvoke <org.apache.sshd.common.util.ValidateUtils: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(r0, varReplacer3367);

        $r2 = (org.apache.sshd.common.Factory) $r1;

        $r3 = interfaceinvoke $r2.<org.apache.sshd.common.Factory: java.lang.Object create()>();

        $r6 = (org.apache.sshd.common.digest.Digest) $r3;

        $r7 = staticinvoke <org.apache.sshd.common.digest.DigestUtils: java.lang.String getFingerPrint(org.apache.sshd.common.digest.Digest,java.lang.String,java.nio.charset.Charset)>($r6, r4, r5);

        return $r7;
    }

    public static java.lang.String getFingerPrint(org.apache.sshd.common.digest.Digest, java.lang.String) throws java.lang.Exception
    {
        org.apache.sshd.common.digest.Digest r0;
        java.lang.String r1, $r3;
        java.nio.charset.Charset $r2;

        nop;

        r0 := @parameter0: org.apache.sshd.common.digest.Digest;

        r1 := @parameter1: java.lang.String;

        $r2 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r3 = staticinvoke <org.apache.sshd.common.digest.DigestUtils: java.lang.String getFingerPrint(org.apache.sshd.common.digest.Digest,java.lang.String,java.nio.charset.Charset)>(r0, r1, $r2);

        return $r3;
    }

    public static java.lang.String getFingerPrint(org.apache.sshd.common.digest.Digest, java.lang.String, java.nio.charset.Charset) throws java.lang.Exception
    {
        java.lang.String r0, $r4;
        boolean $z0;
        org.apache.sshd.common.digest.Digest r1;
        java.nio.charset.Charset r2;
        byte[] $r3;
        null_type varReplacer3368;

        nop;

        r1 := @parameter0: org.apache.sshd.common.digest.Digest;

        r0 := @parameter1: java.lang.String;

        r2 := @parameter2: java.nio.charset.Charset;

        $z0 = staticinvoke <org.apache.sshd.common.util.GenericUtils: boolean isEmpty(java.lang.CharSequence)>(r0);

        if $z0 == 0 goto label1;

        varReplacer3368 = null;

        return varReplacer3368;

     label1:
        $r3 = virtualinvoke r0.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>(r2);

        $r4 = staticinvoke <org.apache.sshd.common.digest.DigestUtils: java.lang.String getFingerPrint(org.apache.sshd.common.digest.Digest,byte[])>(r1, $r3);

        return $r4;
    }

    public static transient java.lang.String getFingerPrint(org.apache.sshd.common.Factory, byte[]) throws java.lang.Exception
    {
        org.apache.sshd.common.Factory r0;
        byte[] r1;
        int $i0, varReplacer3369;
        java.lang.String $r2;

        nop;

        r0 := @parameter0: org.apache.sshd.common.Factory;

        r1 := @parameter1: byte[];

        $i0 = staticinvoke <org.apache.sshd.common.util.NumberUtils: int length(byte[])>(r1);

        varReplacer3369 = 0;

        $r2 = staticinvoke <org.apache.sshd.common.digest.DigestUtils: java.lang.String getFingerPrint(org.apache.sshd.common.Factory,byte[],int,int)>(r0, r1, varReplacer3369, $i0);

        return $r2;
    }

    public static java.lang.String getFingerPrint(org.apache.sshd.common.Factory, byte[], int, int) throws java.lang.Exception
    {
        org.apache.sshd.common.Factory r0, $r2;
        java.lang.Object $r1, $r3;
        byte[] r4;
        int i0, i1;
        org.apache.sshd.common.digest.Digest $r5;
        java.lang.String $r6, varReplacer3370;

        nop;

        r0 := @parameter0: org.apache.sshd.common.Factory;

        r4 := @parameter1: byte[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        varReplacer3370 = "No factory";

        $r1 = staticinvoke <org.apache.sshd.common.util.ValidateUtils: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(r0, varReplacer3370);

        $r2 = (org.apache.sshd.common.Factory) $r1;

        $r3 = interfaceinvoke $r2.<org.apache.sshd.common.Factory: java.lang.Object create()>();

        $r5 = (org.apache.sshd.common.digest.Digest) $r3;

        $r6 = staticinvoke <org.apache.sshd.common.digest.DigestUtils: java.lang.String getFingerPrint(org.apache.sshd.common.digest.Digest,byte[],int,int)>($r5, r4, i0, i1);

        return $r6;
    }

    public static transient java.lang.String getFingerPrint(org.apache.sshd.common.digest.Digest, byte[]) throws java.lang.Exception
    {
        org.apache.sshd.common.digest.Digest r0;
        byte[] r1;
        int $i0, varReplacer3371;
        java.lang.String $r2;

        nop;

        r0 := @parameter0: org.apache.sshd.common.digest.Digest;

        r1 := @parameter1: byte[];

        $i0 = staticinvoke <org.apache.sshd.common.util.NumberUtils: int length(byte[])>(r1);

        varReplacer3371 = 0;

        $r2 = staticinvoke <org.apache.sshd.common.digest.DigestUtils: java.lang.String getFingerPrint(org.apache.sshd.common.digest.Digest,byte[],int,int)>(r0, r1, varReplacer3371, $i0);

        return $r2;
    }

    public static java.lang.String getFingerPrint(org.apache.sshd.common.digest.Digest, byte[], int, int) throws java.lang.Exception
    {
        int i0, i1, varReplacer3375;
        org.apache.sshd.common.digest.Digest r0, $r2;
        java.lang.Object $r1;
        byte[] r3, r4;
        java.lang.String r5, $r7, $r9, $r10, $r13, $r14, $r16, $r20, $r21, $r23, varReplacer3372, varReplacer3374, varReplacer3376, varReplacer3377, varReplacer3378, varReplacer3379, varReplacer3380;
        org.apache.sshd.common.digest.BuiltinDigests $r6;
        boolean $z0;
        java.lang.StringBuilder $r8, $r11, $r12, $r15, $r17, $r18, $r19, $r22;
        null_type varReplacer3373;

        nop;

        r0 := @parameter0: org.apache.sshd.common.digest.Digest;

        r3 := @parameter1: byte[];

        i1 := @parameter2: int;

        i0 := @parameter3: int;

        if i0 > 0 goto label1;

        varReplacer3373 = null;

        return varReplacer3373;

     label1:
        varReplacer3374 = "No digest";

        $r1 = staticinvoke <org.apache.sshd.common.util.ValidateUtils: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(r0, varReplacer3374);

        $r2 = (org.apache.sshd.common.digest.Digest) $r1;

        interfaceinvoke $r2.<org.apache.sshd.common.digest.Digest: void init()>();

        interfaceinvoke r0.<org.apache.sshd.common.digest.Digest: void update(byte[],int,int)>(r3, i1, i0);

        r4 = interfaceinvoke r0.<org.apache.sshd.common.digest.Digest: byte[] digest()>();

        r5 = interfaceinvoke r0.<org.apache.sshd.common.digest.Digest: java.lang.String getAlgorithm()>();

        $r6 = <org.apache.sshd.common.digest.BuiltinDigests: org.apache.sshd.common.digest.BuiltinDigests md5>;

        $r7 = virtualinvoke $r6.<org.apache.sshd.common.digest.BuiltinDigests: java.lang.String getAlgorithm()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z0 == 0 goto label2;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        varReplacer3376 = ":";

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3376);

        varReplacer3375 = 58;

        $r20 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: java.lang.String printHex(char,byte[])>(varReplacer3375, r4);

        $r21 = virtualinvoke $r20.<java.lang.String: java.lang.String toLowerCase()>();

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r23;

     label2:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        varReplacer3379 = "-";

        varReplacer3380 = "";

        $r9 = virtualinvoke r5.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(varReplacer3379, varReplacer3380);

        $r10 = virtualinvoke $r9.<java.lang.String: java.lang.String toUpperCase()>();

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        varReplacer3372 = ":";

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3372);

        $r13 = staticinvoke <org.apache.sshd.common.util.Base64: java.lang.String encodeToString(byte[])>(r4);

        varReplacer3377 = "=";

        varReplacer3378 = "";

        $r14 = virtualinvoke $r13.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(varReplacer3377, varReplacer3378);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r16;
    }
}
