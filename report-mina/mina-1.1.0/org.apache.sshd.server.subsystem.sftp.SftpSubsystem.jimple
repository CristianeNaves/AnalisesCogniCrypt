public class org.apache.sshd.server.subsystem.sftp.SftpSubsystem extends org.apache.sshd.common.util.logging.AbstractLoggingBean implements org.apache.sshd.server.Command, java.lang.Runnable, org.apache.sshd.server.SessionAware, org.apache.sshd.common.file.FileSystemAware, org.apache.sshd.server.session.ServerSessionHolder, org.apache.sshd.server.subsystem.sftp.SftpEventListenerManager
{
    public static final java.lang.String MAX_OPEN_HANDLES_PER_SESSION;
    public static final int DEFAULT_MAX_OPEN_HANDLES;
    public static final java.lang.String FILE_HANDLE_SIZE;
    public static final int MIN_FILE_HANDLE_SIZE;
    public static final int DEFAULT_FILE_HANDLE_SIZE;
    public static final int MAX_FILE_HANDLE_SIZE;
    public static final java.lang.String MAX_FILE_HANDLE_RAND_ROUNDS;
    public static final int MIN_FILE_HANDLE_ROUNDS;
    public static final int DEFAULT_FILE_HANDLE_ROUNDS;
    public static final int MAX_FILE_HANDLE_ROUNDS;
    public static final java.lang.String SFTP_VERSION;
    public static final int LOWER_SFTP_IMPL;
    public static final int HIGHER_SFTP_IMPL;
    public static final java.lang.String ALL_SFTP_IMPL;
    public static final java.lang.String MAX_PACKET_LENGTH_PROP;
    public static final int DEFAULT_MAX_PACKET_LENGTH;
    public static final java.lang.String CLIENT_EXTENSIONS_PROP;
    public static final java.util.Map DEFAULT_SUPPORTED_CLIENT_EXTENSIONS;
    public static final java.lang.String OPENSSH_EXTENSIONS_PROP;
    public static final java.util.List DEFAULT_OPEN_SSH_EXTENSIONS;
    public static final java.util.List DEFAULT_OPEN_SSH_EXTENSIONS_NAMES;
    public static final java.util.List DEFAULT_UNIX_VIEW;
    public static final java.lang.String ACL_SUPPORTED_MASK_PROP;
    public static final java.util.Set DEFAULT_ACL_SUPPORTED_MASK;
    public static final java.lang.String NEWLINE_VALUE;
    public static final java.util.Map FILEATTRS_RESOLVERS;
    protected org.apache.sshd.server.ExitCallback callback;
    protected java.io.InputStream in;
    protected java.io.OutputStream out;
    protected java.io.OutputStream err;
    protected org.apache.sshd.server.Environment env;
    protected org.apache.sshd.common.random.Random randomizer;
    protected int fileHandleSize;
    protected int maxFileHandleRounds;
    protected java.util.concurrent.ExecutorService executors;
    protected boolean shutdownExecutor;
    protected java.util.concurrent.Future pendingFuture;
    protected byte[] workBuf;
    protected java.nio.file.FileSystem fileSystem;
    protected java.nio.file.Path defaultDir;
    protected long requestsCount;
    protected int version;
    protected final java.util.Map extensions;
    protected final java.util.Map handles;
    protected final org.apache.sshd.server.subsystem.sftp.UnsupportedAttributePolicy unsupportedAttributePolicy;
    private org.apache.sshd.server.session.ServerSession serverSession;
    private final java.util.concurrent.atomic.AtomicBoolean closed;
    private final java.util.Collection sftpEventListeners;
    private final org.apache.sshd.server.subsystem.sftp.SftpEventListener sftpEventListenerProxy;

    public void <init>(java.util.concurrent.ExecutorService, boolean, org.apache.sshd.server.subsystem.sftp.UnsupportedAttributePolicy)
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        int $i0, varReplacer6647, varReplacer6648, varReplacer6649, varReplacer6650, varReplacer6651, varReplacer6652;
        byte[] $r1;
        java.nio.file.FileSystem $r2, $r3;
        java.lang.String $r4, $r21, varReplacer6653, varReplacer6654;
        java.lang.String[] $r5;
        java.nio.file.Path $r6;
        java.util.HashMap $r7, $r8;
        java.util.concurrent.atomic.AtomicBoolean $r9;
        java.util.concurrent.CopyOnWriteArraySet $r10;
        java.util.concurrent.ExecutorService r11, $r22;
        boolean z0;
        org.apache.sshd.server.subsystem.sftp.UnsupportedAttributePolicy r12, $r14;
        java.lang.Object $r13;
        java.lang.Class $r15, $r20;
        java.lang.ClassLoader $r16;
        java.util.Collection $r17;
        java.util.EventListener $r18;
        org.apache.sshd.server.subsystem.sftp.SftpEventListener $r19;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r11 := @parameter0: java.util.concurrent.ExecutorService;

        z0 := @parameter1: boolean;

        r12 := @parameter2: org.apache.sshd.server.subsystem.sftp.UnsupportedAttributePolicy;

        specialinvoke r0.<org.apache.sshd.common.util.logging.AbstractLoggingBean: void <init>()>();

        varReplacer6650 = 16;

        r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int fileHandleSize> = varReplacer6650;

        varReplacer6649 = 4;

        r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int maxFileHandleRounds> = varReplacer6649;

        varReplacer6647 = 16;

        varReplacer6648 = 4;

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>(varReplacer6647, varReplacer6648);

        $r1 = newarray (byte)[$i0];

        r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: byte[] workBuf> = $r1;

        $r2 = staticinvoke <java.nio.file.FileSystems: java.nio.file.FileSystem getDefault()>();

        r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.nio.file.FileSystem fileSystem> = $r2;

        $r3 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.nio.file.FileSystem fileSystem>;

        varReplacer6653 = "user.dir";

        $r4 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(varReplacer6653);

        $r5 = newarray (java.lang.String)[0];

        $r6 = virtualinvoke $r3.<java.nio.file.FileSystem: java.nio.file.Path getPath(java.lang.String,java.lang.String[])>($r4, $r5);

        r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.nio.file.Path defaultDir> = $r6;

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map extensions> = $r7;

        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>()>();

        r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map handles> = $r8;

        $r9 = new java.util.concurrent.atomic.AtomicBoolean;

        varReplacer6651 = 0;

        specialinvoke $r9.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(varReplacer6651);

        r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.concurrent.atomic.AtomicBoolean closed> = $r9;

        $r10 = new java.util.concurrent.CopyOnWriteArraySet;

        specialinvoke $r10.<java.util.concurrent.CopyOnWriteArraySet: void <init>()>();

        r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Collection sftpEventListeners> = $r10;

        if r11 != null goto label1;

        $r20 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r21 = virtualinvoke $r20.<java.lang.Class: java.lang.String getSimpleName()>();

        $r22 = staticinvoke <org.apache.sshd.common.util.threads.ThreadUtils: java.util.concurrent.ExecutorService newSingleThreadExecutor(java.lang.String)>($r21);

        r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.concurrent.ExecutorService executors> = $r22;

        varReplacer6652 = 1;

        r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: boolean shutdownExecutor> = varReplacer6652;

        goto label2;

     label1:
        r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.concurrent.ExecutorService executors> = r11;

        r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: boolean shutdownExecutor> = z0;

     label2:
        varReplacer6654 = "No policy provided";

        $r13 = staticinvoke <org.apache.sshd.common.util.ValidateUtils: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(r12, varReplacer6654);

        $r14 = (org.apache.sshd.server.subsystem.sftp.UnsupportedAttributePolicy) $r13;

        r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.subsystem.sftp.UnsupportedAttributePolicy unsupportedAttributePolicy> = $r14;

        $r15 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r16 = virtualinvoke $r15.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r17 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Collection sftpEventListeners>;

        $r18 = staticinvoke <org.apache.sshd.common.util.EventListenerUtils: java.util.EventListener proxyWrapper(java.lang.Class,java.lang.ClassLoader,java.lang.Iterable)>(class "Lorg/apache/sshd/server/subsystem/sftp/SftpEventListener;", $r16, $r17);

        $r19 = (org.apache.sshd.server.subsystem.sftp.SftpEventListener) $r18;

        r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.subsystem.sftp.SftpEventListener sftpEventListenerProxy> = $r19;

        return;
    }

    public int getVersion()
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        int $i0;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        $i0 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int version>;

        return $i0;
    }

    public final org.apache.sshd.server.subsystem.sftp.UnsupportedAttributePolicy getUnsupportedAttributePolicy()
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        org.apache.sshd.server.subsystem.sftp.UnsupportedAttributePolicy $r1;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        $r1 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.subsystem.sftp.UnsupportedAttributePolicy unsupportedAttributePolicy>;

        return $r1;
    }

    public org.apache.sshd.server.subsystem.sftp.SftpEventListener getSftpEventListenerProxy()
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        org.apache.sshd.server.subsystem.sftp.SftpEventListener $r1;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        $r1 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.subsystem.sftp.SftpEventListener sftpEventListenerProxy>;

        return $r1;
    }

    public boolean addSftpEventListener(org.apache.sshd.server.subsystem.sftp.SftpEventListener)
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        org.apache.sshd.server.subsystem.sftp.SftpEventListener r1;
        java.util.Collection $r2;
        java.lang.Object $r3;
        boolean $z0;
        java.lang.String varReplacer6655;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r1 := @parameter0: org.apache.sshd.server.subsystem.sftp.SftpEventListener;

        $r2 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Collection sftpEventListeners>;

        varReplacer6655 = "No listener";

        $r3 = staticinvoke <org.apache.sshd.common.util.ValidateUtils: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(r1, varReplacer6655);

        $z0 = interfaceinvoke $r2.<java.util.Collection: boolean add(java.lang.Object)>($r3);

        return $z0;
    }

    public boolean removeSftpEventListener(org.apache.sshd.server.subsystem.sftp.SftpEventListener)
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        org.apache.sshd.server.subsystem.sftp.SftpEventListener r1;
        java.util.Collection $r2;
        boolean $z0;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r1 := @parameter0: org.apache.sshd.server.subsystem.sftp.SftpEventListener;

        $r2 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Collection sftpEventListeners>;

        $z0 = interfaceinvoke $r2.<java.util.Collection: boolean remove(java.lang.Object)>(r1);

        return $z0;
    }

    public void setSession(org.apache.sshd.server.session.ServerSession)
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        org.apache.sshd.server.session.ServerSession r1, $r3;
        java.lang.Object $r2, $r6;
        org.apache.sshd.server.ServerFactoryManager r4;
        org.apache.sshd.common.Factory r5;
        org.apache.sshd.common.random.Random $r7;
        int $i0, $i1, $i2, $i4, $i5, $i7, $i8, $i9, $i11, $i12, $i14, $i15, $i16, varReplacer6660, varReplacer6664;
        long $l3, $l6, $l10, $l13;
        byte[] $r8, $r9;
        boolean $z0, $z1, $z2, $z3;
        java.lang.String varReplacer6656, varReplacer6657, varReplacer6658, varReplacer6659, varReplacer6661, varReplacer6662, varReplacer6663;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r1 := @parameter0: org.apache.sshd.server.session.ServerSession;

        varReplacer6656 = "No session";

        $r2 = staticinvoke <org.apache.sshd.common.util.ValidateUtils: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(r1, varReplacer6656);

        $r3 = (org.apache.sshd.server.session.ServerSession) $r2;

        r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession serverSession> = $r3;

        r4 = interfaceinvoke r1.<org.apache.sshd.server.session.ServerSession: org.apache.sshd.server.ServerFactoryManager getFactoryManager()>();

        r5 = interfaceinvoke r4.<org.apache.sshd.common.FactoryManager: org.apache.sshd.common.Factory getRandomFactory()>();

        $r6 = interfaceinvoke r5.<org.apache.sshd.common.Factory: java.lang.Object create()>();

        $r7 = (org.apache.sshd.common.random.Random) $r6;

        r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.common.random.Random randomizer> = $r7;

        varReplacer6663 = "sftp-handle-size";

        varReplacer6664 = 16;

        $i0 = staticinvoke <org.apache.sshd.common.PropertyResolverUtils: int getIntProperty(org.apache.sshd.common.PropertyResolver,java.lang.String,int)>(r1, varReplacer6663, varReplacer6664);

        r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int fileHandleSize> = $i0;

        $i1 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int fileHandleSize>;

        if $i1 < 4 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $i2 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int fileHandleSize>;

        $l3 = (long) $i2;

        varReplacer6658 = "File handle size too small: %d";

        staticinvoke <org.apache.sshd.common.util.ValidateUtils: void checkTrue(boolean,java.lang.String,long)>($z0, varReplacer6658, $l3);

        $i4 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int fileHandleSize>;

        if $i4 > 64 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        $i5 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int fileHandleSize>;

        $l6 = (long) $i5;

        varReplacer6661 = "File handle size too big: %d";

        staticinvoke <org.apache.sshd.common.util.ValidateUtils: void checkTrue(boolean,java.lang.String,long)>($z1, varReplacer6661, $l6);

        varReplacer6659 = "sftp-handle-rand-max-rounds";

        varReplacer6660 = 4;

        $i7 = staticinvoke <org.apache.sshd.common.PropertyResolverUtils: int getIntProperty(org.apache.sshd.common.PropertyResolver,java.lang.String,int)>(r1, varReplacer6659, varReplacer6660);

        r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int maxFileHandleRounds> = $i7;

        $i8 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int maxFileHandleRounds>;

        if $i8 < 1 goto label5;

        $z2 = 1;

        goto label6;

     label5:
        $z2 = 0;

     label6:
        $i9 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int maxFileHandleRounds>;

        $l10 = (long) $i9;

        varReplacer6662 = "File handle rounds too small: %d";

        staticinvoke <org.apache.sshd.common.util.ValidateUtils: void checkTrue(boolean,java.lang.String,long)>($z2, varReplacer6662, $l10);

        $i11 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int maxFileHandleRounds>;

        if $i11 > 64 goto label7;

        $z3 = 1;

        goto label8;

     label7:
        $z3 = 0;

     label8:
        $i12 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int maxFileHandleRounds>;

        $l13 = (long) $i12;

        varReplacer6657 = "File handle rounds too big: %d";

        staticinvoke <org.apache.sshd.common.util.ValidateUtils: void checkTrue(boolean,java.lang.String,long)>($z3, varReplacer6657, $l13);

        $r8 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: byte[] workBuf>;

        $i15 = lengthof $r8;

        $i14 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int fileHandleSize>;

        if $i15 >= $i14 goto label9;

        $i16 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int fileHandleSize>;

        $r9 = newarray (byte)[$i16];

        r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: byte[] workBuf> = $r9;

     label9:
        return;
    }

    public org.apache.sshd.server.session.ServerSession getServerSession()
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        org.apache.sshd.server.session.ServerSession $r1;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        $r1 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession serverSession>;

        return $r1;
    }

    public void setFileSystem(java.nio.file.FileSystem)
    {
        java.nio.file.FileSystem r0, $r2;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r1;
        java.lang.Iterable $r3, r5;
        java.lang.Object $r4, $r7, $r9;
        java.util.Iterator $r6, r8;
        boolean $z0;
        java.nio.file.Path $r10;
        java.lang.String varReplacer6665, varReplacer6666, varReplacer6667;

        nop;

        r1 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: java.nio.file.FileSystem;

        $r2 = r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.nio.file.FileSystem fileSystem>;

        if r0 == $r2 goto label1;

        r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.nio.file.FileSystem fileSystem> = r0;

        $r3 = virtualinvoke r0.<java.nio.file.FileSystem: java.lang.Iterable getRootDirectories()>();

        varReplacer6666 = "No root directories";

        $r4 = staticinvoke <org.apache.sshd.common.util.ValidateUtils: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>($r3, varReplacer6666);

        r5 = (java.lang.Iterable) $r4;

        $r6 = interfaceinvoke r5.<java.lang.Iterable: java.util.Iterator iterator()>();

        varReplacer6667 = "No roots iterator";

        $r7 = staticinvoke <org.apache.sshd.common.util.ValidateUtils: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>($r6, varReplacer6667);

        r8 = (java.util.Iterator) $r7;

        $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        varReplacer6665 = "No available root";

        staticinvoke <org.apache.sshd.common.util.ValidateUtils: void checkTrue(boolean,java.lang.String)>($z0, varReplacer6665);

        $r9 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (java.nio.file.Path) $r9;

        r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.nio.file.Path defaultDir> = $r10;

     label1:
        return;
    }

    public void setExitCallback(org.apache.sshd.server.ExitCallback)
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        org.apache.sshd.server.ExitCallback r1;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r1 := @parameter0: org.apache.sshd.server.ExitCallback;

        r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.ExitCallback callback> = r1;

        return;
    }

    public void setInputStream(java.io.InputStream)
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        java.io.InputStream r1;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r1 := @parameter0: java.io.InputStream;

        r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.io.InputStream in> = r1;

        return;
    }

    public void setOutputStream(java.io.OutputStream)
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        java.io.OutputStream r1;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r1 := @parameter0: java.io.OutputStream;

        r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.io.OutputStream out> = r1;

        return;
    }

    public void setErrorStream(java.io.OutputStream)
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        java.io.OutputStream r1;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r1 := @parameter0: java.io.OutputStream;

        r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.io.OutputStream err> = r1;

        return;
    }

    public void start(org.apache.sshd.server.Environment) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        org.apache.sshd.server.Environment r1;
        java.util.concurrent.ExecutorService $r2;
        java.util.concurrent.Future $r3;
        java.lang.RuntimeException $r4, r5;
        java.lang.StringBuilder $r6, $r8, $r11, $r12, $r14;
        org.slf4j.Logger $r7;
        java.lang.Class $r9;
        java.lang.String $r10, $r13, $r15, varReplacer6668, varReplacer6669;
        java.io.IOException $r16;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r1 := @parameter0: org.apache.sshd.server.Environment;

        r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.Environment env> = r1;

     label1:
        $r2 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.concurrent.ExecutorService executors>;

        $r3 = interfaceinvoke $r2.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>(r0);

        r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.concurrent.Future pendingFuture> = $r3;

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r5 = $r4;

        $r7 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        varReplacer6668 = "Failed (";

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6668);

        $r9 = virtualinvoke r5.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.String getSimpleName()>();

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        varReplacer6669 = ") to start command: ";

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6669);

        $r13 = virtualinvoke r5.<java.lang.RuntimeException: java.lang.String toString()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r7.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r15, r5);

        $r16 = new java.io.IOException;

        specialinvoke $r16.<java.io.IOException: void <init>(java.lang.Throwable)>(r5);

        throw $r16;

     label4:
        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void run()
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        byte[] $r1, $r2, $r6;
        int $i0, $i2, $i3, $i5, i6, $i7, $i8, i10, i11, varReplacer6674, varReplacer6675, varReplacer6679, varReplacer6683;
        java.io.InputStream $r3, $r5;
        long $l1, $l4, l9;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r13, $r14, $r67, $r69, $r70, $r81, $r83;
        java.lang.String $r15, $r22, r23, $r25, $r45, $r46, $r62, $r63, $r71, r77, varReplacer6670, varReplacer6671, varReplacer6672, varReplacer6673, varReplacer6676, varReplacer6677, varReplacer6678, varReplacer6680, varReplacer6681, varReplacer6682, varReplacer6684;
        java.lang.Throwable $r16, r17, r28, $r37, $r40, $r56, r73, r79;
        java.lang.Object[] $r18, $r34, $r41, $r53, $r58;
        org.slf4j.Logger $r19, $r33, $r35, $r42, $r52, $r54, $r59, $r64, $r66;
        org.apache.sshd.server.session.ServerSession $r20, $r36, $r43, $r55, $r60, $r68;
        java.lang.Class $r21, $r44, $r61;
        org.apache.sshd.server.subsystem.sftp.Handle r24, r78;
        java.util.Iterator r26, r76;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        org.apache.sshd.server.ExitCallback $r27, $r47;
        java.lang.Object $r29, $r31, $r32, $r48, $r50, $r51;
        java.util.Map$Entry r30, r49;
        java.util.Map $r38, $r74;
        java.util.Set $r39, $r75;
        java.util.concurrent.atomic.AtomicBoolean $r57;
        org.apache.sshd.common.util.buffer.ByteArrayBuffer r72, $r80;
        java.lang.IllegalArgumentException $r82;
        java.io.IOException $r84, $r85;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

     label01:
        l9 = 1L;

     label02:
        $r3 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.io.InputStream in>;

        $r2 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: byte[] workBuf>;

        $r1 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: byte[] workBuf>;

        $i0 = lengthof $r1;

        varReplacer6679 = 0;

        i10 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: int readInt(java.io.InputStream,byte[],int,int)>($r3, $r2, varReplacer6679, $i0);

        if i10 < 5 goto label03;

        $z6 = 1;

        goto label04;

     label03:
        $z6 = 0;

     label04:
        $l1 = (long) i10;

        varReplacer6680 = "Bad length to read: %d";

        staticinvoke <org.apache.sshd.common.util.ValidateUtils: void checkTrue(boolean,java.lang.String,long)>($z6, varReplacer6680, $l1);

        $r80 = new org.apache.sshd.common.util.buffer.ByteArrayBuffer;

        $i2 = i10 + 4;

        $i3 = $i2 + 64;

        varReplacer6675 = 0;

        specialinvoke $r80.<org.apache.sshd.common.util.buffer.ByteArrayBuffer: void <init>(int,boolean)>($i3, varReplacer6675);

        r72 = $r80;

        $l4 = (long) i10;

        virtualinvoke r72.<org.apache.sshd.common.util.buffer.Buffer: void putInt(long)>($l4);

        i11 = i10;

     label05:
        if i11 <= 0 goto label07;

        $r5 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.io.InputStream in>;

        $r6 = virtualinvoke r72.<org.apache.sshd.common.util.buffer.Buffer: byte[] array()>();

        $i5 = virtualinvoke r72.<org.apache.sshd.common.util.buffer.Buffer: int wpos()>();

        i6 = virtualinvoke $r5.<java.io.InputStream: int read(byte[],int,int)>($r6, $i5, i11);

        if i6 >= 0 goto label06;

        $r82 = new java.lang.IllegalArgumentException;

        $r81 = new java.lang.StringBuilder;

        specialinvoke $r81.<java.lang.StringBuilder: void <init>()>();

        varReplacer6672 = "Premature EOF at buffer #";

        $r9 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6672);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l9);

        varReplacer6673 = " while read length=";

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6673);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i10);

        varReplacer6671 = " and remain=";

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6671);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i11);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r82.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

        throw $r82;

     label06:
        $i7 = virtualinvoke r72.<org.apache.sshd.common.util.buffer.Buffer: int wpos()>();

        $i8 = $i7 + i6;

        virtualinvoke r72.<org.apache.sshd.common.util.buffer.Buffer: void wpos(int)>($i8);

        i11 = i11 - i6;

        goto label05;

     label07:
        virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void process(org.apache.sshd.common.util.buffer.Buffer)>(r72);

        l9 = l9 + 1L;

        goto label02;

     label08:
        $r56 := @caughtexception;

        r73 = $r56;

        $r57 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.concurrent.atomic.AtomicBoolean closed>;

        $z3 = virtualinvoke $r57.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z3 != 0 goto label09;

        $z4 = r73 instanceof java.io.EOFException;

        if $z4 != 0 goto label09;

        $r59 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r58 = newarray (java.lang.Object)[3];

        $r60 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r58[0] = $r60;

        $r61 = virtualinvoke r73.<java.lang.Object: java.lang.Class getClass()>();

        $r62 = virtualinvoke $r61.<java.lang.Class: java.lang.String getSimpleName()>();

        $r58[1] = $r62;

        $r63 = virtualinvoke r73.<java.lang.Throwable: java.lang.String getMessage()>();

        $r58[2] = $r63;

        varReplacer6676 = "run({}) {} caught in SFTP subsystem: {}";

        interfaceinvoke $r59.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object[])>(varReplacer6676, $r58);

        $r64 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z5 = interfaceinvoke $r64.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z5 == 0 goto label09;

        $r66 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r83 = new java.lang.StringBuilder;

        specialinvoke $r83.<java.lang.StringBuilder: void <init>()>();

        varReplacer6681 = "run(";

        $r67 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6681);

        $r68 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r69 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r68);

        varReplacer6678 = ") caught exception details";

        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6678);

        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r66.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Throwable)>($r71, r73);

     label09:
        $r74 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map handles>;

        $r75 = interfaceinvoke $r74.<java.util.Map: java.util.Set entrySet()>();

        r76 = interfaceinvoke $r75.<java.util.Set: java.util.Iterator iterator()>();

     label10:
        $z7 = interfaceinvoke r76.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label15;

        $r48 = interfaceinvoke r76.<java.util.Iterator: java.lang.Object next()>();

        r49 = (java.util.Map$Entry) $r48;

        $r50 = interfaceinvoke r49.<java.util.Map$Entry: java.lang.Object getKey()>();

        r77 = (java.lang.String) $r50;

        $r51 = interfaceinvoke r49.<java.util.Map$Entry: java.lang.Object getValue()>();

        r78 = (org.apache.sshd.server.subsystem.sftp.Handle) $r51;

     label11:
        virtualinvoke r78.<org.apache.sshd.server.subsystem.sftp.Handle: void close()>();

        $r52 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z2 = interfaceinvoke $r52.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z2 == 0 goto label12;

        $r54 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r53 = newarray (java.lang.Object)[3];

        $r55 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r53[0] = $r55;

        $r53[1] = r77;

        $r53[2] = r78;

        varReplacer6677 = "run({}) closed pending handle {} [{}]";

        interfaceinvoke $r54.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(varReplacer6677, $r53);

     label12:
        goto label14;

     label13:
        $r40 := @caughtexception;

        r79 = $r40;

        $r42 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r41 = newarray (java.lang.Object)[5];

        $r43 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r41[0] = $r43;

        $r44 = virtualinvoke r79.<java.lang.Object: java.lang.Class getClass()>();

        $r45 = virtualinvoke $r44.<java.lang.Class: java.lang.String getSimpleName()>();

        $r41[1] = $r45;

        $r41[2] = r77;

        $r41[3] = r78;

        $r84 = (java.io.IOException) r79;

        $r46 = virtualinvoke $r84.<java.io.IOException: java.lang.String getMessage()>();

        $r41[4] = $r46;

        varReplacer6682 = "run({}) failed ({}) to close handle={}[{}]: {}";

        interfaceinvoke $r42.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object[])>(varReplacer6682, $r41);

     label14:
        goto label10;

     label15:
        $r47 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.ExitCallback callback>;

        varReplacer6683 = 0;

        interfaceinvoke $r47.<org.apache.sshd.server.ExitCallback: void onExit(int)>(varReplacer6683);

        goto label24;

     label16:
        $r37 := @caughtexception;

        r28 = $r37;

     label17:
        $r38 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map handles>;

        $r39 = interfaceinvoke $r38.<java.util.Map: java.util.Set entrySet()>();

        r26 = interfaceinvoke $r39.<java.util.Set: java.util.Iterator iterator()>();

     label18:
        $z0 = interfaceinvoke r26.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label23;

        $r29 = interfaceinvoke r26.<java.util.Iterator: java.lang.Object next()>();

        r30 = (java.util.Map$Entry) $r29;

        $r31 = interfaceinvoke r30.<java.util.Map$Entry: java.lang.Object getKey()>();

        r23 = (java.lang.String) $r31;

        $r32 = interfaceinvoke r30.<java.util.Map$Entry: java.lang.Object getValue()>();

        r24 = (org.apache.sshd.server.subsystem.sftp.Handle) $r32;

     label19:
        virtualinvoke r24.<org.apache.sshd.server.subsystem.sftp.Handle: void close()>();

        $r33 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z1 = interfaceinvoke $r33.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z1 == 0 goto label20;

        $r35 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r34 = newarray (java.lang.Object)[3];

        $r36 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r34[0] = $r36;

        $r34[1] = r23;

        $r34[2] = r24;

        varReplacer6684 = "run({}) closed pending handle {} [{}]";

        interfaceinvoke $r35.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(varReplacer6684, $r34);

     label20:
        goto label22;

     label21:
        $r16 := @caughtexception;

        r17 = $r16;

        $r19 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r18 = newarray (java.lang.Object)[5];

        $r20 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r18[0] = $r20;

        $r21 = virtualinvoke r17.<java.lang.Object: java.lang.Class getClass()>();

        $r22 = virtualinvoke $r21.<java.lang.Class: java.lang.String getSimpleName()>();

        $r18[1] = $r22;

        $r18[2] = r23;

        $r18[3] = r24;

        $r85 = (java.io.IOException) r17;

        $r25 = virtualinvoke $r85.<java.io.IOException: java.lang.String getMessage()>();

        $r18[4] = $r25;

        varReplacer6670 = "run({}) failed ({}) to close handle={}[{}]: {}";

        interfaceinvoke $r19.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object[])>(varReplacer6670, $r18);

     label22:
        goto label18;

     label23:
        $r27 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.ExitCallback callback>;

        varReplacer6674 = 0;

        interfaceinvoke $r27.<org.apache.sshd.server.ExitCallback: void onExit(int)>(varReplacer6674);

        throw r28;

     label24:
        return;

        catch java.lang.Throwable from label01 to label08 with label08;
        catch java.io.IOException from label11 to label12 with label13;
        catch java.lang.Throwable from label01 to label09 with label16;
        catch java.io.IOException from label19 to label20 with label21;
        catch java.lang.Throwable from label16 to label17 with label16;
    }

    protected void process(org.apache.sshd.common.util.buffer.Buffer) throws java.io.IOException
    {
        org.apache.sshd.common.util.buffer.Buffer r0, $r9;
        int i0, i1, i2, varReplacer6688;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r1;
        org.slf4j.Logger $r2, $r5, $r16;
        boolean $z0;
        long $l3, $l4;
        java.lang.String r3, $r14, $r19, varReplacer6685, varReplacer6686, varReplacer6687, varReplacer6689;
        java.lang.Object[] $r4, $r15;
        org.apache.sshd.server.session.ServerSession $r6, $r17;
        java.lang.Integer $r7, $r8, $r18, $r20;
        java.lang.StringBuilder $r10, $r11, $r12, $r13;

        nop;

        r1 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i0 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: int getInt()>();

        i1 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: int getUByte()>();

        i2 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: int getInt()>();

        $r2 = r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r2.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label01;

        $r16 = r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r15 = newarray (java.lang.Object)[4];

        $r17 = virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r15[0] = $r17;

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r15[1] = $r18;

        $r19 = staticinvoke <org.apache.sshd.common.subsystem.sftp.SftpConstants: java.lang.String getCommandMessageName(int)>(i1);

        $r15[2] = $r19;

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r15[3] = $r20;

        varReplacer6689 = "process({})[length={}, type={}, id={}] processing";

        interfaceinvoke $r16.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(varReplacer6689, $r15);

     label01:
        lookupswitch(i1)
        {
            case 1: goto label02;
            case 3: goto label03;
            case 4: goto label04;
            case 5: goto label05;
            case 6: goto label06;
            case 7: goto label07;
            case 8: goto label08;
            case 9: goto label09;
            case 10: goto label10;
            case 11: goto label11;
            case 12: goto label12;
            case 13: goto label13;
            case 14: goto label14;
            case 15: goto label15;
            case 16: goto label16;
            case 17: goto label17;
            case 18: goto label18;
            case 19: goto label19;
            case 20: goto label20;
            case 21: goto label21;
            case 22: goto label22;
            case 23: goto label23;
            case 200: goto label24;
            default: goto label25;
        };

     label02:
        virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doInit(org.apache.sshd.common.util.buffer.Buffer,int)>(r0, i2);

        goto label26;

     label03:
        virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doOpen(org.apache.sshd.common.util.buffer.Buffer,int)>(r0, i2);

        goto label26;

     label04:
        virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doClose(org.apache.sshd.common.util.buffer.Buffer,int)>(r0, i2);

        goto label26;

     label05:
        virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doRead(org.apache.sshd.common.util.buffer.Buffer,int)>(r0, i2);

        goto label26;

     label06:
        virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doWrite(org.apache.sshd.common.util.buffer.Buffer,int)>(r0, i2);

        goto label26;

     label07:
        virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doLStat(org.apache.sshd.common.util.buffer.Buffer,int)>(r0, i2);

        goto label26;

     label08:
        virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doFStat(org.apache.sshd.common.util.buffer.Buffer,int)>(r0, i2);

        goto label26;

     label09:
        virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doSetStat(org.apache.sshd.common.util.buffer.Buffer,int)>(r0, i2);

        goto label26;

     label10:
        virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doFSetStat(org.apache.sshd.common.util.buffer.Buffer,int)>(r0, i2);

        goto label26;

     label11:
        virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doOpenDir(org.apache.sshd.common.util.buffer.Buffer,int)>(r0, i2);

        goto label26;

     label12:
        virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doReadDir(org.apache.sshd.common.util.buffer.Buffer,int)>(r0, i2);

        goto label26;

     label13:
        virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doRemove(org.apache.sshd.common.util.buffer.Buffer,int)>(r0, i2);

        goto label26;

     label14:
        virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doMakeDirectory(org.apache.sshd.common.util.buffer.Buffer,int)>(r0, i2);

        goto label26;

     label15:
        virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doRemoveDirectory(org.apache.sshd.common.util.buffer.Buffer,int)>(r0, i2);

        goto label26;

     label16:
        virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doRealPath(org.apache.sshd.common.util.buffer.Buffer,int)>(r0, i2);

        goto label26;

     label17:
        virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doStat(org.apache.sshd.common.util.buffer.Buffer,int)>(r0, i2);

        goto label26;

     label18:
        virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doRename(org.apache.sshd.common.util.buffer.Buffer,int)>(r0, i2);

        goto label26;

     label19:
        virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doReadLink(org.apache.sshd.common.util.buffer.Buffer,int)>(r0, i2);

        goto label26;

     label20:
        virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doSymLink(org.apache.sshd.common.util.buffer.Buffer,int)>(r0, i2);

        goto label26;

     label21:
        virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doLink(org.apache.sshd.common.util.buffer.Buffer,int)>(r0, i2);

        goto label26;

     label22:
        virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doBlock(org.apache.sshd.common.util.buffer.Buffer,int)>(r0, i2);

        goto label26;

     label23:
        virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doUnblock(org.apache.sshd.common.util.buffer.Buffer,int)>(r0, i2);

        goto label26;

     label24:
        virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doExtended(org.apache.sshd.common.util.buffer.Buffer,int)>(r0, i2);

        goto label26;

     label25:
        r3 = staticinvoke <org.apache.sshd.common.subsystem.sftp.SftpConstants: java.lang.String getCommandMessageName(int)>(i1);

        $r5 = r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r4 = newarray (java.lang.Object)[4];

        $r6 = virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r4[0] = $r6;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r4[1] = $r7;

        $r4[2] = r3;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r4[3] = $r8;

        varReplacer6686 = "process({})[length={}, type={}, id={}] unknown command";

        interfaceinvoke $r5.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object[])>(varReplacer6686, $r4);

        $r9 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        varReplacer6685 = "Command ";

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6685);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        varReplacer6687 = " is unsupported or not implemented";

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6687);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer6688 = 8;

        virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,int,java.lang.String)>($r9, i2, varReplacer6688, $r14);

     label26:
        if i1 == 1 goto label27;

        $l3 = r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: long requestsCount>;

        $l4 = $l3 + 1L;

        r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: long requestsCount> = $l4;

     label27:
        return;
    }

    protected void doExtended(org.apache.sshd.common.util.buffer.Buffer, int) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        org.apache.sshd.common.util.buffer.Buffer r1;
        int i0;
        java.lang.String $r2;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r1 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r1.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

        virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void executeExtendedCommand(org.apache.sshd.common.util.buffer.Buffer,int,java.lang.String)>(r1, i0, $r2);

        return;
    }

    protected void executeExtendedCommand(org.apache.sshd.common.util.buffer.Buffer, int, java.lang.String) throws java.io.IOException
    {
        java.lang.String r0, r1, $r10, varReplacer6690, varReplacer6691, varReplacer6692, varReplacer6693, varReplacer6694, varReplacer6695, varReplacer6696, varReplacer6697, varReplacer6698, varReplacer6700, varReplacer6701, varReplacer6702, varReplacer6703;
        int $i0, i1, varReplacer6699;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r2;
        org.apache.sshd.common.util.buffer.Buffer r3, $r5;
        org.slf4j.Logger $r4, $r11;
        java.lang.StringBuilder $r6, $r7, $r8, $r9;
        org.apache.sshd.server.session.ServerSession $r12;
        byte b2;

        nop;

        r2 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r3 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i1 := @parameter1: int;

        r0 := @parameter2: java.lang.String;

        r1 = r0;

        b2 = -1;

        $i0 = virtualinvoke r1.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case -1161240687: goto label02;
            case -1112167852: goto label07;
            case -1083777256: goto label01;
            case 190205634: goto label10;
            case 383309304: goto label06;
            case 1105918973: goto label05;
            case 1171377490: goto label09;
            case 1459012354: goto label04;
            case 1459079380: goto label03;
            case 1889522103: goto label08;
            default: goto label11;
        };

     label01:
        varReplacer6690 = "text-seek";

        $z8 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer6690);

        if $z8 == 0 goto label11;

        b2 = 0;

        goto label11;

     label02:
        varReplacer6702 = "version-select";

        $z10 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer6702);

        if $z10 == 0 goto label11;

        b2 = 1;

        goto label11;

     label03:
        varReplacer6695 = "copy-file";

        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer6695);

        if $z2 == 0 goto label11;

        b2 = 2;

        goto label11;

     label04:
        varReplacer6696 = "copy-data";

        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer6696);

        if $z3 == 0 goto label11;

        b2 = 3;

        goto label11;

     label05:
        varReplacer6698 = "md5-hash";

        $z5 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer6698);

        if $z5 == 0 goto label11;

        b2 = 4;

        goto label11;

     label06:
        varReplacer6697 = "md5-hash-handle";

        $z6 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer6697);

        if $z6 == 0 goto label11;

        b2 = 5;

        goto label11;

     label07:
        varReplacer6691 = "check-file-handle";

        $z9 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer6691);

        if $z9 == 0 goto label11;

        b2 = 6;

        goto label11;

     label08:
        varReplacer6694 = "check-file-name";

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer6694);

        if $z0 == 0 goto label11;

        b2 = 7;

        goto label11;

     label09:
        varReplacer6692 = "fsync@openssh.com";

        $z4 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer6692);

        if $z4 == 0 goto label11;

        b2 = 8;

        goto label11;

     label10:
        varReplacer6700 = "space-available";

        $z7 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer6700);

        if $z7 == 0 goto label11;

        b2 = 9;

     label11:
        tableswitch(b2)
        {
            case 0: goto label12;
            case 1: goto label13;
            case 2: goto label14;
            case 3: goto label15;
            case 4: goto label16;
            case 5: goto label16;
            case 6: goto label17;
            case 7: goto label17;
            case 8: goto label18;
            case 9: goto label19;
            default: goto label20;
        };

     label12:
        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doTextSeek(org.apache.sshd.common.util.buffer.Buffer,int)>(r3, i1);

        goto label22;

     label13:
        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doVersionSelect(org.apache.sshd.common.util.buffer.Buffer,int)>(r3, i1);

        goto label22;

     label14:
        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doCopyFile(org.apache.sshd.common.util.buffer.Buffer,int)>(r3, i1);

        goto label22;

     label15:
        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doCopyData(org.apache.sshd.common.util.buffer.Buffer,int)>(r3, i1);

        goto label22;

     label16:
        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doMD5Hash(org.apache.sshd.common.util.buffer.Buffer,int,java.lang.String)>(r3, i1, r0);

        goto label22;

     label17:
        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doCheckFileHash(org.apache.sshd.common.util.buffer.Buffer,int,java.lang.String)>(r3, i1, r0);

        goto label22;

     label18:
        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doOpenSSHFsync(org.apache.sshd.common.util.buffer.Buffer,int)>(r3, i1);

        goto label22;

     label19:
        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doSpaceAvailable(org.apache.sshd.common.util.buffer.Buffer,int)>(r3, i1);

        goto label22;

     label20:
        $r4 = r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z1 = interfaceinvoke $r4.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z1 == 0 goto label21;

        $r11 = r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r12 = virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        varReplacer6701 = "executeExtendedCommand({}) received unsupported SSH_FXP_EXTENDED({})";

        interfaceinvoke $r11.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>(varReplacer6701, $r12, r0);

     label21:
        $r5 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r3);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        varReplacer6703 = "Command SSH_FXP_EXTENDED(";

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6703);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        varReplacer6693 = ") is unsupported or not implemented";

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6693);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer6699 = 8;

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,int,java.lang.String)>($r5, i1, varReplacer6699, $r10);

     label22:
        return;
    }

    protected void doSpaceAvailable(org.apache.sshd.common.util.buffer.Buffer, int) throws java.io.IOException
    {
        org.apache.sshd.common.util.buffer.Buffer r0, $r6;
        java.lang.String r1;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r2;
        int i0, varReplacer6704;
        org.apache.sshd.common.subsystem.sftp.extensions.SpaceAvailableExtensionInfo r3;
        long $l1;
        java.lang.Throwable $r4, r5;
        java.lang.Exception $r7;

        nop;

        r2 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i0 := @parameter1: int;

        r1 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

     label1:
        r3 = virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.common.subsystem.sftp.extensions.SpaceAvailableExtensionInfo doSpaceAvailable(int,java.lang.String)>(i0, r1);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r5 = $r4;

        $r6 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        $r7 = (java.lang.Exception) r5;

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,java.lang.Exception)>($r6, i0, $r7);

        return;

     label4:
        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void clear()>();

        varReplacer6704 = -55;

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putByte(byte)>(varReplacer6704);

        $l1 = (long) i0;

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putInt(long)>($l1);

        staticinvoke <org.apache.sshd.common.subsystem.sftp.extensions.SpaceAvailableExtensionInfo: void encode(org.apache.sshd.common.util.buffer.Buffer,org.apache.sshd.common.subsystem.sftp.extensions.SpaceAvailableExtensionInfo)>(r0, r3);

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void send(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    protected org.apache.sshd.common.subsystem.sftp.extensions.SpaceAvailableExtensionInfo doSpaceAvailable(int, java.lang.String) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        java.lang.String r1, $r11, $r12, varReplacer6705, varReplacer6706;
        java.nio.file.Path r2;
        org.slf4j.Logger $r3, $r5, $r8, $r14;
        boolean $z0, $z1;
        java.nio.file.FileStore r4;
        org.apache.sshd.common.subsystem.sftp.extensions.SpaceAvailableExtensionInfo $r6;
        java.lang.Object[] $r7, $r13;
        org.apache.sshd.server.session.ServerSession $r9, $r15;
        int i0;
        java.lang.Integer $r10, $r16;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.nio.file.Path resolveNormalizedLocation(java.lang.String)>(r1);

        $r3 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r3.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r14 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r13 = newarray (java.lang.Object)[4];

        $r15 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r13[0] = $r15;

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r13[1] = $r16;

        $r13[2] = r1;

        $r13[3] = r2;

        varReplacer6705 = "doSpaceAvailable({})[id={}] path={}[{}]";

        interfaceinvoke $r14.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(varReplacer6705, $r13);

     label1:
        r4 = staticinvoke <java.nio.file.Files: java.nio.file.FileStore getFileStore(java.nio.file.Path)>(r2);

        $r5 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z1 = interfaceinvoke $r5.<org.slf4j.Logger: boolean isTraceEnabled()>();

        if $z1 == 0 goto label2;

        $r8 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r7 = newarray (java.lang.Object)[6];

        $r9 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r7[0] = $r9;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r7[1] = $r10;

        $r7[2] = r1;

        $r7[3] = r2;

        $r11 = virtualinvoke r4.<java.nio.file.FileStore: java.lang.String name()>();

        $r7[4] = $r11;

        $r12 = virtualinvoke r4.<java.nio.file.FileStore: java.lang.String type()>();

        $r7[5] = $r12;

        varReplacer6706 = "doSpaceAvailable({})[id={}] path={}[{}] - {}[{}]";

        interfaceinvoke $r8.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object[])>(varReplacer6706, $r7);

     label2:
        $r6 = new org.apache.sshd.common.subsystem.sftp.extensions.SpaceAvailableExtensionInfo;

        specialinvoke $r6.<org.apache.sshd.common.subsystem.sftp.extensions.SpaceAvailableExtensionInfo: void <init>(java.nio.file.FileStore)>(r4);

        return $r6;
    }

    protected void doTextSeek(org.apache.sshd.common.util.buffer.Buffer, int) throws java.io.IOException
    {
        org.apache.sshd.common.util.buffer.Buffer r0, $r3, $r6;
        java.lang.String r1, varReplacer6708;
        long l0;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r2;
        int i1, varReplacer6707;
        java.lang.Throwable $r4, r5;
        java.lang.Exception $r7;

        nop;

        r2 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i1 := @parameter1: int;

        r1 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

        l0 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: long getLong()>();

     label1:
        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doTextSeek(int,java.lang.String,long)>(i1, r1, l0);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r5 = $r4;

        $r6 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        $r7 = (java.lang.Exception) r5;

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,java.lang.Exception)>($r6, i1, $r7);

        return;

     label4:
        $r3 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        varReplacer6707 = 0;

        varReplacer6708 = "";

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,int,java.lang.String)>($r3, i1, varReplacer6707, varReplacer6708);

        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    protected void doTextSeek(int, java.lang.String, long) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        java.lang.String r1, $r13, varReplacer6709, varReplacer6710, varReplacer6711;
        java.util.Map $r2;
        java.lang.Object $r3;
        org.apache.sshd.server.subsystem.sftp.Handle r4, $r6;
        org.slf4j.Logger $r5, $r15;
        boolean $z0;
        org.apache.sshd.server.subsystem.sftp.FileHandle r7;
        java.lang.UnsupportedOperationException $r8;
        java.lang.StringBuilder $r9, $r10, $r11, $r12;
        java.lang.Object[] $r14;
        org.apache.sshd.server.session.ServerSession $r16;
        int i0;
        java.lang.Integer $r17;
        long l1;
        java.lang.Long $r18;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        l1 := @parameter2: long;

        $r2 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map handles>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (org.apache.sshd.server.subsystem.sftp.Handle) $r3;

        $r5 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r5.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r15 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r14 = newarray (java.lang.Object)[5];

        $r16 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r14[0] = $r16;

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r14[1] = $r17;

        $r14[2] = r1;

        $r14[3] = r4;

        $r18 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        $r14[4] = $r18;

        varReplacer6711 = "doTextSeek({})[id={}] SSH_FXP_EXTENDED(text-seek) (handle={}[{}], line={})";

        interfaceinvoke $r15.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(varReplacer6711, $r14);

     label1:
        $r6 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.subsystem.sftp.Handle validateHandle(java.lang.String,org.apache.sshd.server.subsystem.sftp.Handle,java.lang.Class)>(r1, r4, class "Lorg/apache/sshd/server/subsystem/sftp/FileHandle;");

        r7 = (org.apache.sshd.server.subsystem.sftp.FileHandle) $r6;

        $r8 = new java.lang.UnsupportedOperationException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        varReplacer6710 = "doTextSeek(";

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6710);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        varReplacer6709 = ")";

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6709);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r13);

        throw $r8;
    }

    protected void doOpenSSHFsync(org.apache.sshd.common.util.buffer.Buffer, int) throws java.io.IOException
    {
        org.apache.sshd.common.util.buffer.Buffer r0, $r3, $r6;
        java.lang.String r1, varReplacer6713;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r2;
        int i0, varReplacer6712;
        java.lang.Throwable $r4, r5;
        java.lang.Exception $r7;

        nop;

        r2 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i0 := @parameter1: int;

        r1 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

     label1:
        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doOpenSSHFsync(int,java.lang.String)>(i0, r1);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r5 = $r4;

        $r6 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        $r7 = (java.lang.Exception) r5;

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,java.lang.Exception)>($r6, i0, $r7);

        return;

     label4:
        $r3 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        varReplacer6712 = 0;

        varReplacer6713 = "";

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,int,java.lang.String)>($r3, i0, varReplacer6712, varReplacer6713);

        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    protected void doOpenSSHFsync(int, java.lang.String) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        java.lang.String r1, varReplacer6715;
        java.util.Map $r2;
        java.lang.Object $r3;
        org.apache.sshd.server.subsystem.sftp.Handle r4, $r6;
        org.slf4j.Logger $r5, $r10;
        boolean $z0;
        org.apache.sshd.server.subsystem.sftp.FileHandle r7;
        java.nio.channels.FileChannel r8;
        java.lang.Object[] $r9;
        org.apache.sshd.server.session.ServerSession $r11;
        int i0, varReplacer6714;
        java.lang.Integer $r12;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r2 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map handles>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (org.apache.sshd.server.subsystem.sftp.Handle) $r3;

        $r5 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r5.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r10 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r9 = newarray (java.lang.Object)[4];

        $r11 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r9[0] = $r11;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r9[1] = $r12;

        $r9[2] = r1;

        $r9[3] = r4;

        varReplacer6715 = "doOpenSSHFsync({})[id={}] {}[{}]";

        interfaceinvoke $r10.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(varReplacer6715, $r9);

     label1:
        $r6 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.subsystem.sftp.Handle validateHandle(java.lang.String,org.apache.sshd.server.subsystem.sftp.Handle,java.lang.Class)>(r1, r4, class "Lorg/apache/sshd/server/subsystem/sftp/FileHandle;");

        r7 = (org.apache.sshd.server.subsystem.sftp.FileHandle) $r6;

        r8 = virtualinvoke r7.<org.apache.sshd.server.subsystem.sftp.FileHandle: java.nio.channels.FileChannel getFileChannel()>();

        varReplacer6714 = 0;

        virtualinvoke r8.<java.nio.channels.FileChannel: void force(boolean)>(varReplacer6714);

        return;
    }

    protected void doCheckFileHash(org.apache.sshd.common.util.buffer.Buffer, int, java.lang.String) throws java.io.IOException
    {
        org.apache.sshd.common.util.buffer.Buffer r0, $r9;
        java.lang.String r1, r2, r5, varReplacer6717;
        java.lang.String[] r3;
        long l0, l1, $l4;
        int i2, i3, varReplacer6716, varReplacer6718;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r4;
        java.util.List $r6;
        java.lang.Exception $r7, r8;

        nop;

        r4 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i3 := @parameter1: int;

        r5 := @parameter2: java.lang.String;

        r1 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

        r2 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

        varReplacer6716 = 44;

        r3 = staticinvoke <org.apache.sshd.common.util.GenericUtils: java.lang.String[] split(java.lang.String,char)>(r2, varReplacer6716);

        l0 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: long getLong()>();

        l1 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: long getLong()>();

        i2 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: int getInt()>();

     label1:
        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void clear()>();

        varReplacer6718 = -55;

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putByte(byte)>(varReplacer6718);

        $l4 = (long) i3;

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putInt(long)>($l4);

        varReplacer6717 = "check-file";

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putString(java.lang.String)>(varReplacer6717);

        $r6 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r3);

        virtualinvoke r4.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doCheckFileHash(int,java.lang.String,java.lang.String,java.util.Collection,long,long,int,org.apache.sshd.common.util.buffer.Buffer)>(i3, r5, r1, $r6, l0, l1, i2, r0);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        r8 = $r7;

        $r9 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        virtualinvoke r4.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,java.lang.Exception)>($r9, i3, r8);

        return;

     label4:
        virtualinvoke r4.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void send(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected void doCheckFileHash(int, java.lang.String, java.lang.String, java.util.Collection, long, long, int, org.apache.sshd.common.util.buffer.Buffer) throws java.lang.Exception
    {
        java.lang.String r0, $r1, r3, $r12, $r17, $r25, r31, varReplacer6719, varReplacer6720, varReplacer6721, varReplacer6722;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r2;
        java.nio.file.LinkOption[] $r4;
        java.util.Collection r5;
        java.lang.Object[] $r6;
        int i0, i3, $i4, i5, i6, varReplacer6723;
        long l1, l2;
        org.apache.sshd.common.util.buffer.Buffer r9;
        java.lang.Object $r10, $r19;
        java.nio.file.NotDirectoryException $r11;
        java.nio.file.FileSystemLoopException $r13;
        java.lang.StringBuilder $r14, $r15, $r16, $r22, $r23, $r24;
        java.util.Map $r18;
        org.apache.sshd.server.subsystem.sftp.Handle $r20, r26;
        java.nio.file.AccessDeniedException $r21;
        org.apache.sshd.server.subsystem.sftp.FileHandle r27;
        java.nio.file.Path r28;
        org.apache.sshd.common.digest.BuiltinDigests r29;
        java.util.Iterator r30;

        nop;

        r2 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r5 := @parameter3: java.util.Collection;

        l1 := @parameter4: long;

        l2 := @parameter5: long;

        i3 := @parameter6: int;

        r9 := @parameter7: org.apache.sshd.common.util.buffer.Buffer;

        $r1 = "check-file-handle";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);

        if $z0 == 0 goto label2;

        $r18 = r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map handles>;

        $r19 = interfaceinvoke $r18.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        r26 = (org.apache.sshd.server.subsystem.sftp.Handle) $r19;

        $r20 = virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.subsystem.sftp.Handle validateHandle(java.lang.String,org.apache.sshd.server.subsystem.sftp.Handle,java.lang.Class)>(r3, r26, class "Lorg/apache/sshd/server/subsystem/sftp/FileHandle;");

        r27 = (org.apache.sshd.server.subsystem.sftp.FileHandle) $r20;

        r28 = virtualinvoke r27.<org.apache.sshd.server.subsystem.sftp.FileHandle: java.nio.file.Path getFile()>();

        i5 = virtualinvoke r27.<org.apache.sshd.server.subsystem.sftp.FileHandle: int getAccessMask()>();

        $i4 = i5 & 1;

        if $i4 != 0 goto label1;

        $r21 = new java.nio.file.AccessDeniedException;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        varReplacer6721 = "File not opened for read: ";

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6721);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r28);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<java.nio.file.AccessDeniedException: void <init>(java.lang.String)>($r25);

        throw $r21;

     label1:
        goto label6;

     label2:
        r28 = virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.nio.file.Path resolveFile(java.lang.String)>(r3);

        i6 = 0;

     label3:
        $z1 = staticinvoke <java.nio.file.Files: boolean isSymbolicLink(java.nio.file.Path)>(r28);

        if $z1 == 0 goto label4;

        if i6 >= 127 goto label4;

        r28 = staticinvoke <java.nio.file.Files: java.nio.file.Path readSymbolicLink(java.nio.file.Path)>(r28);

        i6 = i6 + 1;

        goto label3;

     label4:
        $z2 = staticinvoke <java.nio.file.Files: boolean isSymbolicLink(java.nio.file.Path)>(r28);

        if $z2 == 0 goto label5;

        $r13 = new java.nio.file.FileSystemLoopException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        varReplacer6719 = " yields a circular or too long chain of symlinks";

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6719);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.nio.file.FileSystemLoopException: void <init>(java.lang.String)>($r17);

        throw $r13;

     label5:
        varReplacer6723 = 0;

        $r4 = staticinvoke <org.apache.sshd.common.util.io.IoUtils: java.nio.file.LinkOption[] getLinkOptions(boolean)>(varReplacer6723);

        $z3 = staticinvoke <java.nio.file.Files: boolean isDirectory(java.nio.file.Path,java.nio.file.LinkOption[])>(r28, $r4);

        if $z3 == 0 goto label6;

        $r11 = new java.nio.file.NotDirectoryException;

        $r12 = interfaceinvoke r28.<java.nio.file.Path: java.lang.String toString()>();

        specialinvoke $r11.<java.nio.file.NotDirectoryException: void <init>(java.lang.String)>($r12);

        throw $r11;

     label6:
        $r6 = newarray (java.lang.Object)[0];

        varReplacer6722 = "No hash algorithms specified";

        staticinvoke <org.apache.sshd.common.util.ValidateUtils: java.util.Collection checkNotNullAndNotEmpty(java.util.Collection,java.lang.String,java.lang.Object[])>(r5, varReplacer6722, $r6);

        r29 = null;

        r30 = interfaceinvoke r5.<java.util.Collection: java.util.Iterator iterator()>();

     label7:
        $z5 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label9;

        $r10 = interfaceinvoke r30.<java.util.Iterator: java.lang.Object next()>();

        r31 = (java.lang.String) $r10;

        r29 = staticinvoke <org.apache.sshd.common.digest.BuiltinDigests: org.apache.sshd.common.digest.BuiltinDigests fromFactoryName(java.lang.String)>(r31);

        if r29 == null goto label8;

        $z4 = interfaceinvoke r29.<org.apache.sshd.common.digest.DigestFactory: boolean isSupported()>();

        if $z4 == 0 goto label8;

        goto label9;

     label8:
        goto label7;

     label9:
        varReplacer6720 = "No matching digest factory found for %s";

        staticinvoke <org.apache.sshd.common.util.ValidateUtils: java.lang.Object checkNotNull(java.lang.Object,java.lang.String,java.lang.Object)>(r29, varReplacer6720, r5);

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doCheckFileHash(int,java.nio.file.Path,org.apache.sshd.common.NamedFactory,long,long,int,org.apache.sshd.common.util.buffer.Buffer)>(i0, r28, r29, l1, l2, i3, r9);

        return;
    }

    protected void doCheckFileHash(int, java.nio.file.Path, org.apache.sshd.common.NamedFactory, long, long, int, org.apache.sshd.common.util.buffer.Buffer) throws java.lang.Exception
    {
        long l0, l2, $l5, l6, $l16, $l21, l25, l26;
        byte $b1, $b3, $b7, $b8, $b11, $b17, $b27;
        int i4, $i9, $i10, $i12, $i13, $i14, i15, $i18, $i19, $i20, $i22, $i23, i24, i28, i29, i30, i31, varReplacer6725, varReplacer6726, varReplacer6729, varReplacer6732, varReplacer6734, varReplacer6736, varReplacer6737;
        org.apache.sshd.common.NamedFactory r0;
        org.apache.sshd.common.util.buffer.Buffer r2;
        java.lang.String $r3, $r20, $r21, $r28, $r29, varReplacer6724, varReplacer6727, varReplacer6728, varReplacer6730, varReplacer6731, varReplacer6733, varReplacer6735;
        java.nio.file.Path r4;
        java.nio.ByteBuffer r5, r41, r43;
        java.nio.file.OpenOption[] $r6;
        java.nio.channels.FileChannel r7;
        java.lang.Object $r9;
        byte[] r11, $r37, r38, r42;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r12;
        org.slf4j.Logger $r13, $r15, $r22, $r24;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.Object[] $r14, $r23;
        org.apache.sshd.server.session.ServerSession $r16, $r25;
        java.lang.Integer $r17;
        java.lang.Long $r18, $r19, $r26, $r27;
        java.lang.Throwable $r31, r32, r33, $r34, $r35, $r36, r39, r44, r45;
        org.apache.sshd.common.digest.Digest r40;

        nop;

        r12 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        i24 := @parameter0: int;

        r4 := @parameter1: java.nio.file.Path;

        r0 := @parameter2: org.apache.sshd.common.NamedFactory;

        l0 := @parameter3: long;

        l2 := @parameter4: long;

        i4 := @parameter5: int;

        r2 := @parameter6: org.apache.sshd.common.util.buffer.Buffer;

        $b1 = l0 cmp 0L;

        if $b1 < 0 goto label01;

        $z2 = 1;

        goto label02;

     label01:
        $z2 = 0;

     label02:
        varReplacer6735 = "Invalid start offset: %d";

        staticinvoke <org.apache.sshd.common.util.ValidateUtils: void checkTrue(boolean,java.lang.String,long)>($z2, varReplacer6735, l0);

        $b3 = l2 cmp 0L;

        if $b3 < 0 goto label03;

        $z3 = 1;

        goto label04;

     label03:
        $z3 = 0;

     label04:
        varReplacer6730 = "Invalid length: %d";

        staticinvoke <org.apache.sshd.common.util.ValidateUtils: void checkTrue(boolean,java.lang.String,long)>($z3, varReplacer6730, l2);

        if i4 == 0 goto label05;

        if i4 < 256 goto label06;

     label05:
        $z4 = 1;

        goto label07;

     label06:
        $z4 = 0;

     label07:
        $l5 = (long) i4;

        varReplacer6733 = "Invalid block size: %d";

        staticinvoke <org.apache.sshd.common.util.ValidateUtils: void checkTrue(boolean,java.lang.String,long)>($z4, varReplacer6733, $l5);

        varReplacer6731 = "No digest factory provided";

        staticinvoke <org.apache.sshd.common.util.ValidateUtils: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(r0, varReplacer6731);

        $r3 = interfaceinvoke r0.<org.apache.sshd.common.NamedFactory: java.lang.String getName()>();

        virtualinvoke r2.<org.apache.sshd.common.util.buffer.Buffer: void putString(java.lang.String)>($r3);

        l25 = l2;

        l6 = staticinvoke <java.nio.file.Files: long size(java.nio.file.Path)>(r4);

        $b7 = l25 cmp 0L;

        if $b7 != 0 goto label08;

        l25 = l6 - l0;

        goto label09;

     label08:
        l26 = l0 + l2;

        $b8 = l26 cmp l6;

        if $b8 <= 0 goto label09;

        l25 = l6 - l0;

     label09:
        $b27 = l25 cmp 0L;

        if $b27 <= 0 goto label10;

        $z5 = 1;

        goto label11;

     label10:
        $z5 = 0;

     label11:
        varReplacer6728 = "Non-positive effective hash data length: %d";

        staticinvoke <org.apache.sshd.common.util.ValidateUtils: void checkTrue(boolean,java.lang.String,long)>($z5, varReplacer6728, l25);

        if i4 != 0 goto label12;

        $i22 = (int) l25;

        varReplacer6737 = 8192;

        $i23 = staticinvoke <java.lang.Math: int min(int,int)>($i22, varReplacer6737);

        $r37 = newarray (byte)[$i23];

        goto label13;

     label12:
        $i9 = (int) l25;

        $i10 = staticinvoke <java.lang.Math: int min(int,int)>($i9, i4);

        $r37 = newarray (byte)[$i10];

     label13:
        r38 = $r37;

        r5 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>(r38);

        $r6 = <org.apache.sshd.common.util.io.IoUtils: java.nio.file.OpenOption[] EMPTY_OPEN_OPTIONS>;

        r7 = staticinvoke <java.nio.channels.FileChannel: java.nio.channels.FileChannel open(java.nio.file.Path,java.nio.file.OpenOption[])>(r4, $r6);

        r39 = null;

     label14:
        virtualinvoke r7.<java.nio.channels.FileChannel: java.nio.channels.FileChannel position(long)>(l0);

        $r9 = interfaceinvoke r0.<org.apache.sshd.common.NamedFactory: java.lang.Object create()>();

        r40 = (org.apache.sshd.common.digest.Digest) $r9;

        interfaceinvoke r40.<org.apache.sshd.common.digest.Digest: void init()>();

        if i4 != 0 goto label20;

     label15:
        $b17 = l25 cmp 0L;

        if $b17 <= 0 goto label18;

        $i19 = lengthof r38;

        $i18 = (int) l25;

        i28 = staticinvoke <java.lang.Math: int min(int,int)>($i19, $i18);

        r41 = r5;

        $i20 = lengthof r38;

        if i28 >= $i20 goto label16;

        varReplacer6725 = 0;

        r41 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[],int,int)>(r38, varReplacer6725, i28);

     label16:
        virtualinvoke r41.<java.nio.ByteBuffer: java.nio.Buffer clear()>();

        i29 = virtualinvoke r7.<java.nio.channels.FileChannel: int read(java.nio.ByteBuffer)>(r41);

        if i29 >= 0 goto label17;

        goto label18;

     label17:
        $l21 = (long) i29;

        l25 = l25 - $l21;

        varReplacer6729 = 0;

        interfaceinvoke r40.<org.apache.sshd.common.digest.Digest: void update(byte[],int,int)>(r38, varReplacer6729, i29);

        goto label15;

     label18:
        r42 = interfaceinvoke r40.<org.apache.sshd.common.digest.Digest: byte[] digest()>();

        $r22 = r12.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z1 = interfaceinvoke $r22.<org.slf4j.Logger: boolean isTraceEnabled()>();

        if $z1 == 0 goto label19;

        $r24 = r12.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r23 = newarray (java.lang.Object)[6];

        $r25 = virtualinvoke r12.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r23[0] = $r25;

        $r23[1] = r4;

        $r26 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r23[2] = $r26;

        $r27 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l2);

        $r23[3] = $r27;

        $r28 = interfaceinvoke r40.<org.apache.sshd.common.digest.Digest: java.lang.String getAlgorithm()>();

        $r23[4] = $r28;

        varReplacer6736 = 58;

        $r29 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: java.lang.String printHex(char,byte[])>(varReplacer6736, r42);

        $r23[5] = $r29;

        varReplacer6727 = "doCheckFileHash({})[{}] offset={}, length={} - algo={}, hash={}";

        interfaceinvoke $r24.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object[])>(varReplacer6727, $r23);

     label19:
        virtualinvoke r2.<org.apache.sshd.common.util.buffer.Buffer: void putBytes(byte[])>(r42);

        goto label25;

     label20:
        i30 = 0;

     label21:
        $b11 = l25 cmp 0L;

        if $b11 <= 0 goto label25;

        $i13 = lengthof r38;

        $i12 = (int) l25;

        i31 = staticinvoke <java.lang.Math: int min(int,int)>($i13, $i12);

        r43 = r5;

        $i14 = lengthof r38;

        if i31 >= $i14 goto label22;

        varReplacer6726 = 0;

        r43 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[],int,int)>(r38, varReplacer6726, i31);

     label22:
        virtualinvoke r43.<java.nio.ByteBuffer: java.nio.Buffer clear()>();

        i15 = virtualinvoke r7.<java.nio.channels.FileChannel: int read(java.nio.ByteBuffer)>(r43);

        if i15 >= 0 goto label23;

        goto label25;

     label23:
        $l16 = (long) i15;

        l25 = l25 - $l16;

        varReplacer6732 = 0;

        interfaceinvoke r40.<org.apache.sshd.common.digest.Digest: void update(byte[],int,int)>(r38, varReplacer6732, i15);

        r11 = interfaceinvoke r40.<org.apache.sshd.common.digest.Digest: byte[] digest()>();

        $r13 = r12.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r13.<org.slf4j.Logger: boolean isTraceEnabled()>();

        if $z0 == 0 goto label24;

        $r15 = r12.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r14 = newarray (java.lang.Object)[7];

        $r16 = virtualinvoke r12.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r14[0] = $r16;

        $r14[1] = r4;

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i30);

        $r14[2] = $r17;

        $r18 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r14[3] = $r18;

        $r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l2);

        $r14[4] = $r19;

        $r20 = interfaceinvoke r40.<org.apache.sshd.common.digest.Digest: java.lang.String getAlgorithm()>();

        $r14[5] = $r20;

        varReplacer6734 = 58;

        $r21 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: java.lang.String printHex(char,byte[])>(varReplacer6734, r11);

        $r14[6] = $r21;

        varReplacer6724 = "doCheckFileHash({})({})[{}] offset={}, length={} - algo={}, hash={}";

        interfaceinvoke $r15.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object[])>(varReplacer6724, $r14);

     label24:
        virtualinvoke r2.<org.apache.sshd.common.util.buffer.Buffer: void putBytes(byte[])>(r11);

        i30 = i30 + 1;

        goto label21;

     label25:
        if r7 == null goto label38;

        if r39 == null goto label29;

     label26:
        virtualinvoke r7.<java.nio.channels.FileChannel: void close()>();

     label27:
        goto label38;

     label28:
        $r36 := @caughtexception;

        r44 = $r36;

        virtualinvoke r39.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r44);

        goto label38;

     label29:
        virtualinvoke r7.<java.nio.channels.FileChannel: void close()>();

        goto label38;

     label30:
        $r35 := @caughtexception;

        r45 = $r35;

        r39 = r45;

        throw r45;

     label31:
        $r34 := @caughtexception;

        r33 = $r34;

     label32:
        if r7 == null goto label37;

        if r39 == null goto label36;

     label33:
        virtualinvoke r7.<java.nio.channels.FileChannel: void close()>();

     label34:
        goto label37;

     label35:
        $r31 := @caughtexception;

        r32 = $r31;

        virtualinvoke r39.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r32);

        goto label37;

     label36:
        virtualinvoke r7.<java.nio.channels.FileChannel: void close()>();

     label37:
        throw r33;

     label38:
        return;

        catch java.lang.Throwable from label26 to label27 with label28;
        catch java.lang.Throwable from label14 to label25 with label30;
        catch java.lang.Throwable from label33 to label34 with label35;
        catch java.lang.Throwable from label30 to label32 with label31;
    }

    protected void doMD5Hash(org.apache.sshd.common.util.buffer.Buffer, int, java.lang.String) throws java.io.IOException
    {
        org.apache.sshd.common.util.buffer.Buffer r0, $r16;
        java.lang.String r1, r4, $r12, $r13, varReplacer6738;
        long l0, l1, $l3;
        byte[] r2, r5;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r3;
        int i2, varReplacer6739, varReplacer6740, varReplacer6741;
        org.slf4j.Logger $r6, $r8;
        boolean $z0;
        java.lang.Object[] $r7;
        org.apache.sshd.server.session.ServerSession $r9;
        java.lang.Long $r10, $r11;
        java.lang.Exception $r14, r15;

        nop;

        r3 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i2 := @parameter1: int;

        r4 := @parameter2: java.lang.String;

        r1 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

        l0 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: long getLong()>();

        l1 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: long getLong()>();

        r2 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: byte[] getBytes()>();

     label1:
        r5 = virtualinvoke r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: byte[] doMD5Hash(int,java.lang.String,java.lang.String,long,long,byte[])>(i2, r4, r1, l0, l1, r2);

        $r6 = r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r6.<org.slf4j.Logger: boolean isTraceEnabled()>();

        if $z0 == 0 goto label2;

        $r8 = r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r7 = newarray (java.lang.Object)[7];

        $r9 = virtualinvoke r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r7[0] = $r9;

        $r7[1] = r4;

        $r7[2] = r1;

        $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r7[3] = $r10;

        $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        $r7[4] = $r11;

        varReplacer6739 = 58;

        $r12 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: java.lang.String printHex(char,byte[])>(varReplacer6739, r2);

        $r7[5] = $r12;

        varReplacer6740 = 58;

        $r13 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: java.lang.String printHex(char,byte[])>(varReplacer6740, r5);

        $r7[6] = $r13;

        varReplacer6738 = "doMD5Hash({})({})[{}] offset={}, length={}, quick-hash={} - hash={}";

        interfaceinvoke $r8.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object[])>(varReplacer6738, $r7);

     label2:
        goto label4;

     label3:
        $r14 := @caughtexception;

        r15 = $r14;

        $r16 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        virtualinvoke r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,java.lang.Exception)>($r16, i2, r15);

        return;

     label4:
        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void clear()>();

        varReplacer6741 = -55;

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putByte(byte)>(varReplacer6741);

        $l3 = (long) i2;

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putInt(long)>($l3);

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putString(java.lang.String)>(r4);

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putBytes(byte[])>(r5);

        virtualinvoke r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void send(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected byte[] doMD5Hash(int, java.lang.String, java.lang.String, long, long, byte[]) throws java.lang.Exception
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        org.slf4j.Logger $r1, $r19;
        boolean $z0, $z1, $z2;
        java.lang.String r2, $r3, r4, $r8, $r17, $r23, varReplacer6742, varReplacer6744;
        java.nio.file.LinkOption[] $r5;
        long l0, l1, l3, l9, l10;
        byte $b2, $b4, $b6;
        int i5, $i7, i8, varReplacer6743, varReplacer6745;
        byte[] r6, $r26;
        java.nio.file.NotDirectoryException $r7;
        java.util.Map $r9;
        java.lang.Object $r10;
        org.apache.sshd.server.subsystem.sftp.Handle $r11, r24;
        org.apache.sshd.server.subsystem.sftp.FileHandle r12;
        java.nio.file.AccessDeniedException $r13;
        java.lang.StringBuilder $r14, $r15, $r16;
        java.lang.Object[] $r18;
        org.apache.sshd.server.session.ServerSession $r20;
        java.lang.Long $r21, $r22;
        java.nio.file.Path r25;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        i5 := @parameter0: int;

        r2 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        l1 := @parameter3: long;

        l0 := @parameter4: long;

        r6 := @parameter5: byte[];

        $r1 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r1.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r19 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r18 = newarray (java.lang.Object)[6];

        $r20 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r18[0] = $r20;

        $r18[1] = r2;

        $r18[2] = r4;

        $r21 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        $r18[3] = $r21;

        $r22 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r18[4] = $r22;

        varReplacer6743 = 58;

        $r23 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: java.lang.String printHex(char,byte[])>(varReplacer6743, r6);

        $r18[5] = $r23;

        varReplacer6744 = "doMD5Hash({})({})[{}] offset={}, length={}, quick-hash={}";

        interfaceinvoke $r19.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(varReplacer6744, $r18);

     label1:
        $r3 = "md5-hash-handle";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2);

        if $z1 == 0 goto label3;

        $r9 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map handles>;

        $r10 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4);

        r24 = (org.apache.sshd.server.subsystem.sftp.Handle) $r10;

        $r11 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.subsystem.sftp.Handle validateHandle(java.lang.String,org.apache.sshd.server.subsystem.sftp.Handle,java.lang.Class)>(r4, r24, class "Lorg/apache/sshd/server/subsystem/sftp/FileHandle;");

        r12 = (org.apache.sshd.server.subsystem.sftp.FileHandle) $r11;

        r25 = virtualinvoke r12.<org.apache.sshd.server.subsystem.sftp.FileHandle: java.nio.file.Path getFile()>();

        i8 = virtualinvoke r12.<org.apache.sshd.server.subsystem.sftp.FileHandle: int getAccessMask()>();

        $i7 = i8 & 1;

        if $i7 != 0 goto label2;

        $r13 = new java.nio.file.AccessDeniedException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        varReplacer6742 = "File not opened for read: ";

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6742);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r25);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.nio.file.AccessDeniedException: void <init>(java.lang.String)>($r17);

        throw $r13;

     label2:
        goto label4;

     label3:
        r25 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.nio.file.Path resolveFile(java.lang.String)>(r4);

        varReplacer6745 = 0;

        $r5 = staticinvoke <org.apache.sshd.common.util.io.IoUtils: java.nio.file.LinkOption[] getLinkOptions(boolean)>(varReplacer6745);

        $z2 = staticinvoke <java.nio.file.Files: boolean isDirectory(java.nio.file.Path,java.nio.file.LinkOption[])>(r25, $r5);

        if $z2 == 0 goto label4;

        $r7 = new java.nio.file.NotDirectoryException;

        $r8 = interfaceinvoke r25.<java.nio.file.Path: java.lang.String toString()>();

        specialinvoke $r7.<java.nio.file.NotDirectoryException: void <init>(java.lang.String)>($r8);

        throw $r7;

     label4:
        l9 = l0;

        l10 = staticinvoke <java.nio.file.Files: long size(java.nio.file.Path)>(r25);

        $b2 = l1 cmp 0L;

        if $b2 != 0 goto label5;

        $b6 = l0 cmp 0L;

        if $b6 != 0 goto label5;

        l9 = l10;

        goto label6;

     label5:
        l3 = l1 + l9;

        $b4 = l3 cmp l10;

        if $b4 <= 0 goto label6;

        l9 = l10 - l1;

     label6:
        $r26 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: byte[] doMD5Hash(int,java.nio.file.Path,long,long,byte[])>(i5, r25, l1, l9, r6);

        return $r26;
    }

    protected byte[] doMD5Hash(int, java.nio.file.Path, long, long, byte[]) throws java.lang.Exception
    {
        long l0, l2, $l4, $l7, $l13, l16, varReplacer6751;
        byte $b1, $b3, $b8, $b14;
        org.apache.sshd.common.digest.BuiltinDigests $r0, $r1, $r28, $r36;
        boolean $z0, $z1, $z2, $z3, z4, z5, $z6;
        int $i5, $i6, $i9, $i10, $i11, i12, i15, i17, i18, varReplacer6747, varReplacer6749, varReplacer6753, varReplacer6754, varReplacer6756, varReplacer6758, varReplacer6759, varReplacer6760;
        byte[] r2, r9, r48;
        java.nio.ByteBuffer r3, r50;
        java.nio.file.Path r4;
        java.lang.Object[] $r5, $r12, $r21;
        java.nio.file.StandardOpenOption $r6;
        java.nio.channels.FileChannel r7;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r10;
        org.slf4j.Logger $r11, $r13, $r22, $r53;
        org.apache.sshd.server.session.ServerSession $r14, $r23;
        java.lang.Long $r15, $r16, $r24, $r25;
        java.lang.Boolean $r17;
        java.lang.String $r18, $r19, $r26, $r27, $r33, $r37, $r40, varReplacer6746, varReplacer6748, varReplacer6750, varReplacer6752, varReplacer6755, varReplacer6757;
        java.lang.StringBuilder $r31, $r32, $r38, $r39, $r54, $r56;
        java.lang.Throwable $r41, r42, r43, $r44, $r45, $r46, r49, r51, r52;
        org.apache.sshd.common.digest.Digest r47;
        java.lang.UnsupportedOperationException $r55;
        java.io.EOFException $r57;
        java.nio.file.OpenOption[] $r58;

        nop;

        r10 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        i15 := @parameter0: int;

        r4 := @parameter1: java.nio.file.Path;

        l0 := @parameter2: long;

        l2 := @parameter3: long;

        r9 := @parameter4: byte[];

        $b1 = l0 cmp 0L;

        if $b1 < 0 goto label01;

        $z2 = 1;

        goto label02;

     label01:
        $z2 = 0;

     label02:
        varReplacer6748 = "Invalid start offset: %d";

        staticinvoke <org.apache.sshd.common.util.ValidateUtils: void checkTrue(boolean,java.lang.String,long)>($z2, varReplacer6748, l0);

        $b3 = l2 cmp 0L;

        if $b3 <= 0 goto label03;

        $z3 = 1;

        goto label04;

     label03:
        $z3 = 0;

     label04:
        varReplacer6746 = "Invalid length: %d";

        staticinvoke <org.apache.sshd.common.util.ValidateUtils: void checkTrue(boolean,java.lang.String,long)>($z3, varReplacer6746, l2);

        $r0 = <org.apache.sshd.common.digest.BuiltinDigests: org.apache.sshd.common.digest.BuiltinDigests md5>;

        $z0 = virtualinvoke $r0.<org.apache.sshd.common.digest.BuiltinDigests: boolean isSupported()>();

        if $z0 != 0 goto label05;

        $r55 = new java.lang.UnsupportedOperationException;

        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();

        $r36 = <org.apache.sshd.common.digest.BuiltinDigests: org.apache.sshd.common.digest.BuiltinDigests md5>;

        $r37 = virtualinvoke $r36.<org.apache.sshd.common.digest.BuiltinDigests: java.lang.String getAlgorithm()>();

        $r38 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        varReplacer6750 = " hash not supported";

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6750);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r55.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r40);

        throw $r55;

     label05:
        $r1 = <org.apache.sshd.common.digest.BuiltinDigests: org.apache.sshd.common.digest.BuiltinDigests md5>;

        r47 = virtualinvoke $r1.<org.apache.sshd.common.digest.BuiltinDigests: org.apache.sshd.common.digest.Digest create()>();

        interfaceinvoke r47.<org.apache.sshd.common.digest.Digest: void init()>();

        l16 = l2;

        varReplacer6751 = 2048L;

        $l4 = staticinvoke <java.lang.Math: long min(long,long)>(l16, varReplacer6751);

        $i5 = (int) $l4;

        r2 = newarray (byte)[$i5];

        r3 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>(r2);

        z4 = 0;

        r48 = null;

        $r5 = newarray (java.nio.file.OpenOption)[1];

        $r6 = <java.nio.file.StandardOpenOption: java.nio.file.StandardOpenOption READ>;

        $r5[0] = $r6;

        $r58 = (java.nio.file.OpenOption[]) $r5;

        r7 = staticinvoke <java.nio.channels.FileChannel: java.nio.channels.FileChannel open(java.nio.file.Path,java.nio.file.OpenOption[])>(r4, $r58);

        r49 = null;

     label06:
        virtualinvoke r7.<java.nio.channels.FileChannel: java.nio.channels.FileChannel position(long)>(l0);

        $i6 = staticinvoke <org.apache.sshd.common.util.NumberUtils: int length(byte[])>(r9);

        if $i6 > 0 goto label07;

        z5 = 1;

        goto label10;

     label07:
        i17 = virtualinvoke r7.<java.nio.channels.FileChannel: int read(java.nio.ByteBuffer)>(r3);

        if i17 >= 0 goto label08;

        $r57 = new java.io.EOFException;

        $r56 = new java.lang.StringBuilder;

        specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();

        varReplacer6752 = "EOF while read initial buffer from ";

        $r31 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6752);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r57.<java.io.EOFException: void <init>(java.lang.String)>($r33);

        throw $r57;

     label08:
        $l7 = (long) i17;

        l16 = l16 - $l7;

        varReplacer6749 = 0;

        interfaceinvoke r47.<org.apache.sshd.common.digest.Digest: void update(byte[],int,int)>(r2, varReplacer6749, i17);

        r48 = interfaceinvoke r47.<org.apache.sshd.common.digest.Digest: byte[] digest()>();

        z5 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r9, r48);

        if z5 == 0 goto label09;

        $b14 = l16 cmp 0L;

        if $b14 <= 0 goto label10;

        $r28 = <org.apache.sshd.common.digest.BuiltinDigests: org.apache.sshd.common.digest.BuiltinDigests md5>;

        r47 = virtualinvoke $r28.<org.apache.sshd.common.digest.BuiltinDigests: org.apache.sshd.common.digest.Digest create()>();

        interfaceinvoke r47.<org.apache.sshd.common.digest.Digest: void init()>();

        varReplacer6747 = 0;

        interfaceinvoke r47.<org.apache.sshd.common.digest.Digest: void update(byte[],int,int)>(r2, varReplacer6747, i17);

        r48 = null;

        goto label10;

     label09:
        $r11 = r10.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z1 = interfaceinvoke $r11.<org.slf4j.Logger: boolean isTraceEnabled()>();

        if $z1 == 0 goto label10;

        $r22 = r10.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r21 = newarray (java.lang.Object)[6];

        $r23 = virtualinvoke r10.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r21[0] = $r23;

        $r21[1] = r4;

        $r24 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r21[2] = $r24;

        $r25 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l2);

        $r21[3] = $r25;

        varReplacer6753 = 58;

        $r26 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: java.lang.String printHex(char,byte[])>(varReplacer6753, r9);

        $r21[4] = $r26;

        varReplacer6758 = 58;

        $r27 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: java.lang.String printHex(char,byte[])>(varReplacer6758, r48);

        $r21[5] = $r27;

        varReplacer6755 = "doMD5Hash({})({}) offset={}, length={} - quick-hash mismatched expected={}, actual={}";

        interfaceinvoke $r22.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object[])>(varReplacer6755, $r21);

     label10:
        if z5 == 0 goto label15;

     label11:
        $b8 = l16 cmp 0L;

        if $b8 <= 0 goto label14;

        $i10 = lengthof r2;

        $i9 = (int) l16;

        i18 = staticinvoke <java.lang.Math: int min(int,int)>($i10, $i9);

        r50 = r3;

        $i11 = lengthof r2;

        if i18 >= $i11 goto label12;

        varReplacer6754 = 0;

        r50 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[],int,int)>(r2, varReplacer6754, i18);

     label12:
        virtualinvoke r50.<java.nio.ByteBuffer: java.nio.Buffer clear()>();

        i12 = virtualinvoke r7.<java.nio.channels.FileChannel: int read(java.nio.ByteBuffer)>(r50);

        if i12 >= 0 goto label13;

        goto label14;

     label13:
        $l13 = (long) i12;

        l16 = l16 - $l13;

        varReplacer6759 = 0;

        interfaceinvoke r47.<org.apache.sshd.common.digest.Digest: void update(byte[],int,int)>(r2, varReplacer6759, i12);

        goto label11;

     label14:
        if r48 != null goto label16;

        r48 = interfaceinvoke r47.<org.apache.sshd.common.digest.Digest: byte[] digest()>();

        goto label16;

     label15:
        r48 = <org.apache.sshd.common.util.GenericUtils: byte[] EMPTY_BYTE_ARRAY>;

     label16:
        if r7 == null goto label29;

        if r49 == null goto label20;

     label17:
        virtualinvoke r7.<java.nio.channels.FileChannel: void close()>();

     label18:
        goto label29;

     label19:
        $r46 := @caughtexception;

        r51 = $r46;

        virtualinvoke r49.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r51);

        goto label29;

     label20:
        virtualinvoke r7.<java.nio.channels.FileChannel: void close()>();

        goto label29;

     label21:
        $r45 := @caughtexception;

        r52 = $r45;

        r49 = r52;

        throw r52;

     label22:
        $r44 := @caughtexception;

        r43 = $r44;

     label23:
        if r7 == null goto label28;

        if r49 == null goto label27;

     label24:
        virtualinvoke r7.<java.nio.channels.FileChannel: void close()>();

     label25:
        goto label28;

     label26:
        $r41 := @caughtexception;

        r42 = $r41;

        virtualinvoke r49.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r42);

        goto label28;

     label27:
        virtualinvoke r7.<java.nio.channels.FileChannel: void close()>();

     label28:
        throw r43;

     label29:
        $r53 = r10.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z6 = interfaceinvoke $r53.<org.slf4j.Logger: boolean isTraceEnabled()>();

        if $z6 == 0 goto label30;

        $r13 = r10.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r12 = newarray (java.lang.Object)[7];

        $r14 = virtualinvoke r10.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r12[0] = $r14;

        $r12[1] = r4;

        $r15 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r12[2] = $r15;

        $r16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l2);

        $r12[3] = $r16;

        $r17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z5);

        $r12[4] = $r17;

        varReplacer6760 = 58;

        $r18 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: java.lang.String printHex(char,byte[])>(varReplacer6760, r9);

        $r12[5] = $r18;

        varReplacer6756 = 58;

        $r19 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: java.lang.String printHex(char,byte[])>(varReplacer6756, r48);

        $r12[6] = $r19;

        varReplacer6757 = "doMD5Hash({})({}) offset={}, length={} - matches={}, quick={} hash={}";

        interfaceinvoke $r13.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object[])>(varReplacer6757, $r12);

     label30:
        return r48;

        catch java.lang.Throwable from label17 to label18 with label19;
        catch java.lang.Throwable from label06 to label16 with label21;
        catch java.lang.Throwable from label24 to label25 with label26;
        catch java.lang.Throwable from label21 to label23 with label22;
    }

    protected void doVersionSelect(org.apache.sshd.common.util.buffer.Buffer, int) throws java.io.IOException
    {
        org.apache.sshd.common.util.buffer.Buffer r0, $r5, $r11, $r13;
        java.lang.String r1, $r9, $r17, varReplacer6764, varReplacer6765, varReplacer6769;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r2;
        org.apache.sshd.server.session.ServerSession r3;
        long $l0;
        byte $b1;
        int i2, $i3, varReplacer6761, varReplacer6762, varReplacer6763, varReplacer6766, varReplacer6767, varReplacer6768;
        java.lang.Boolean r4;
        boolean $z0;
        java.lang.StringBuilder $r6, $r7, $r8, $r14, $r15, $r16;

        nop;

        r2 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i2 := @parameter1: int;

        r1 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

        r3 = virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $l0 = r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: long requestsCount>;

        $b1 = $l0 cmp 0L;

        if $b1 <= 0 goto label1;

        $r13 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        varReplacer6765 = "Version selection not the 1st request for proposal = ";

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6765);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer6767 = 4;

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,int,java.lang.String)>($r13, i2, varReplacer6767, $r17);

        varReplacer6766 = 1;

        interfaceinvoke r3.<org.apache.sshd.server.session.ServerSession: org.apache.sshd.common.future.CloseFuture close(boolean)>(varReplacer6766);

        return;

     label1:
        r4 = virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.lang.Boolean validateProposedVersion(org.apache.sshd.common.util.buffer.Buffer,int,java.lang.String)>(r0, i2, r1);

        if r4 != null goto label2;

        varReplacer6768 = 1;

        interfaceinvoke r3.<org.apache.sshd.server.session.ServerSession: org.apache.sshd.common.future.CloseFuture close(boolean)>(varReplacer6768);

        return;

     label2:
        $z0 = virtualinvoke r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label3;

        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1);

        r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int version> = $i3;

        $r11 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        varReplacer6763 = 0;

        varReplacer6764 = "";

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,int,java.lang.String)>($r11, i2, varReplacer6763, varReplacer6764);

        goto label4;

     label3:
        $r5 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        varReplacer6769 = "Unsupported version ";

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6769);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer6762 = 4;

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,int,java.lang.String)>($r5, i2, varReplacer6762, $r9);

        varReplacer6761 = 1;

        interfaceinvoke r3.<org.apache.sshd.server.session.ServerSession: org.apache.sshd.common.future.CloseFuture close(boolean)>(varReplacer6761);

     label4:
        return;
    }

    protected java.lang.Boolean validateProposedVersion(org.apache.sshd.common.util.buffer.Buffer, int, java.lang.String) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        org.slf4j.Logger $r1, $r9;
        boolean $z0, $z1;
        java.lang.String r2, r5, varReplacer6773;
        int $i0, i2, i3, varReplacer6770, varReplacer6772;
        char c1;
        java.lang.Boolean $r3, $r6, $r7;
        org.apache.sshd.common.util.buffer.Buffer r4;
        java.lang.Object[] $r8;
        org.apache.sshd.server.session.ServerSession $r10;
        java.lang.Integer $r11;
        null_type varReplacer6771;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r4 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i3 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        $r1 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r1.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r9 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r8 = newarray (java.lang.Object)[3];

        $r10 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r8[0] = $r10;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        $r8[1] = $r11;

        $r8[2] = r2;

        varReplacer6773 = "validateProposedVersion({})[id={}] SSH_FXP_EXTENDED(version-select) (version={})";

        interfaceinvoke $r9.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(varReplacer6773, $r8);

     label1:
        $i0 = staticinvoke <org.apache.sshd.common.util.GenericUtils: int length(java.lang.CharSequence)>(r2);

        if $i0 == 1 goto label2;

        $r7 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        return $r7;

     label2:
        varReplacer6772 = 0;

        c1 = virtualinvoke r2.<java.lang.String: char charAt(int)>(varReplacer6772);

        if c1 < 48 goto label3;

        if c1 <= 57 goto label4;

     label3:
        $r3 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        return $r3;

     label4:
        i2 = c1 - 48;

        varReplacer6770 = 4;

        r5 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.lang.String checkVersionCompatibility(org.apache.sshd.common.util.buffer.Buffer,int,int,int)>(r4, i3, i2, varReplacer6770);

        $z1 = staticinvoke <org.apache.sshd.common.util.GenericUtils: boolean isEmpty(java.lang.CharSequence)>(r5);

        if $z1 == 0 goto label5;

        varReplacer6771 = null;

        return varReplacer6771;

     label5:
        $r6 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        return $r6;
    }

    protected java.lang.String checkVersionCompatibility(org.apache.sshd.common.util.buffer.Buffer, int, int, int) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        org.apache.sshd.server.session.ServerSession r1, $r14;
        java.lang.Integer r2, $r15, $r16;
        org.slf4j.Logger $r3, $r13;
        boolean $z0;
        int i0, i1, i2, i3, i4, i5;
        org.apache.sshd.common.util.buffer.Buffer r4, $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10, $r18, $r19, $r20, $r21, $r22;
        java.lang.String $r11, $r23, r24, varReplacer6774, varReplacer6776, varReplacer6777, varReplacer6778, varReplacer6779, varReplacer6780;
        java.lang.Object[] $r12;
        java.lang.IllegalStateException $r17;
        null_type varReplacer6775;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r4 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        i2 := @parameter3: int;

        i4 = 3;

        i5 = 6;

        r24 = <org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.lang.String ALL_SFTP_IMPL>;

        r1 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        varReplacer6774 = "sftp-version";

        r2 = staticinvoke <org.apache.sshd.common.PropertyResolverUtils: java.lang.Integer getInteger(org.apache.sshd.common.PropertyResolver,java.lang.String)>(r1, varReplacer6774);

        if r2 == null goto label3;

        i3 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

        if i3 < 3 goto label1;

        if i3 <= 6 goto label2;

     label1:
        $r17 = new java.lang.IllegalStateException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        varReplacer6780 = "Forced SFTP version (";

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6780);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        varReplacer6779 = ") not within supported values: ";

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6779);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r24);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r23);

        throw $r17;

     label2:
        i5 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

        i4 = i5;

        r24 = virtualinvoke r2.<java.lang.Integer: java.lang.String toString()>();

     label3:
        $r3 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r3.<org.slf4j.Logger: boolean isTraceEnabled()>();

        if $z0 == 0 goto label4;

        $r13 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r12 = newarray (java.lang.Object)[4];

        $r14 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r12[0] = $r14;

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r12[1] = $r15;

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r12[2] = $r16;

        $r12[3] = r24;

        varReplacer6777 = "checkVersionCompatibility({})[id={}] - proposed={}, available={}";

        interfaceinvoke $r13.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object[])>(varReplacer6777, $r12);

     label4:
        if i0 < i4 goto label5;

        if i0 <= i5 goto label6;

     label5:
        $r5 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r4);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        varReplacer6776 = "Proposed version (";

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6776);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        varReplacer6778 = ") not in supported range: ";

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6778);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r24);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,int,java.lang.String)>($r5, i1, i2, $r11);

        varReplacer6775 = null;

        return varReplacer6775;

     label6:
        return r24;
    }

    protected void doBlock(org.apache.sshd.common.util.buffer.Buffer, int) throws java.io.IOException
    {
        org.apache.sshd.common.util.buffer.Buffer r0, $r3, $r6;
        java.lang.String r1, varReplacer6782;
        long l0, l1;
        int i2, i3, varReplacer6781;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r2;
        java.lang.Throwable $r4, r5;
        java.lang.Exception $r7;

        nop;

        r2 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i3 := @parameter1: int;

        r1 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

        l0 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: long getLong()>();

        l1 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: long getLong()>();

        i2 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: int getInt()>();

     label1:
        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doBlock(int,java.lang.String,long,long,int)>(i3, r1, l0, l1, i2);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r5 = $r4;

        $r6 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        $r7 = (java.lang.Exception) r5;

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,java.lang.Exception)>($r6, i3, $r7);

        return;

     label4:
        $r3 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        varReplacer6781 = 0;

        varReplacer6782 = "";

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,int,java.lang.String)>($r3, i3, varReplacer6781, varReplacer6782);

        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    protected void doBlock(int, java.lang.String, long, long, int) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        java.lang.String r1, $r16, varReplacer6784;
        java.util.Map $r2;
        java.lang.Object $r3;
        org.apache.sshd.server.subsystem.sftp.Handle r4, $r6;
        org.slf4j.Logger $r5, $r11;
        boolean $z0;
        org.apache.sshd.server.subsystem.sftp.FileHandle r7;
        org.apache.sshd.server.subsystem.sftp.SftpEventListener r8;
        org.apache.sshd.server.session.ServerSession r9, $r12;
        long l0, l1;
        int i2, i3;
        java.lang.Object[] $r10;
        java.lang.Integer $r13;
        java.lang.Long $r14, $r15;
        java.lang.Throwable $r17, r18;
        null_type varReplacer6783;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        i3 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        l1 := @parameter3: long;

        i2 := @parameter4: int;

        $r2 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map handles>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (org.apache.sshd.server.subsystem.sftp.Handle) $r3;

        $r5 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r5.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r11 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r10 = newarray (java.lang.Object)[7];

        $r12 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r10[0] = $r12;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        $r10[1] = $r13;

        $r10[2] = r1;

        $r10[3] = r4;

        $r14 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r10[4] = $r14;

        $r15 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        $r10[5] = $r15;

        $r16 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i2);

        $r10[6] = $r16;

        varReplacer6784 = "doBlock({})[id={}] SSH_FXP_BLOCK (handle={}[{}], offset={}, length={}, mask=0x{})";

        interfaceinvoke $r11.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(varReplacer6784, $r10);

     label1:
        $r6 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.subsystem.sftp.Handle validateHandle(java.lang.String,org.apache.sshd.server.subsystem.sftp.Handle,java.lang.Class)>(r1, r4, class "Lorg/apache/sshd/server/subsystem/sftp/FileHandle;");

        r7 = (org.apache.sshd.server.subsystem.sftp.FileHandle) $r6;

        r8 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.subsystem.sftp.SftpEventListener getSftpEventListenerProxy()>();

        r9 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        interfaceinvoke r8.<org.apache.sshd.server.subsystem.sftp.SftpEventListener: void blocking(org.apache.sshd.server.session.ServerSession,java.lang.String,org.apache.sshd.server.subsystem.sftp.FileHandle,long,long,int)>(r9, r1, r7, l0, l1, i2);

     label2:
        virtualinvoke r7.<org.apache.sshd.server.subsystem.sftp.FileHandle: void lock(long,long,int)>(l0, l1, i2);

        varReplacer6783 = null;

        interfaceinvoke r8.<org.apache.sshd.server.subsystem.sftp.SftpEventListener: void blocked(org.apache.sshd.server.session.ServerSession,java.lang.String,org.apache.sshd.server.subsystem.sftp.FileHandle,long,long,int,java.lang.Throwable)>(r9, r1, r7, l0, l1, i2, varReplacer6783);

     label3:
        goto label5;

     label4:
        $r17 := @caughtexception;

        r18 = $r17;

        interfaceinvoke r8.<org.apache.sshd.server.subsystem.sftp.SftpEventListener: void blocked(org.apache.sshd.server.session.ServerSession,java.lang.String,org.apache.sshd.server.subsystem.sftp.FileHandle,long,long,int,java.lang.Throwable)>(r9, r1, r7, l0, l1, i2, r18);

        throw r18;

     label5:
        return;

        catch java.io.IOException from label2 to label3 with label4;
        catch java.lang.RuntimeException from label2 to label3 with label4;
    }

    protected void doUnblock(org.apache.sshd.common.util.buffer.Buffer, int) throws java.io.IOException
    {
        org.apache.sshd.common.util.buffer.Buffer r0, $r3, $r7;
        java.lang.String r1, varReplacer6785;
        long l0, l1;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r2;
        int i2;
        boolean z0;
        java.lang.Throwable $r5, r6;
        byte $b4;
        java.lang.Exception $r8;

        nop;

        r2 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i2 := @parameter1: int;

        r1 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

        l0 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: long getLong()>();

        l1 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: long getLong()>();

     label1:
        z0 = virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: boolean doUnblock(int,java.lang.String,long,long)>(i2, r1, l0, l1);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r6 = $r5;

        $r7 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        $r8 = (java.lang.Exception) r6;

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,java.lang.Exception)>($r7, i2, $r8);

        return;

     label4:
        $r3 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        if z0 == 0 goto label5;

        $b4 = 0;

        goto label6;

     label5:
        $b4 = 31;

     label6:
        varReplacer6785 = "";

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,int,java.lang.String)>($r3, i2, $b4, varReplacer6785);

        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    protected boolean doUnblock(int, java.lang.String, long, long) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        java.lang.String r1, varReplacer6786;
        java.util.Map $r2;
        java.lang.Object $r3;
        org.apache.sshd.server.subsystem.sftp.Handle r4, $r6;
        org.slf4j.Logger $r5, $r12;
        boolean $z0, z2;
        org.apache.sshd.server.subsystem.sftp.FileHandle r7;
        org.apache.sshd.server.subsystem.sftp.SftpEventListener r8;
        org.apache.sshd.server.session.ServerSession r9, $r13;
        long l0, l1;
        java.lang.Boolean $r10;
        java.lang.Object[] $r11;
        int i2;
        java.lang.Integer $r14;
        java.lang.Long $r15, $r16;
        java.lang.Throwable $r17, r18;
        null_type varReplacer6787, varReplacer6788;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        i2 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        l1 := @parameter3: long;

        $r2 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map handles>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (org.apache.sshd.server.subsystem.sftp.Handle) $r3;

        $r5 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r5.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r12 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r11 = newarray (java.lang.Object)[6];

        $r13 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r11[0] = $r13;

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r11[1] = $r14;

        $r11[2] = r1;

        $r11[3] = r4;

        $r15 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r11[4] = $r15;

        $r16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        $r11[5] = $r16;

        varReplacer6786 = "doUnblock({})[id={}] SSH_FXP_UNBLOCK (handle={}[{}], offset={}, length={})";

        interfaceinvoke $r12.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(varReplacer6786, $r11);

     label1:
        $r6 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.subsystem.sftp.Handle validateHandle(java.lang.String,org.apache.sshd.server.subsystem.sftp.Handle,java.lang.Class)>(r1, r4, class "Lorg/apache/sshd/server/subsystem/sftp/FileHandle;");

        r7 = (org.apache.sshd.server.subsystem.sftp.FileHandle) $r6;

        r8 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.subsystem.sftp.SftpEventListener getSftpEventListenerProxy()>();

        r9 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        interfaceinvoke r8.<org.apache.sshd.server.subsystem.sftp.SftpEventListener: void unblocking(org.apache.sshd.server.session.ServerSession,java.lang.String,org.apache.sshd.server.subsystem.sftp.FileHandle,long,long)>(r9, r1, r7, l0, l1);

     label2:
        z2 = virtualinvoke r7.<org.apache.sshd.server.subsystem.sftp.FileHandle: boolean unlock(long,long)>(l0, l1);

        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z2);

        varReplacer6788 = null;

        interfaceinvoke r8.<org.apache.sshd.server.subsystem.sftp.SftpEventListener: void unblocked(org.apache.sshd.server.session.ServerSession,java.lang.String,org.apache.sshd.server.subsystem.sftp.FileHandle,long,long,java.lang.Boolean,java.lang.Throwable)>(r9, r1, r7, l0, l1, $r10, varReplacer6788);

     label3:
        return z2;

     label4:
        $r17 := @caughtexception;

        r18 = $r17;

        varReplacer6787 = null;

        interfaceinvoke r8.<org.apache.sshd.server.subsystem.sftp.SftpEventListener: void unblocked(org.apache.sshd.server.session.ServerSession,java.lang.String,org.apache.sshd.server.subsystem.sftp.FileHandle,long,long,java.lang.Boolean,java.lang.Throwable)>(r9, r1, r7, l0, l1, varReplacer6787, r18);

        throw r18;

        catch java.io.IOException from label2 to label3 with label4;
        catch java.lang.RuntimeException from label2 to label3 with label4;
    }

    protected void doLink(org.apache.sshd.common.util.buffer.Buffer, int) throws java.io.IOException
    {
        org.apache.sshd.common.util.buffer.Buffer r0, $r5, $r13;
        java.lang.String r1, r2, varReplacer6789, varReplacer6791;
        boolean z0, $z1;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r3;
        org.slf4j.Logger $r4, $r7;
        int i0, varReplacer6790;
        java.lang.Object[] $r6;
        org.apache.sshd.server.session.ServerSession $r8;
        java.lang.Integer $r9;
        java.lang.Boolean $r10;
        java.lang.Throwable $r11, r12;
        java.lang.Exception $r14;

        nop;

        r3 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i0 := @parameter1: int;

        r1 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

        r2 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

        z0 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: boolean getBoolean()>();

     label1:
        $r4 = r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z1 = interfaceinvoke $r4.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z1 == 0 goto label2;

        $r7 = r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r6 = newarray (java.lang.Object)[5];

        $r8 = virtualinvoke r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r6[0] = $r8;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r6[1] = $r9;

        $r6[2] = r2;

        $r6[3] = r1;

        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        $r6[4] = $r10;

        varReplacer6789 = "doLink({})[id={}] SSH_FXP_LINK linkpath={}, targetpath={}, symlink={}";

        interfaceinvoke $r7.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(varReplacer6789, $r6);

     label2:
        virtualinvoke r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doLink(int,java.lang.String,java.lang.String,boolean)>(i0, r1, r2, z0);

     label3:
        goto label5;

     label4:
        $r11 := @caughtexception;

        r12 = $r11;

        $r13 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        $r14 = (java.lang.Exception) r12;

        virtualinvoke r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,java.lang.Exception)>($r13, i0, $r14);

        return;

     label5:
        $r5 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        varReplacer6790 = 0;

        varReplacer6791 = "";

        virtualinvoke r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,int,java.lang.String)>($r5, i0, varReplacer6790, varReplacer6791);

        return;

        catch java.io.IOException from label1 to label3 with label4;
        catch java.lang.RuntimeException from label1 to label3 with label4;
    }

    protected void doLink(int, java.lang.String, java.lang.String, boolean) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        int i0;
        java.lang.String r1, r2;
        boolean z0;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void createLink(int,java.lang.String,java.lang.String,boolean)>(i0, r1, r2, z0);

        return;
    }

    protected void doSymLink(org.apache.sshd.common.util.buffer.Buffer, int) throws java.io.IOException
    {
        org.apache.sshd.common.util.buffer.Buffer r0, $r5, $r12;
        java.lang.String r1, r2, varReplacer6792, varReplacer6794;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r3;
        org.slf4j.Logger $r4, $r7;
        boolean $z0;
        int i0, varReplacer6793;
        java.lang.Object[] $r6;
        org.apache.sshd.server.session.ServerSession $r8;
        java.lang.Integer $r9;
        java.lang.Throwable $r10, r11;
        java.lang.Exception $r13;

        nop;

        r3 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i0 := @parameter1: int;

        r1 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

        r2 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

     label1:
        $r4 = r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r4.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label2;

        $r7 = r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r6 = newarray (java.lang.Object)[4];

        $r8 = virtualinvoke r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r6[0] = $r8;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r6[1] = $r9;

        $r6[2] = r1;

        $r6[3] = r2;

        varReplacer6792 = "doSymLink({})[id={}] SSH_FXP_SYMLINK linkpath={}, targetpath={}";

        interfaceinvoke $r7.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(varReplacer6792, $r6);

     label2:
        virtualinvoke r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doSymLink(int,java.lang.String,java.lang.String)>(i0, r1, r2);

     label3:
        goto label5;

     label4:
        $r10 := @caughtexception;

        r11 = $r10;

        $r12 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        $r13 = (java.lang.Exception) r11;

        virtualinvoke r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,java.lang.Exception)>($r12, i0, $r13);

        return;

     label5:
        $r5 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        varReplacer6793 = 0;

        varReplacer6794 = "";

        virtualinvoke r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,int,java.lang.String)>($r5, i0, varReplacer6793, varReplacer6794);

        return;

        catch java.io.IOException from label1 to label3 with label4;
        catch java.lang.RuntimeException from label1 to label3 with label4;
    }

    protected void doSymLink(int, java.lang.String, java.lang.String) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        int i0, varReplacer6795;
        java.lang.String r1, r2;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        varReplacer6795 = 1;

        virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void createLink(int,java.lang.String,java.lang.String,boolean)>(i0, r1, r2, varReplacer6795);

        return;
    }

    protected void createLink(int, java.lang.String, java.lang.String, boolean) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        java.lang.String r1, r3, varReplacer6797;
        java.nio.file.Path r2, r6;
        java.lang.String[] $r4;
        java.nio.file.FileSystem $r5;
        org.slf4j.Logger $r7, $r14;
        boolean $z0, z1;
        org.apache.sshd.server.subsystem.sftp.SftpEventListener r8;
        org.apache.sshd.server.session.ServerSession r9, $r15;
        java.nio.file.attribute.FileAttribute[] $r11;
        java.lang.Object[] $r13;
        int i0;
        java.lang.Integer $r16;
        java.lang.Boolean $r17;
        java.lang.Throwable $r18, r19;
        null_type varReplacer6796;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        i0 := @parameter0: int;

        r3 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        z1 := @parameter3: boolean;

        r2 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.nio.file.Path resolveFile(java.lang.String)>(r1);

        $r5 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.nio.file.FileSystem fileSystem>;

        $r4 = newarray (java.lang.String)[0];

        r6 = virtualinvoke $r5.<java.nio.file.FileSystem: java.nio.file.Path getPath(java.lang.String,java.lang.String[])>(r3, $r4);

        $r7 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r7.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r14 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r13 = newarray (java.lang.Object)[7];

        $r15 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r13[0] = $r15;

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r13[1] = $r16;

        $r13[2] = r1;

        $r13[3] = r2;

        $r13[4] = r3;

        $r13[5] = r6;

        $r17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z1);

        $r13[6] = $r17;

        varReplacer6797 = "createLink({})[id={}], linkpath={}[{}], targetpath={}[{}], symlink={})";

        interfaceinvoke $r14.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(varReplacer6797, $r13);

     label1:
        r8 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.subsystem.sftp.SftpEventListener getSftpEventListenerProxy()>();

        r9 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        interfaceinvoke r8.<org.apache.sshd.server.subsystem.sftp.SftpEventListener: void linking(org.apache.sshd.server.session.ServerSession,java.nio.file.Path,java.nio.file.Path,boolean)>(r9, r2, r6, z1);

     label2:
        if z1 == 0 goto label3;

        $r11 = newarray (java.nio.file.attribute.FileAttribute)[0];

        staticinvoke <java.nio.file.Files: java.nio.file.Path createSymbolicLink(java.nio.file.Path,java.nio.file.Path,java.nio.file.attribute.FileAttribute[])>(r2, r6, $r11);

        goto label4;

     label3:
        staticinvoke <java.nio.file.Files: java.nio.file.Path createLink(java.nio.file.Path,java.nio.file.Path)>(r2, r6);

     label4:
        varReplacer6796 = null;

        interfaceinvoke r8.<org.apache.sshd.server.subsystem.sftp.SftpEventListener: void linked(org.apache.sshd.server.session.ServerSession,java.nio.file.Path,java.nio.file.Path,boolean,java.lang.Throwable)>(r9, r2, r6, z1, varReplacer6796);

     label5:
        goto label7;

     label6:
        $r18 := @caughtexception;

        r19 = $r18;

        interfaceinvoke r8.<org.apache.sshd.server.subsystem.sftp.SftpEventListener: void linked(org.apache.sshd.server.session.ServerSession,java.nio.file.Path,java.nio.file.Path,boolean,java.lang.Throwable)>(r9, r2, r6, z1, r19);

        throw r19;

     label7:
        return;

        catch java.io.IOException from label2 to label5 with label6;
        catch java.lang.RuntimeException from label2 to label5 with label6;
    }

    protected void doReadLink(org.apache.sshd.common.util.buffer.Buffer, int) throws java.io.IOException
    {
        org.apache.sshd.common.util.buffer.Buffer r0, $r5, $r12;
        java.lang.String r1, r4, varReplacer6798;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r2;
        org.slf4j.Logger $r3, $r7;
        boolean $z0;
        int i0;
        java.lang.Object[] $r6;
        org.apache.sshd.server.session.ServerSession $r8;
        java.lang.Integer $r9;
        java.lang.Throwable $r10, r11;
        java.lang.Exception $r13;

        nop;

        r2 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i0 := @parameter1: int;

        r1 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

     label1:
        $r3 = r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r3.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label2;

        $r7 = r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r6 = newarray (java.lang.Object)[3];

        $r8 = virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r6[0] = $r8;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r6[1] = $r9;

        $r6[2] = r1;

        varReplacer6798 = "doReadLink({})[id={}] SSH_FXP_READLINK path={}";

        interfaceinvoke $r7.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(varReplacer6798, $r6);

     label2:
        r4 = virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.lang.String doReadLink(int,java.lang.String)>(i0, r1);

     label3:
        goto label5;

     label4:
        $r10 := @caughtexception;

        r11 = $r10;

        $r12 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        $r13 = (java.lang.Exception) r11;

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,java.lang.Exception)>($r12, i0, $r13);

        return;

     label5:
        $r5 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendLink(org.apache.sshd.common.util.buffer.Buffer,int,java.lang.String)>($r5, i0, r4);

        return;

        catch java.io.IOException from label1 to label3 with label4;
        catch java.lang.RuntimeException from label1 to label3 with label4;
    }

    protected java.lang.String doReadLink(int, java.lang.String) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        java.lang.String r1, $r5, varReplacer6799;
        java.nio.file.Path r2, r3;
        org.slf4j.Logger $r4, $r7;
        boolean $z0;
        java.lang.Object[] $r6;
        org.apache.sshd.server.session.ServerSession $r8;
        int i0;
        java.lang.Integer $r9;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.nio.file.Path resolveFile(java.lang.String)>(r1);

        r3 = staticinvoke <java.nio.file.Files: java.nio.file.Path readSymbolicLink(java.nio.file.Path)>(r2);

        $r4 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r4.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r7 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r6 = newarray (java.lang.Object)[5];

        $r8 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r6[0] = $r8;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r6[1] = $r9;

        $r6[2] = r1;

        $r6[3] = r2;

        $r6[4] = r3;

        varReplacer6799 = "doReadLink({})[id={}] path={}[{}]: {}";

        interfaceinvoke $r7.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(varReplacer6799, $r6);

     label1:
        $r5 = interfaceinvoke r3.<java.nio.file.Path: java.lang.String toString()>();

        return $r5;
    }

    protected void doRename(org.apache.sshd.common.util.buffer.Buffer, int) throws java.io.IOException
    {
        org.apache.sshd.common.util.buffer.Buffer r0, $r4, $r7;
        java.lang.String r1, r2, varReplacer6801;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r3;
        int $i0, i1, i2, varReplacer6800;
        java.lang.Throwable $r5, r6;
        java.lang.Exception $r8;

        nop;

        r3 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i1 := @parameter1: int;

        r1 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

        r2 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

        i2 = 0;

        $i0 = r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int version>;

        if $i0 < 5 goto label1;

        i2 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: int getInt()>();

     label1:
        virtualinvoke r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doRename(int,java.lang.String,java.lang.String,int)>(i1, r1, r2, i2);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r6 = $r5;

        $r7 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        $r8 = (java.lang.Exception) r6;

        virtualinvoke r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,java.lang.Exception)>($r7, i1, $r8);

        return;

     label4:
        $r4 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        varReplacer6800 = 0;

        varReplacer6801 = "";

        virtualinvoke r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,int,java.lang.String)>($r4, i1, varReplacer6800, varReplacer6801);

        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    protected void doRename(int, java.lang.String, java.lang.String, int) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        org.slf4j.Logger $r1, $r8;
        boolean $z0;
        int i0, i1, $i2, $i3;
        java.lang.String r2, r3, $r11, varReplacer6802;
        java.nio.file.StandardCopyOption $r5, $r6;
        java.lang.Object[] $r7;
        org.apache.sshd.server.session.ServerSession $r9;
        java.lang.Integer $r10;
        java.lang.Object r12;
        java.util.ArrayList $r13;
        java.util.Collection $r14, $r15, $r16;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        i1 := @parameter0: int;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        $r1 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r1.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r8 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r7 = newarray (java.lang.Object)[5];

        $r9 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r7[0] = $r9;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r7[1] = $r10;

        $r7[2] = r2;

        $r7[3] = r3;

        $r11 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r7[4] = $r11;

        varReplacer6802 = "doRename({})[id={}] SSH_FXP_RENAME (oldPath={}, newPath={}, flags=0x{})";

        interfaceinvoke $r8.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(varReplacer6802, $r7);

     label1:
        r12 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        if i0 == 0 goto label3;

        $r13 = new java.util.ArrayList;

        specialinvoke $r13.<java.util.ArrayList: void <init>()>();

        r12 = $r13;

        $i2 = i0 & 2;

        if $i2 != 2 goto label2;

        $r6 = <java.nio.file.StandardCopyOption: java.nio.file.StandardCopyOption ATOMIC_MOVE>;

        $r14 = (java.util.Collection) r12;

        interfaceinvoke $r14.<java.util.Collection: boolean add(java.lang.Object)>($r6);

     label2:
        $i3 = i0 & 1;

        if $i3 != 1 goto label3;

        $r5 = <java.nio.file.StandardCopyOption: java.nio.file.StandardCopyOption REPLACE_EXISTING>;

        $r15 = (java.util.Collection) r12;

        interfaceinvoke $r15.<java.util.Collection: boolean add(java.lang.Object)>($r5);

     label3:
        $r16 = (java.util.Collection) r12;

        virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doRename(int,java.lang.String,java.lang.String,java.util.Collection)>(i1, r2, r3, $r16);

        return;
    }

    protected void doRename(int, java.lang.String, java.lang.String, java.util.Collection) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        java.lang.String r1, r3;
        java.nio.file.Path r2, r4;
        org.apache.sshd.server.subsystem.sftp.SftpEventListener r5;
        org.apache.sshd.server.session.ServerSession r6;
        java.util.Collection r7;
        boolean $z0;
        int $i0, i1;
        java.nio.file.CopyOption[] $r8, $r15;
        java.lang.Object[] $r9;
        java.lang.Throwable $r13, r14;
        null_type varReplacer6803;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        i1 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r7 := @parameter3: java.util.Collection;

        r2 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.nio.file.Path resolveFile(java.lang.String)>(r1);

        r4 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.nio.file.Path resolveFile(java.lang.String)>(r3);

        r5 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.subsystem.sftp.SftpEventListener getSftpEventListenerProxy()>();

        r6 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        interfaceinvoke r5.<org.apache.sshd.server.subsystem.sftp.SftpEventListener: void moving(org.apache.sshd.server.session.ServerSession,java.nio.file.Path,java.nio.file.Path,java.util.Collection)>(r6, r2, r4, r7);

     label1:
        $z0 = staticinvoke <org.apache.sshd.common.util.GenericUtils: boolean isEmpty(java.util.Collection)>(r7);

        if $z0 == 0 goto label2;

        $r15 = <org.apache.sshd.common.util.io.IoUtils: java.nio.file.CopyOption[] EMPTY_COPY_OPTIONS>;

        goto label3;

     label2:
        $i0 = interfaceinvoke r7.<java.util.Collection: int size()>();

        $r8 = newarray (java.nio.file.CopyOption)[$i0];

        $r9 = interfaceinvoke r7.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r8);

        $r15 = (java.nio.file.CopyOption[]) $r9;

     label3:
        staticinvoke <java.nio.file.Files: java.nio.file.Path move(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>(r2, r4, $r15);

        varReplacer6803 = null;

        interfaceinvoke r5.<org.apache.sshd.server.subsystem.sftp.SftpEventListener: void moved(org.apache.sshd.server.session.ServerSession,java.nio.file.Path,java.nio.file.Path,java.util.Collection,java.lang.Throwable)>(r6, r2, r4, r7, varReplacer6803);

     label4:
        goto label6;

     label5:
        $r13 := @caughtexception;

        r14 = $r13;

        interfaceinvoke r5.<org.apache.sshd.server.subsystem.sftp.SftpEventListener: void moved(org.apache.sshd.server.session.ServerSession,java.nio.file.Path,java.nio.file.Path,java.util.Collection,java.lang.Throwable)>(r6, r2, r4, r7, r14);

        throw r14;

     label6:
        return;

        catch java.io.IOException from label1 to label4 with label5;
        catch java.lang.RuntimeException from label1 to label4 with label5;
    }

    protected void doCopyData(org.apache.sshd.common.util.buffer.Buffer, int) throws java.io.IOException
    {
        org.apache.sshd.common.util.buffer.Buffer r0, $r4, $r7;
        java.lang.String r1, r2, varReplacer6805;
        long l0, l1, l2;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r3;
        int i3, varReplacer6804;
        java.lang.Throwable $r5, r6;
        java.lang.Exception $r8;

        nop;

        r3 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i3 := @parameter1: int;

        r1 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

        l0 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: long getLong()>();

        l1 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: long getLong()>();

        r2 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

        l2 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: long getLong()>();

     label1:
        virtualinvoke r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doCopyData(int,java.lang.String,long,long,java.lang.String,long)>(i3, r1, l0, l1, r2, l2);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r6 = $r5;

        $r7 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        $r8 = (java.lang.Exception) r6;

        virtualinvoke r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,java.lang.Exception)>($r7, i3, $r8);

        return;

     label4:
        $r4 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        varReplacer6804 = 0;

        varReplacer6805 = "";

        virtualinvoke r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,int,java.lang.String)>($r4, i3, varReplacer6804, varReplacer6805);

        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    protected void doCopyData(int, java.lang.String, long, long, java.lang.String, long) throws java.io.IOException
    {
        java.lang.String r0, r1, $r20, $r32, $r44, $r49, $r54, varReplacer6806, varReplacer6807, varReplacer6808, varReplacer6809, varReplacer6810, varReplacer6811, varReplacer6813, varReplacer6814, varReplacer6815, varReplacer6816, varReplacer6817, varReplacer6820, varReplacer6821, varReplacer6822, varReplacer6823, varReplacer6824, varReplacer6825, varReplacer6826, varReplacer6827;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r2;
        java.util.Map $r3, $r6;
        java.lang.Object $r4, $r7;
        org.apache.sshd.server.subsystem.sftp.Handle r5, r8, $r10, $r14, $r62;
        org.slf4j.Logger $r9, $r56;
        org.apache.sshd.server.subsystem.sftp.FileHandle r11, $r63, r64;
        java.nio.file.Path r12, $r13;
        int i0, $i1, i8, $i9, $i11, $i12, $i13, $i14, i15, i22, i31, varReplacer6812, varReplacer6818, varReplacer6819;
        long l2, l5, $l16, $l17, $l18, l23, l24, l25, l26, l28, l29;
        byte $b3, $b4, $b6, $b7, $b10, $b19, $b20, $b21, $b27, $b30;
        java.io.EOFException $r15;
        java.lang.StringBuilder $r16, $r17, $r18, $r19, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r46, $r47, $r48, $r51, $r52, $r53;
        java.lang.IllegalArgumentException $r21, $r33;
        java.nio.file.AccessDeniedException $r45, $r50;
        java.lang.Object[] $r55;
        org.apache.sshd.server.session.ServerSession $r57;
        java.lang.Integer $r58;
        java.lang.Long $r59, $r60, $r61;
        byte[] r65;

        nop;

        r2 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        i22 := @parameter0: int;

        r0 := @parameter1: java.lang.String;

        l23 := @parameter2: long;

        l2 := @parameter3: long;

        r1 := @parameter4: java.lang.String;

        l24 := @parameter5: long;

        z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        $r3 = r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map handles>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r5 = (org.apache.sshd.server.subsystem.sftp.Handle) $r4;

        if z0 == 0 goto label01;

        $r62 = r5;

        goto label02;

     label01:
        $r6 = r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map handles>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r62 = (org.apache.sshd.server.subsystem.sftp.Handle) $r7;

     label02:
        r8 = $r62;

        $r9 = r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z1 = interfaceinvoke $r9.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z1 == 0 goto label03;

        $r56 = r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r55 = newarray (java.lang.Object)[10];

        $r57 = virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r55[0] = $r57;

        $r58 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i22);

        $r55[1] = $r58;

        $r55[2] = "copy-data";

        $r55[3] = r0;

        $r55[4] = r5;

        $r59 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l23);

        $r55[5] = $r59;

        $r60 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l2);

        $r55[6] = $r60;

        $r55[7] = r1;

        $r55[8] = r8;

        $r61 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l24);

        $r55[9] = $r61;

        varReplacer6808 = "doCopyData({})[id={}] SSH_FXP_EXTENDED[{}] read={}[{}], read-offset={}, read-length={}, write={}[{}], write-offset={})";

        interfaceinvoke $r56.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(varReplacer6808, $r55);

     label03:
        $r10 = virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.subsystem.sftp.Handle validateHandle(java.lang.String,org.apache.sshd.server.subsystem.sftp.Handle,java.lang.Class)>(r0, r5, class "Lorg/apache/sshd/server/subsystem/sftp/FileHandle;");

        r11 = (org.apache.sshd.server.subsystem.sftp.FileHandle) $r10;

        r12 = virtualinvoke r11.<org.apache.sshd.server.subsystem.sftp.FileHandle: java.nio.file.Path getFile()>();

        i0 = virtualinvoke r11.<org.apache.sshd.server.subsystem.sftp.FileHandle: int getAccessMask()>();

        $i1 = i0 & 1;

        if $i1 == 1 goto label04;

        $r50 = new java.nio.file.AccessDeniedException;

        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();

        varReplacer6813 = "File not opened for read: ";

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6813);

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r12);

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r50.<java.nio.file.AccessDeniedException: void <init>(java.lang.String)>($r54);

        throw $r50;

     label04:
        $b3 = l2 cmp 0L;

        if $b3 < 0 goto label05;

        $z2 = 1;

        goto label06;

     label05:
        $z2 = 0;

     label06:
        varReplacer6820 = "Invalid read length: %d";

        staticinvoke <org.apache.sshd.common.util.ValidateUtils: void checkTrue(boolean,java.lang.String,long)>($z2, varReplacer6820, l2);

        $b4 = l23 cmp 0L;

        if $b4 < 0 goto label07;

        $z3 = 1;

        goto label08;

     label07:
        $z3 = 0;

     label08:
        varReplacer6822 = "Invalid read offset: %d";

        staticinvoke <org.apache.sshd.common.util.ValidateUtils: void checkTrue(boolean,java.lang.String,long)>($z3, varReplacer6822, l23);

        $r13 = virtualinvoke r11.<org.apache.sshd.server.subsystem.sftp.FileHandle: java.nio.file.Path getFile()>();

        l5 = staticinvoke <java.nio.file.Files: long size(java.nio.file.Path)>($r13);

        l25 = l2;

        $b6 = l25 cmp 0L;

        if $b6 != 0 goto label09;

        l25 = l5 - l23;

        goto label10;

     label09:
        l26 = l23 + l25;

        $b7 = l26 cmp l5;

        if $b7 <= 0 goto label10;

        l25 = l5 - l23;

     label10:
        $b27 = l25 cmp 0L;

        if $b27 <= 0 goto label11;

        $z4 = 1;

        goto label12;

     label11:
        $z4 = 0;

     label12:
        varReplacer6825 = "Non-positive effective copy data length: %d";

        staticinvoke <org.apache.sshd.common.util.ValidateUtils: void checkTrue(boolean,java.lang.String,long)>($z4, varReplacer6825, l25);

        if z0 == 0 goto label13;

        $r63 = r11;

        goto label14;

     label13:
        $r14 = virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.subsystem.sftp.Handle validateHandle(java.lang.String,org.apache.sshd.server.subsystem.sftp.Handle,java.lang.Class)>(r1, r8, class "Lorg/apache/sshd/server/subsystem/sftp/FileHandle;");

        $r63 = (org.apache.sshd.server.subsystem.sftp.FileHandle) $r14;

     label14:
        r64 = $r63;

        i8 = virtualinvoke r64.<org.apache.sshd.server.subsystem.sftp.FileHandle: int getAccessMask()>();

        $i9 = i8 & 2;

        if $i9 == 2 goto label15;

        $r45 = new java.nio.file.AccessDeniedException;

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        varReplacer6806 = "File not opened for write: ";

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6806);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r11);

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r45.<java.nio.file.AccessDeniedException: void <init>(java.lang.String)>($r49);

        throw $r45;

     label15:
        $b10 = l24 cmp 0L;

        if $b10 < 0 goto label16;

        $z5 = 1;

        goto label17;

     label16:
        $z5 = 0;

     label17:
        varReplacer6810 = "Invalid write offset: %d";

        staticinvoke <org.apache.sshd.common.util.ValidateUtils: void checkTrue(boolean,java.lang.String,long)>($z5, varReplacer6810, l24);

        if z0 == 0 goto label20;

        l28 = l23 + l25;

        $b19 = l28 cmp l5;

        if $b19 <= 0 goto label18;

        l28 = l5;

     label18:
        l29 = l24 + l25;

        $b20 = l29 cmp l23;

        if $b20 <= 0 goto label19;

        $r33 = new java.lang.IllegalArgumentException;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        varReplacer6815 = "Write range end [";

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6815);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l24);

        varReplacer6807 = "-";

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6807);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l29);

        varReplacer6826 = "] overlaps with read range [";

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6826);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l23);

        varReplacer6814 = "-";

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6814);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l28);

        varReplacer6823 = "]";

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6823);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r33.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r44);

        throw $r33;

     label19:
        $b21 = l28 cmp l24;

        if $b21 <= 0 goto label20;

        $r21 = new java.lang.IllegalArgumentException;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        varReplacer6811 = "Read range end [";

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6811);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l23);

        varReplacer6827 = "-";

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6827);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l28);

        varReplacer6816 = "] overlaps with write range [";

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6816);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l24);

        varReplacer6809 = "-";

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6809);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l29);

        varReplacer6817 = "]";

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6817);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r32);

        throw $r21;

     label20:
        $i11 = (int) l25;

        varReplacer6812 = 8192;

        $i12 = staticinvoke <java.lang.Math: int min(int,int)>(varReplacer6812, $i11);

        r65 = newarray (byte)[$i12];

     label21:
        $b30 = l25 cmp 0L;

        if $b30 <= 0 goto label23;

        $i14 = lengthof r65;

        $i13 = (int) l25;

        i15 = staticinvoke <java.lang.Math: int min(int,int)>($i14, $i13);

        varReplacer6818 = 0;

        i31 = virtualinvoke r11.<org.apache.sshd.server.subsystem.sftp.FileHandle: int read(byte[],int,int,long)>(r65, varReplacer6818, i15, l23);

        if i31 >= 0 goto label22;

        $r15 = new java.io.EOFException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        varReplacer6821 = "Premature EOF while still remaining ";

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6821);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l25);

        varReplacer6824 = " bytes";

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6824);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.io.EOFException: void <init>(java.lang.String)>($r20);

        throw $r15;

     label22:
        varReplacer6819 = 0;

        virtualinvoke r64.<org.apache.sshd.server.subsystem.sftp.FileHandle: void write(byte[],int,int,long)>(r65, varReplacer6819, i31, l24);

        $l16 = (long) i31;

        l25 = l25 - $l16;

        $l17 = (long) i31;

        l23 = l23 + $l17;

        $l18 = (long) i31;

        l24 = l24 + $l18;

        goto label21;

     label23:
        return;
    }

    protected void doCopyFile(org.apache.sshd.common.util.buffer.Buffer, int) throws java.io.IOException
    {
        org.apache.sshd.common.util.buffer.Buffer r0, $r4, $r7;
        java.lang.String r1, r2, varReplacer6829;
        boolean z0;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r3;
        int i0, varReplacer6828;
        java.lang.Throwable $r5, r6;
        java.lang.Exception $r8;

        nop;

        r3 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i0 := @parameter1: int;

        r1 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

        r2 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

        z0 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: boolean getBoolean()>();

     label1:
        virtualinvoke r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doCopyFile(int,java.lang.String,java.lang.String,boolean)>(i0, r1, r2, z0);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r6 = $r5;

        $r7 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        $r8 = (java.lang.Exception) r6;

        virtualinvoke r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,java.lang.Exception)>($r7, i0, $r8);

        return;

     label4:
        $r4 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        varReplacer6828 = 0;

        varReplacer6829 = "";

        virtualinvoke r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,int,java.lang.String)>($r4, i0, varReplacer6828, varReplacer6829);

        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    protected void doCopyFile(int, java.lang.String, java.lang.String, boolean) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        org.slf4j.Logger $r1, $r9;
        boolean $z0, z1;
        int i0;
        java.lang.String r2, r3, varReplacer6830;
        java.nio.file.StandardCopyOption $r4;
        java.lang.Object[] $r8;
        org.apache.sshd.server.session.ServerSession $r10;
        java.lang.Integer $r11;
        java.lang.Boolean $r12;
        java.util.List $r13;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        i0 := @parameter0: int;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        z1 := @parameter3: boolean;

        $r1 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r1.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r9 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r8 = newarray (java.lang.Object)[6];

        $r10 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r8[0] = $r10;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r8[1] = $r11;

        $r8[2] = "copy-file";

        $r8[3] = r2;

        $r8[4] = r3;

        $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z1);

        $r8[5] = $r12;

        varReplacer6830 = "doCopyFile({})[id={}] SSH_FXP_EXTENDED[{}] (src={}, dst={}, overwrite=0x{})";

        interfaceinvoke $r9.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(varReplacer6830, $r8);

     label1:
        if z1 == 0 goto label2;

        $r4 = <java.nio.file.StandardCopyOption: java.nio.file.StandardCopyOption REPLACE_EXISTING>;

        $r13 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r4);

        goto label3;

     label2:
        $r13 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

     label3:
        virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doCopyFile(int,java.lang.String,java.lang.String,java.util.Collection)>(i0, r2, r3, $r13);

        return;
    }

    protected void doCopyFile(int, java.lang.String, java.lang.String, java.util.Collection) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        java.lang.String r1, r3;
        java.nio.file.Path r2, r4;
        java.util.Collection r5;
        boolean $z0;
        int $i0, i1;
        java.nio.file.CopyOption[] $r6, $r11;
        java.lang.Object[] $r7;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        i1 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r5 := @parameter3: java.util.Collection;

        r2 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.nio.file.Path resolveFile(java.lang.String)>(r1);

        r4 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.nio.file.Path resolveFile(java.lang.String)>(r3);

        $z0 = staticinvoke <org.apache.sshd.common.util.GenericUtils: boolean isEmpty(java.util.Collection)>(r5);

        if $z0 == 0 goto label1;

        $r11 = <org.apache.sshd.common.util.io.IoUtils: java.nio.file.CopyOption[] EMPTY_COPY_OPTIONS>;

        goto label2;

     label1:
        $i0 = interfaceinvoke r5.<java.util.Collection: int size()>();

        $r6 = newarray (java.nio.file.CopyOption)[$i0];

        $r7 = interfaceinvoke r5.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r6);

        $r11 = (java.nio.file.CopyOption[]) $r7;

     label2:
        staticinvoke <java.nio.file.Files: java.nio.file.Path copy(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>(r2, r4, $r11);

        return;
    }

    protected void doStat(org.apache.sshd.common.util.buffer.Buffer, int) throws java.io.IOException
    {
        org.apache.sshd.common.util.buffer.Buffer r0, $r4, $r7;
        java.lang.String r1;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r2;
        int $i0, i1, i2;
        java.util.Map r3;
        java.lang.Throwable $r5, r6;
        java.lang.Exception $r8;

        nop;

        r2 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i1 := @parameter1: int;

        r1 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

        i2 = 65535;

        $i0 = r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int version>;

        if $i0 < 4 goto label1;

        i2 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: int getInt()>();

     label1:
        r3 = virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map doStat(int,java.lang.String,int)>(i1, r1, i2);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r6 = $r5;

        $r7 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        $r8 = (java.lang.Exception) r6;

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,java.lang.Exception)>($r7, i1, $r8);

        return;

     label4:
        $r4 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendAttrs(org.apache.sshd.common.util.buffer.Buffer,int,java.util.Map)>($r4, i1, r3);

        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    protected java.util.Map doStat(int, java.lang.String, int) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        org.slf4j.Logger $r1, $r7;
        boolean $z0;
        java.lang.String r2, $r10, varReplacer6831;
        java.nio.file.Path r3;
        int i0, i1, varReplacer6832;
        java.nio.file.LinkOption[] $r4;
        java.util.Map $r5;
        java.lang.Object[] $r6;
        org.apache.sshd.server.session.ServerSession $r8;
        java.lang.Integer $r9;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        i1 := @parameter0: int;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r1 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r1.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r7 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r6 = newarray (java.lang.Object)[4];

        $r8 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r6[0] = $r8;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r6[1] = $r9;

        $r6[2] = r2;

        $r10 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r6[3] = $r10;

        varReplacer6831 = "doStat({})[id={}] SSH_FXP_STAT (path={}, flags=0x{})";

        interfaceinvoke $r7.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(varReplacer6831, $r6);

     label1:
        r3 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.nio.file.Path resolveFile(java.lang.String)>(r2);

        varReplacer6832 = 0;

        $r4 = staticinvoke <org.apache.sshd.common.util.io.IoUtils: java.nio.file.LinkOption[] getLinkOptions(boolean)>(varReplacer6832);

        $r5 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map resolveFileAttributes(java.nio.file.Path,int,java.nio.file.LinkOption[])>(r3, i0, $r4);

        return $r5;
    }

    protected void doRealPath(org.apache.sshd.common.util.buffer.Buffer, int) throws java.io.IOException
    {
        org.apache.sshd.common.util.buffer.Buffer r0, $r10, $r32;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r1;
        org.slf4j.Logger $r2, $r13, $r14, $r18, $r22, $r24, $r28, $r35, $r36, $r38, $r47;
        boolean $z0, $z1, $z2, $z3, $z4, $z6, $z7, $z8;
        int $i0, $i1, i2, i3, $i4, varReplacer6833, varReplacer6835, varReplacer6839, varReplacer6840;
        java.util.LinkedList r3, $r59;
        java.lang.Object $r4, $r6, $r11;
        java.nio.file.Path r5, $r12;
        java.lang.Boolean r7;
        java.lang.String $r9, $r20, $r21, $r26, $r45, $r50, $r51, r52, r53, varReplacer6834, varReplacer6836, varReplacer6837, varReplacer6838, varReplacer6841, varReplacer6842, varReplacer6843, varReplacer6844;
        org.apache.sshd.server.session.ServerSession $r15, $r19, $r25, $r29, $r40, $r48;
        java.nio.file.LinkOption[] $r16, r55;
        java.lang.Object[] $r17, $r23, $r27, $r46;
        java.lang.Integer $r30;
        java.lang.Throwable $r31, $r33, r34, r58;
        java.lang.StringBuilder $r39, $r41, $r42, $r43, $r44, $r60;
        java.lang.Class $r49;
        java.util.Map r54;
        org.apache.sshd.common.util.Pair r56;
        java.io.FileNotFoundException $r61;
        java.io.IOException $r62;
        java.lang.Exception $r63;

        nop;

        r1 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i2 := @parameter1: int;

        r52 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

        $r2 = r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r2.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label01;

        $r28 = r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r27 = newarray (java.lang.Object)[3];

        $r29 = virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r27[0] = $r29;

        $r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r27[1] = $r30;

        $r27[2] = r52;

        varReplacer6836 = "doRealPath({})[id={}] SSH_FXP_REALPATH (path={})";

        interfaceinvoke $r28.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(varReplacer6836, $r27);

     label01:
        r53 = staticinvoke <org.apache.sshd.common.util.GenericUtils: java.lang.String trimToEmpty(java.lang.String)>(r52);

        $z1 = staticinvoke <org.apache.sshd.common.util.GenericUtils: boolean isEmpty(java.lang.CharSequence)>(r53);

        if $z1 == 0 goto label02;

        r53 = ".";

     label02:
        r54 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

     label03:
        varReplacer6839 = 0;

        r55 = staticinvoke <org.apache.sshd.common.util.io.IoUtils: java.nio.file.LinkOption[] getLinkOptions(boolean)>(varReplacer6839);

        $i0 = r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int version>;

        if $i0 >= 6 goto label04;

        r56 = virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.common.util.Pair doRealPathV345(int,java.lang.String,java.nio.file.LinkOption[])>(i2, r53, r55);

        goto label21;

     label04:
        i3 = 1;

        $i1 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: int available()>();

        if $i1 <= 0 goto label05;

        i3 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: int getUByte()>();

        $r22 = r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z6 = interfaceinvoke $r22.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z6 == 0 goto label05;

        $r24 = r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r23 = newarray (java.lang.Object)[3];

        $r25 = virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r23[0] = $r25;

        $r26 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i3);

        $r23[1] = $r26;

        $r23[2] = r53;

        varReplacer6844 = "doRealPath({}) - control=0x{} for path={}";

        interfaceinvoke $r24.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(varReplacer6844, $r23);

     label05:
        $r59 = new java.util.LinkedList;

        specialinvoke $r59.<java.util.LinkedList: void <init>()>();

        r3 = $r59;

     label06:
        $i4 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: int available()>();

        if $i4 <= 0 goto label07;

        $r21 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

        interfaceinvoke r3.<java.util.Collection: boolean add(java.lang.Object)>($r21);

        goto label06;

     label07:
        r56 = virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.common.util.Pair doRealPathV6(int,java.lang.String,java.util.Collection,java.nio.file.LinkOption[])>(i2, r53, r3, r55);

        $r4 = virtualinvoke r56.<org.apache.sshd.common.util.Pair: java.lang.Object getFirst()>();

        r5 = (java.nio.file.Path) $r4;

        $r6 = virtualinvoke r56.<org.apache.sshd.common.util.Pair: java.lang.Object getSecond()>();

        r7 = (java.lang.Boolean) $r6;

        tableswitch(i3)
        {
            case 1: goto label19;
            case 2: goto label08;
            case 3: goto label16;
            default: goto label20;
        };

     label08:
        if r7 != null goto label09;

        varReplacer6833 = 65535;

        r54 = virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map handleUnknownStatusFileAttributes(java.nio.file.Path,int,java.nio.file.LinkOption[])>(r5, varReplacer6833, r55);

        goto label21;

     label09:
        $z3 = virtualinvoke r7.<java.lang.Boolean: boolean booleanValue()>();

        if $z3 == 0 goto label15;

     label10:
        varReplacer6835 = 0;

        $r16 = staticinvoke <org.apache.sshd.common.util.io.IoUtils: java.nio.file.LinkOption[] getLinkOptions(boolean)>(varReplacer6835);

        r54 = virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map getAttributes(java.nio.file.Path,java.nio.file.LinkOption[])>(r5, $r16);

     label11:
        goto label21;

     label12:
        $r33 := @caughtexception;

        r34 = $r33;

        $r35 = r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z7 = interfaceinvoke $r35.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z7 == 0 goto label13;

        $r47 = r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r46 = newarray (java.lang.Object)[4];

        $r48 = virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r46[0] = $r48;

        $r49 = virtualinvoke r34.<java.lang.Object: java.lang.Class getClass()>();

        $r50 = virtualinvoke $r49.<java.lang.Class: java.lang.String getSimpleName()>();

        $r46[1] = $r50;

        $r46[2] = r5;

        $r62 = (java.io.IOException) r34;

        $r51 = virtualinvoke $r62.<java.io.IOException: java.lang.String getMessage()>();

        $r46[3] = $r51;

        varReplacer6837 = "doRealPath({}) - failed ({}) to retrieve attributes of {}: {}";

        interfaceinvoke $r47.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(varReplacer6837, $r46);

     label13:
        $r36 = r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z8 = interfaceinvoke $r36.<org.slf4j.Logger: boolean isTraceEnabled()>();

        if $z8 == 0 goto label14;

        $r38 = r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r60 = new java.lang.StringBuilder;

        specialinvoke $r60.<java.lang.StringBuilder: void <init>()>();

        varReplacer6834 = "doRealPath(";

        $r39 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6834);

        $r40 = virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r40);

        varReplacer6838 = ")[";

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6838);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        varReplacer6842 = "] attributes retrieval failure details";

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6842);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r38.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Throwable)>($r45, r34);

     label14:
        goto label21;

     label15:
        $r13 = r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z4 = interfaceinvoke $r13.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z4 == 0 goto label21;

        $r14 = r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r15 = virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        varReplacer6841 = "doRealPath({}) - dummy attributes for non-existing file: {}";

        interfaceinvoke $r14.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>(varReplacer6841, $r15, r5);

        goto label21;

     label16:
        if r7 != null goto label17;

        varReplacer6840 = 65535;

        r54 = virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map handleUnknownStatusFileAttributes(java.nio.file.Path,int,java.nio.file.LinkOption[])>(r5, varReplacer6840, r55);

        goto label21;

     label17:
        $z2 = virtualinvoke r7.<java.lang.Boolean: boolean booleanValue()>();

        if $z2 == 0 goto label18;

        r54 = virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map getAttributes(java.nio.file.Path,java.nio.file.LinkOption[])>(r5, r55);

        goto label21;

     label18:
        $r61 = new java.io.FileNotFoundException;

        $r9 = interfaceinvoke r5.<java.nio.file.Path: java.lang.String toString()>();

        specialinvoke $r61.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r9);

        throw $r61;

     label19:
        goto label21;

     label20:
        $r18 = r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r17 = newarray (java.lang.Object)[3];

        $r19 = virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r17[0] = $r19;

        $r20 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i3);

        $r17[1] = $r20;

        $r17[2] = r5;

        varReplacer6843 = "doRealPath({}) unknown control value 0x{} for path={}";

        interfaceinvoke $r18.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object[])>(varReplacer6843, $r17);

     label21:
        goto label23;

     label22:
        $r31 := @caughtexception;

        r58 = $r31;

        $r32 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        $r63 = (java.lang.Exception) r58;

        virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,java.lang.Exception)>($r32, i2, $r63);

        return;

     label23:
        $r10 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        $r11 = virtualinvoke r56.<org.apache.sshd.common.util.Pair: java.lang.Object getFirst()>();

        $r12 = (java.nio.file.Path) $r11;

        virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendPath(org.apache.sshd.common.util.buffer.Buffer,int,java.nio.file.Path,java.util.Map)>($r10, i2, $r12, r54);

        return;

        catch java.io.IOException from label10 to label11 with label12;
        catch java.io.IOException from label03 to label21 with label22;
        catch java.lang.RuntimeException from label03 to label21 with label22;
    }

    protected transient org.apache.sshd.common.util.Pair doRealPathV6(int, java.lang.String, java.util.Collection, java.nio.file.LinkOption[]) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        java.util.Collection r1;
        int i0, i1, $i2, $i3, $i4, varReplacer6846;
        java.nio.file.LinkOption[] r2;
        org.apache.sshd.common.util.Pair $r3;
        org.slf4j.Logger $r4, $r14;
        boolean $z0, $z1;
        java.lang.StringBuilder $r5, r6, $r11;
        java.util.Iterator r8;
        java.lang.Object $r9;
        java.lang.String r10, r17, varReplacer6845;
        java.lang.Object[] $r13;
        org.apache.sshd.server.session.ServerSession $r15;
        java.lang.Integer $r16;
        java.nio.file.Path r18;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        i1 := @parameter0: int;

        r17 := @parameter1: java.lang.String;

        r1 := @parameter2: java.util.Collection;

        r2 := @parameter3: java.nio.file.LinkOption[];

        r18 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.nio.file.Path resolveFile(java.lang.String)>(r17);

        i0 = staticinvoke <org.apache.sshd.common.util.GenericUtils: int size(java.util.Collection)>(r1);

        if i0 <= 0 goto label4;

        $r4 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r4.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r14 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r13 = newarray (java.lang.Object)[4];

        $r15 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r13[0] = $r15;

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r13[1] = $r16;

        $r13[2] = r17;

        $r13[3] = r1;

        varReplacer6845 = "doRealPathV6({})[id={}] path={}, extra={}";

        interfaceinvoke $r14.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(varReplacer6845, $r13);

     label1:
        $r5 = new java.lang.StringBuilder;

        $i2 = staticinvoke <org.apache.sshd.common.util.GenericUtils: int length(java.lang.CharSequence)>(r17);

        $i3 = i0 * 8;

        $i4 = $i2 + $i3;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(int)>($i4);

        r6 = $r5;

        virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17);

        r8 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r9 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (java.lang.String) $r9;

        r18 = interfaceinvoke r18.<java.nio.file.Path: java.nio.file.Path resolve(java.lang.String)>(r10);

        varReplacer6846 = 47;

        $r11 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(varReplacer6846);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        goto label2;

     label3:
        r17 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        $r3 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.common.util.Pair validateRealPath(int,java.lang.String,java.nio.file.Path,java.nio.file.LinkOption[])>(i1, r17, r18, r2);

        return $r3;
    }

    protected transient org.apache.sshd.common.util.Pair doRealPathV345(int, java.lang.String, java.nio.file.LinkOption[]) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        int i0;
        java.lang.String r1;
        java.nio.file.Path $r2;
        java.nio.file.LinkOption[] r3;
        org.apache.sshd.common.util.Pair $r4;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r3 := @parameter2: java.nio.file.LinkOption[];

        $r2 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.nio.file.Path resolveFile(java.lang.String)>(r1);

        $r4 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.common.util.Pair validateRealPath(int,java.lang.String,java.nio.file.Path,java.nio.file.LinkOption[])>(i0, r1, $r2, r3);

        return $r4;
    }

    protected transient org.apache.sshd.common.util.Pair validateRealPath(int, java.lang.String, java.nio.file.Path, java.nio.file.LinkOption[]) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        java.nio.file.Path r1, r2;
        java.nio.file.LinkOption[] r3;
        java.lang.Boolean r4;
        org.apache.sshd.common.util.Pair $r5;
        int i0;
        java.lang.String r6;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        i0 := @parameter0: int;

        r6 := @parameter1: java.lang.String;

        r1 := @parameter2: java.nio.file.Path;

        r3 := @parameter3: java.nio.file.LinkOption[];

        r2 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.nio.file.Path normalize(java.nio.file.Path)>(r1);

        r4 = staticinvoke <org.apache.sshd.common.util.io.IoUtils: java.lang.Boolean checkFileExists(java.nio.file.Path,java.nio.file.LinkOption[])>(r2, r3);

        $r5 = new org.apache.sshd.common.util.Pair;

        specialinvoke $r5.<org.apache.sshd.common.util.Pair: void <init>(java.lang.Object,java.lang.Object)>(r2, r4);

        return $r5;
    }

    protected void doRemoveDirectory(org.apache.sshd.common.util.buffer.Buffer, int) throws java.io.IOException
    {
        org.apache.sshd.common.util.buffer.Buffer r0, $r4, $r7;
        java.lang.String r1, varReplacer6848;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r2;
        int i0, varReplacer6847, varReplacer6849;
        java.nio.file.LinkOption[] $r3;
        java.lang.Throwable $r5, r6;
        java.lang.Exception $r8;

        nop;

        r2 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i0 := @parameter1: int;

        r1 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

     label1:
        varReplacer6849 = 0;

        $r3 = staticinvoke <org.apache.sshd.common.util.io.IoUtils: java.nio.file.LinkOption[] getLinkOptions(boolean)>(varReplacer6849);

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doRemoveDirectory(int,java.lang.String,java.nio.file.LinkOption[])>(i0, r1, $r3);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r6 = $r5;

        $r7 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        $r8 = (java.lang.Exception) r6;

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,java.lang.Exception)>($r7, i0, $r8);

        return;

     label4:
        $r4 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        varReplacer6847 = 0;

        varReplacer6848 = "";

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,int,java.lang.String)>($r4, i0, varReplacer6847, varReplacer6848);

        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    protected transient void doRemoveDirectory(int, java.lang.String, java.nio.file.LinkOption[]) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        java.lang.String r1, $r6, varReplacer6850;
        java.nio.file.Path r2;
        org.slf4j.Logger $r3, $r8;
        boolean $z0, $z1;
        java.nio.file.LinkOption[] r4;
        java.nio.file.NotDirectoryException $r5;
        int i0;
        java.lang.Object[] $r7;
        org.apache.sshd.server.session.ServerSession $r9;
        java.lang.Integer $r10;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r4 := @parameter2: java.nio.file.LinkOption[];

        r2 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.nio.file.Path resolveFile(java.lang.String)>(r1);

        $r3 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r3.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r8 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r7 = newarray (java.lang.Object)[4];

        $r9 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r7[0] = $r9;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r7[1] = $r10;

        $r7[2] = r1;

        $r7[3] = r2;

        varReplacer6850 = "doRemoveDirectory({})[id={}] SSH_FXP_RMDIR (path={})[{}]";

        interfaceinvoke $r8.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(varReplacer6850, $r7);

     label1:
        $z1 = staticinvoke <java.nio.file.Files: boolean isDirectory(java.nio.file.Path,java.nio.file.LinkOption[])>(r2, r4);

        if $z1 == 0 goto label2;

        virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doRemove(int,java.nio.file.Path)>(i0, r2);

        goto label3;

     label2:
        $r5 = new java.nio.file.NotDirectoryException;

        $r6 = interfaceinvoke r2.<java.nio.file.Path: java.lang.String toString()>();

        specialinvoke $r5.<java.nio.file.NotDirectoryException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label3:
        return;
    }

    protected void doRemove(int, java.nio.file.Path) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        org.apache.sshd.server.subsystem.sftp.SftpEventListener r1;
        org.apache.sshd.server.session.ServerSession r2;
        java.nio.file.Path r3;
        java.lang.Throwable $r4, r5;
        int i0;
        null_type varReplacer6851;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        i0 := @parameter0: int;

        r3 := @parameter1: java.nio.file.Path;

        r1 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.subsystem.sftp.SftpEventListener getSftpEventListenerProxy()>();

        r2 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        interfaceinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpEventListener: void removing(org.apache.sshd.server.session.ServerSession,java.nio.file.Path)>(r2, r3);

     label1:
        staticinvoke <java.nio.file.Files: void delete(java.nio.file.Path)>(r3);

        varReplacer6851 = null;

        interfaceinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpEventListener: void removed(org.apache.sshd.server.session.ServerSession,java.nio.file.Path,java.lang.Throwable)>(r2, r3, varReplacer6851);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r5 = $r4;

        interfaceinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpEventListener: void removed(org.apache.sshd.server.session.ServerSession,java.nio.file.Path,java.lang.Throwable)>(r2, r3, r5);

        throw r5;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    protected void doMakeDirectory(org.apache.sshd.common.util.buffer.Buffer, int) throws java.io.IOException
    {
        org.apache.sshd.common.util.buffer.Buffer r0, $r5, $r8;
        java.lang.String r1, varReplacer6853;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r2;
        java.util.Map r3;
        int i0, varReplacer6852, varReplacer6854;
        java.nio.file.LinkOption[] $r4;
        java.lang.Throwable $r6, r7;
        java.lang.Exception $r9;

        nop;

        r2 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i0 := @parameter1: int;

        r1 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

        r3 = virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map readAttrs(org.apache.sshd.common.util.buffer.Buffer)>(r0);

     label1:
        varReplacer6854 = 0;

        $r4 = staticinvoke <org.apache.sshd.common.util.io.IoUtils: java.nio.file.LinkOption[] getLinkOptions(boolean)>(varReplacer6854);

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doMakeDirectory(int,java.lang.String,java.util.Map,java.nio.file.LinkOption[])>(i0, r1, r3, $r4);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        r7 = $r6;

        $r8 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        $r9 = (java.lang.Exception) r7;

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,java.lang.Exception)>($r8, i0, $r9);

        return;

     label4:
        $r5 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        varReplacer6852 = 0;

        varReplacer6853 = "";

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,int,java.lang.String)>($r5, i0, varReplacer6852, varReplacer6853);

        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    protected transient void doMakeDirectory(int, java.lang.String, java.util.Map, java.nio.file.LinkOption[]) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        java.lang.String r1, $r13, $r16, $r18, $r19, $r24, varReplacer6855, varReplacer6856, varReplacer6857, varReplacer6858;
        java.nio.file.Path r2;
        org.slf4j.Logger $r3, $r26;
        boolean $z0, $z1, $z2;
        java.nio.file.LinkOption[] r4;
        java.lang.Boolean r5;
        org.apache.sshd.server.subsystem.sftp.SftpEventListener r6;
        org.apache.sshd.server.session.ServerSession r7, $r27;
        java.util.Map r8;
        java.nio.file.attribute.FileAttribute[] $r9;
        java.io.FileNotFoundException $r11;
        java.lang.StringBuilder $r12, $r14, $r15, $r21, $r22, $r23;
        java.nio.file.FileAlreadyExistsException $r17;
        java.nio.file.AccessDeniedException $r20;
        java.lang.Object[] $r25;
        int i0;
        java.lang.Integer $r28;
        java.lang.Throwable $r29, r30;
        null_type varReplacer6859;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r8 := @parameter2: java.util.Map;

        r4 := @parameter3: java.nio.file.LinkOption[];

        r2 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.nio.file.Path resolveFile(java.lang.String)>(r1);

        $r3 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r3.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r26 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r25 = newarray (java.lang.Object)[5];

        $r27 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r25[0] = $r27;

        $r28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r25[1] = $r28;

        $r25[2] = r1;

        $r25[3] = r2;

        $r25[4] = r8;

        varReplacer6858 = "doMakeDirectory({})[id={}] SSH_FXP_MKDIR (path={}[{}], attrs={})";

        interfaceinvoke $r26.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(varReplacer6858, $r25);

     label1:
        r5 = staticinvoke <org.apache.sshd.common.util.io.IoUtils: java.lang.Boolean checkFileExists(java.nio.file.Path,java.nio.file.LinkOption[])>(r2, r4);

        if r5 != null goto label2;

        $r20 = new java.nio.file.AccessDeniedException;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        varReplacer6855 = "Cannot validate make-directory existence for ";

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6855);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<java.nio.file.AccessDeniedException: void <init>(java.lang.String)>($r24);

        throw $r20;

     label2:
        $z1 = virtualinvoke r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label4;

        $z2 = staticinvoke <java.nio.file.Files: boolean isDirectory(java.nio.file.Path,java.nio.file.LinkOption[])>(r2, r4);

        if $z2 == 0 goto label3;

        $r17 = new java.nio.file.FileAlreadyExistsException;

        $r18 = interfaceinvoke r2.<java.nio.file.Path: java.lang.String toString()>();

        $r19 = interfaceinvoke r2.<java.nio.file.Path: java.lang.String toString()>();

        varReplacer6856 = "Target directory already exists";

        specialinvoke $r17.<java.nio.file.FileAlreadyExistsException: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r18, $r19, varReplacer6856);

        throw $r17;

     label3:
        $r11 = new java.io.FileNotFoundException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = interfaceinvoke r2.<java.nio.file.Path: java.lang.String toString()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        varReplacer6857 = " already exists as a file";

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6857);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r16);

        throw $r11;

     label4:
        r6 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.subsystem.sftp.SftpEventListener getSftpEventListenerProxy()>();

        r7 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        interfaceinvoke r6.<org.apache.sshd.server.subsystem.sftp.SftpEventListener: void creating(org.apache.sshd.server.session.ServerSession,java.nio.file.Path,java.util.Map)>(r7, r2, r8);

     label5:
        $r9 = newarray (java.nio.file.attribute.FileAttribute)[0];

        staticinvoke <java.nio.file.Files: java.nio.file.Path createDirectory(java.nio.file.Path,java.nio.file.attribute.FileAttribute[])>(r2, $r9);

        virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doSetAttributes(java.nio.file.Path,java.util.Map)>(r2, r8);

        varReplacer6859 = null;

        interfaceinvoke r6.<org.apache.sshd.server.subsystem.sftp.SftpEventListener: void created(org.apache.sshd.server.session.ServerSession,java.nio.file.Path,java.util.Map,java.lang.Throwable)>(r7, r2, r8, varReplacer6859);

     label6:
        goto label8;

     label7:
        $r29 := @caughtexception;

        r30 = $r29;

        interfaceinvoke r6.<org.apache.sshd.server.subsystem.sftp.SftpEventListener: void created(org.apache.sshd.server.session.ServerSession,java.nio.file.Path,java.util.Map,java.lang.Throwable)>(r7, r2, r8, r30);

        throw r30;

     label8:
        return;

        catch java.io.IOException from label5 to label6 with label7;
        catch java.lang.RuntimeException from label5 to label6 with label7;
    }

    protected void doRemove(org.apache.sshd.common.util.buffer.Buffer, int) throws java.io.IOException
    {
        org.apache.sshd.common.util.buffer.Buffer r0, $r4, $r7;
        java.lang.String r1, varReplacer6862;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r2;
        int i0, varReplacer6860, varReplacer6861;
        java.nio.file.LinkOption[] $r3;
        java.lang.Throwable $r5, r6;
        java.lang.Exception $r8;

        nop;

        r2 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i0 := @parameter1: int;

        r1 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

     label1:
        varReplacer6860 = 0;

        $r3 = staticinvoke <org.apache.sshd.common.util.io.IoUtils: java.nio.file.LinkOption[] getLinkOptions(boolean)>(varReplacer6860);

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doRemove(int,java.lang.String,java.nio.file.LinkOption[])>(i0, r1, $r3);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r6 = $r5;

        $r7 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        $r8 = (java.lang.Exception) r6;

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,java.lang.Exception)>($r7, i0, $r8);

        return;

     label4:
        $r4 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        varReplacer6861 = 0;

        varReplacer6862 = "";

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,int,java.lang.String)>($r4, i0, varReplacer6861, varReplacer6862);

        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    protected transient void doRemove(int, java.lang.String, java.nio.file.LinkOption[]) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        java.lang.String r1, $r8, $r11, $r13, $r18, varReplacer6863, varReplacer6864, varReplacer6865;
        java.nio.file.Path r2;
        org.slf4j.Logger $r3, $r20;
        boolean $z0, $z1, $z2;
        java.nio.file.LinkOption[] r4;
        java.lang.Boolean r5;
        int i0;
        java.io.FileNotFoundException $r6, $r12;
        java.lang.StringBuilder $r7, $r9, $r10, $r15, $r16, $r17;
        java.nio.file.AccessDeniedException $r14;
        java.lang.Object[] $r19;
        org.apache.sshd.server.session.ServerSession $r21;
        java.lang.Integer $r22;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r4 := @parameter2: java.nio.file.LinkOption[];

        r2 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.nio.file.Path resolveFile(java.lang.String)>(r1);

        $r3 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r3.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r20 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r19 = newarray (java.lang.Object)[4];

        $r21 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r19[0] = $r21;

        $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r19[1] = $r22;

        $r19[2] = r1;

        $r19[3] = r2;

        varReplacer6865 = "doRemove({})[id={}] SSH_FXP_REMOVE (path={}[{}])";

        interfaceinvoke $r20.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(varReplacer6865, $r19);

     label1:
        r5 = staticinvoke <org.apache.sshd.common.util.io.IoUtils: java.lang.Boolean checkFileExists(java.nio.file.Path,java.nio.file.LinkOption[])>(r2, r4);

        if r5 != null goto label2;

        $r14 = new java.nio.file.AccessDeniedException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        varReplacer6864 = "Cannot determine existence of remove candidate: ";

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6864);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.nio.file.AccessDeniedException: void <init>(java.lang.String)>($r18);

        throw $r14;

     label2:
        $z1 = virtualinvoke r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 != 0 goto label3;

        $r12 = new java.io.FileNotFoundException;

        $r13 = interfaceinvoke r2.<java.nio.file.Path: java.lang.String toString()>();

        specialinvoke $r12.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r13);

        throw $r12;

     label3:
        $z2 = staticinvoke <java.nio.file.Files: boolean isDirectory(java.nio.file.Path,java.nio.file.LinkOption[])>(r2, r4);

        if $z2 == 0 goto label4;

        $r6 = new java.io.FileNotFoundException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = interfaceinvoke r2.<java.nio.file.Path: java.lang.String toString()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        varReplacer6863 = " is as a folder";

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6863);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r11);

        throw $r6;

     label4:
        virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doRemove(int,java.nio.file.Path)>(i0, r2);

        return;
    }

    protected void doReadDir(org.apache.sshd.common.util.buffer.Buffer, int) throws java.io.IOException
    {
        org.apache.sshd.common.util.buffer.Buffer r0, $r16, $r32, $r38, r40;
        java.lang.String r1, $r20, $r22, $r24, $r26, $r31, varReplacer6866, varReplacer6869, varReplacer6870, varReplacer6873, varReplacer6875, varReplacer6877, varReplacer6878, varReplacer6879;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r2;
        java.util.Map $r3;
        java.lang.Object $r4;
        org.apache.sshd.server.subsystem.sftp.Handle r5, $r7;
        org.slf4j.Logger $r6, $r14, $r34, $r43;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        java.nio.file.Path r8;
        java.nio.file.LinkOption[] r9;
        java.lang.Boolean r10, r12, $r42;
        int i0, i1, i2, $i4, $i5, varReplacer6867, varReplacer6868, varReplacer6872, varReplacer6874, varReplacer6876;
        org.apache.sshd.server.session.ServerSession r11, $r35, $r41;
        java.lang.Object[] $r13, $r33;
        java.lang.Integer $r15, $r36;
        java.lang.StringBuilder $r19, $r21, $r29, $r30, $r45, $r49;
        java.lang.Throwable $r37, r44;
        org.apache.sshd.server.subsystem.sftp.DirectoryHandle r39;
        long $l3, varReplacer6871;
        java.nio.file.AccessDeniedException $r46, $r50;
        java.io.FileNotFoundException $r47;
        java.nio.file.NotDirectoryException $r48;
        java.lang.Exception $r51;

        nop;

        r2 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i0 := @parameter1: int;

        r1 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

        $r3 = r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map handles>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r5 = (org.apache.sshd.server.subsystem.sftp.Handle) $r4;

        $r6 = r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r6.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label01;

        $r34 = r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r33 = newarray (java.lang.Object)[4];

        $r35 = virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r33[0] = $r35;

        $r36 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r33[1] = $r36;

        $r33[2] = r1;

        $r33[3] = r5;

        varReplacer6879 = "doReadDir({})[id={}] SSH_FXP_READDIR (handle={}[{}])";

        interfaceinvoke $r34.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(varReplacer6879, $r33);

     label01:
        $r7 = virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.subsystem.sftp.Handle validateHandle(java.lang.String,org.apache.sshd.server.subsystem.sftp.Handle,java.lang.Class)>(r1, r5, class "Lorg/apache/sshd/server/subsystem/sftp/DirectoryHandle;");

        r39 = (org.apache.sshd.server.subsystem.sftp.DirectoryHandle) $r7;

        $z1 = virtualinvoke r39.<org.apache.sshd.server.subsystem.sftp.DirectoryHandle: boolean isDone()>();

        if $z1 == 0 goto label03;

        $r32 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        varReplacer6872 = 1;

        varReplacer6873 = "Directory reading is done";

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,int,java.lang.String)>($r32, i0, varReplacer6872, varReplacer6873);

     label02:
        return;

     label03:
        r8 = virtualinvoke r39.<org.apache.sshd.server.subsystem.sftp.DirectoryHandle: java.nio.file.Path getFile()>();

        varReplacer6874 = 0;

        r9 = staticinvoke <org.apache.sshd.common.util.io.IoUtils: java.nio.file.LinkOption[] getLinkOptions(boolean)>(varReplacer6874);

        r10 = staticinvoke <org.apache.sshd.common.util.io.IoUtils: java.lang.Boolean checkFileExists(java.nio.file.Path,java.nio.file.LinkOption[])>(r8, r9);

        if r10 != null goto label04;

        $r46 = new java.nio.file.AccessDeniedException;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        varReplacer6878 = "Cannot determine existence of read-dir for ";

        $r29 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6878);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r46.<java.nio.file.AccessDeniedException: void <init>(java.lang.String)>($r31);

        throw $r46;

     label04:
        $z2 = virtualinvoke r10.<java.lang.Boolean: boolean booleanValue()>();

        if $z2 != 0 goto label05;

        $r47 = new java.io.FileNotFoundException;

        $r26 = interfaceinvoke r8.<java.nio.file.Path: java.lang.String toString()>();

        specialinvoke $r47.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r26);

        throw $r47;

     label05:
        $z3 = staticinvoke <java.nio.file.Files: boolean isDirectory(java.nio.file.Path,java.nio.file.LinkOption[])>(r8, r9);

        if $z3 != 0 goto label06;

        $r48 = new java.nio.file.NotDirectoryException;

        $r24 = interfaceinvoke r8.<java.nio.file.Path: java.lang.String toString()>();

        specialinvoke $r48.<java.nio.file.NotDirectoryException: void <init>(java.lang.String)>($r24);

        throw $r48;

     label06:
        $z4 = staticinvoke <java.nio.file.Files: boolean isReadable(java.nio.file.Path)>(r8);

        if $z4 != 0 goto label07;

        $r50 = new java.nio.file.AccessDeniedException;

        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        varReplacer6875 = "Not readable: ";

        $r19 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6875);

        $r20 = interfaceinvoke r8.<java.nio.file.Path: java.lang.String toString()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r50.<java.nio.file.AccessDeniedException: void <init>(java.lang.String)>($r22);

        throw $r50;

     label07:
        $z5 = virtualinvoke r39.<org.apache.sshd.server.subsystem.sftp.DirectoryHandle: boolean isSendDot()>();

        if $z5 != 0 goto label08;

        $z8 = virtualinvoke r39.<org.apache.sshd.server.subsystem.sftp.DirectoryHandle: boolean isSendDotDot()>();

        if $z8 != 0 goto label08;

        $z9 = virtualinvoke r39.<org.apache.sshd.server.subsystem.sftp.DirectoryHandle: boolean hasNext()>();

        if $z9 == 0 goto label11;

     label08:
        r40 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        varReplacer6876 = 104;

        virtualinvoke r40.<org.apache.sshd.common.util.buffer.Buffer: void putByte(byte)>(varReplacer6876);

        $l3 = (long) i0;

        virtualinvoke r40.<org.apache.sshd.common.util.buffer.Buffer: void putInt(long)>($l3);

        i1 = virtualinvoke r40.<org.apache.sshd.common.util.buffer.Buffer: int wpos()>();

        varReplacer6871 = 0L;

        virtualinvoke r40.<org.apache.sshd.common.util.buffer.Buffer: void putInt(long)>(varReplacer6871);

        $r41 = virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        varReplacer6866 = "sftp-max-packet-length";

        varReplacer6867 = 16384;

        $i4 = staticinvoke <org.apache.sshd.common.PropertyResolverUtils: int getIntProperty(org.apache.sshd.common.PropertyResolver,java.lang.String,int)>($r41, varReplacer6866, varReplacer6867);

        i2 = virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int doReadDir(int,java.lang.String,org.apache.sshd.server.subsystem.sftp.DirectoryHandle,org.apache.sshd.common.util.buffer.Buffer,int)>(i0, r1, r39, r40, $i4);

        staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: void updateLengthPlaceholder(org.apache.sshd.common.util.buffer.Buffer,int,int)>(r40, i1, i2);

        r11 = virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $z10 = virtualinvoke r39.<org.apache.sshd.server.subsystem.sftp.DirectoryHandle: boolean isSendDot()>();

        if $z10 != 0 goto label09;

        $z6 = virtualinvoke r39.<org.apache.sshd.server.subsystem.sftp.DirectoryHandle: boolean isSendDotDot()>();

        if $z6 != 0 goto label09;

        $z7 = virtualinvoke r39.<org.apache.sshd.server.subsystem.sftp.DirectoryHandle: boolean hasNext()>();

        if $z7 != 0 goto label09;

        virtualinvoke r39.<org.apache.sshd.server.subsystem.sftp.DirectoryHandle: void markDone()>();

     label09:
        $i5 = virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int getVersion()>();

        $z11 = virtualinvoke r39.<org.apache.sshd.server.subsystem.sftp.DirectoryHandle: boolean isDone()>();

        $r42 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z11);

        r12 = staticinvoke <org.apache.sshd.common.subsystem.sftp.SftpHelper: java.lang.Boolean indicateEndOfNamesList(org.apache.sshd.common.util.buffer.Buffer,int,org.apache.sshd.common.PropertyResolver,java.lang.Boolean)>(r40, $i5, r11, $r42);

        $r43 = r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z12 = interfaceinvoke $r43.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z12 == 0 goto label10;

        $r14 = r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r13 = newarray (java.lang.Object)[5];

        $r13[0] = r11;

        $r13[1] = r1;

        $r13[2] = r5;

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r13[3] = $r15;

        $r13[4] = r12;

        varReplacer6877 = "doReadDir({})({})[{}] - seding {} entries - eol={}";

        interfaceinvoke $r14.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(varReplacer6877, $r13);

     label10:
        goto label13;

     label11:
        virtualinvoke r39.<org.apache.sshd.server.subsystem.sftp.DirectoryHandle: void markDone()>();

        $r16 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        varReplacer6868 = 1;

        varReplacer6869 = "Empty directory";

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,int,java.lang.String)>($r16, i0, varReplacer6868, varReplacer6869);

     label12:
        return;

     label13:
        varReplacer6870 = "No reply buffer created";

        staticinvoke <org.apache.sshd.common.util.ValidateUtils: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(r40, varReplacer6870);

     label14:
        goto label16;

     label15:
        $r37 := @caughtexception;

        r44 = $r37;

        $r38 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        $r51 = (java.lang.Exception) r44;

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,java.lang.Exception)>($r38, i0, $r51);

        return;

     label16:
        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void send(org.apache.sshd.common.util.buffer.Buffer)>(r40);

        return;

        catch java.io.IOException from label01 to label02 with label15;
        catch java.lang.RuntimeException from label01 to label02 with label15;
        catch java.io.IOException from label03 to label12 with label15;
        catch java.lang.RuntimeException from label03 to label12 with label15;
        catch java.io.IOException from label13 to label14 with label15;
        catch java.lang.RuntimeException from label13 to label14 with label15;
    }

    protected void doOpenDir(org.apache.sshd.common.util.buffer.Buffer, int) throws java.io.IOException
    {
        org.apache.sshd.common.util.buffer.Buffer r0, $r5, $r8;
        java.lang.String r1, r4;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r2;
        int i0, varReplacer6880;
        java.nio.file.LinkOption[] $r3;
        java.lang.Throwable $r6, r7;
        java.lang.Exception $r9;

        nop;

        r2 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i0 := @parameter1: int;

        r1 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

     label1:
        varReplacer6880 = 0;

        $r3 = staticinvoke <org.apache.sshd.common.util.io.IoUtils: java.nio.file.LinkOption[] getLinkOptions(boolean)>(varReplacer6880);

        r4 = virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.lang.String doOpenDir(int,java.lang.String,java.nio.file.LinkOption[])>(i0, r1, $r3);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        r7 = $r6;

        $r8 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        $r9 = (java.lang.Exception) r7;

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,java.lang.Exception)>($r8, i0, $r9);

        return;

     label4:
        $r5 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendHandle(org.apache.sshd.common.util.buffer.Buffer,int,java.lang.String)>($r5, i0, r4);

        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    protected transient java.lang.String doOpenDir(int, java.lang.String, java.nio.file.LinkOption[]) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        java.lang.String r1, r6, $r17, $r24, varReplacer6881, varReplacer6882, varReplacer6883;
        java.nio.file.Path r2;
        org.slf4j.Logger $r3, $r26;
        boolean $z0, $z1, $z2, $z3;
        java.nio.file.LinkOption[] r4;
        java.lang.Boolean r5;
        org.apache.sshd.server.subsystem.sftp.DirectoryHandle $r7, r8;
        org.apache.sshd.server.subsystem.sftp.SftpEventListener r9;
        org.apache.sshd.server.session.ServerSession $r10, $r27;
        java.util.Map $r11;
        java.nio.file.AccessDeniedException $r13, $r20;
        java.lang.StringBuilder $r14, $r15, $r16, $r21, $r22, $r23;
        java.nio.file.NotDirectoryException $r18;
        java.io.FileNotFoundException $r19;
        java.lang.Object[] $r25;
        int i0;
        java.lang.Integer $r28;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r4 := @parameter2: java.nio.file.LinkOption[];

        r2 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.nio.file.Path resolveNormalizedLocation(java.lang.String)>(r1);

        $r3 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r3.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r26 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r25 = newarray (java.lang.Object)[4];

        $r27 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r25[0] = $r27;

        $r28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r25[1] = $r28;

        $r25[2] = r1;

        $r25[3] = r2;

        varReplacer6883 = "doOpenDir({})[id={}] SSH_FXP_OPENDIR (path={})[{}]";

        interfaceinvoke $r26.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(varReplacer6883, $r25);

     label1:
        r5 = staticinvoke <org.apache.sshd.common.util.io.IoUtils: java.lang.Boolean checkFileExists(java.nio.file.Path,java.nio.file.LinkOption[])>(r2, r4);

        if r5 != null goto label2;

        $r20 = new java.nio.file.AccessDeniedException;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        varReplacer6881 = "Cannot determine open-dir existence for ";

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6881);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<java.nio.file.AccessDeniedException: void <init>(java.lang.String)>($r24);

        throw $r20;

     label2:
        $z1 = virtualinvoke r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 != 0 goto label3;

        $r19 = new java.io.FileNotFoundException;

        specialinvoke $r19.<java.io.FileNotFoundException: void <init>(java.lang.String)>(r1);

        throw $r19;

     label3:
        $z2 = staticinvoke <java.nio.file.Files: boolean isDirectory(java.nio.file.Path,java.nio.file.LinkOption[])>(r2, r4);

        if $z2 != 0 goto label4;

        $r18 = new java.nio.file.NotDirectoryException;

        specialinvoke $r18.<java.nio.file.NotDirectoryException: void <init>(java.lang.String)>(r1);

        throw $r18;

     label4:
        $z3 = staticinvoke <java.nio.file.Files: boolean isReadable(java.nio.file.Path)>(r2);

        if $z3 != 0 goto label5;

        $r13 = new java.nio.file.AccessDeniedException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        varReplacer6882 = "Not readable: ";

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6882);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.nio.file.AccessDeniedException: void <init>(java.lang.String)>($r17);

        throw $r13;

     label5:
        r6 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.lang.String generateFileHandle(java.nio.file.Path)>(r2);

        $r7 = new org.apache.sshd.server.subsystem.sftp.DirectoryHandle;

        specialinvoke $r7.<org.apache.sshd.server.subsystem.sftp.DirectoryHandle: void <init>(java.nio.file.Path)>(r2);

        r8 = $r7;

        r9 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.subsystem.sftp.SftpEventListener getSftpEventListenerProxy()>();

        $r10 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        interfaceinvoke r9.<org.apache.sshd.server.subsystem.sftp.SftpEventListener: void open(org.apache.sshd.server.session.ServerSession,java.lang.String,org.apache.sshd.server.subsystem.sftp.Handle)>($r10, r6, r8);

        $r11 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map handles>;

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, r8);

        return r6;
    }

    protected void doFSetStat(org.apache.sshd.common.util.buffer.Buffer, int) throws java.io.IOException
    {
        org.apache.sshd.common.util.buffer.Buffer r0, $r4, $r7;
        java.lang.String r1, varReplacer6885;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r2;
        java.util.Map r3;
        int i0, varReplacer6884;
        java.lang.Throwable $r5, r6;
        java.lang.Exception $r8;

        nop;

        r2 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i0 := @parameter1: int;

        r1 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

        r3 = virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map readAttrs(org.apache.sshd.common.util.buffer.Buffer)>(r0);

     label1:
        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doFSetStat(int,java.lang.String,java.util.Map)>(i0, r1, r3);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r6 = $r5;

        $r7 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        $r8 = (java.lang.Exception) r6;

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,java.lang.Exception)>($r7, i0, $r8);

        return;

     label4:
        $r4 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        varReplacer6884 = 0;

        varReplacer6885 = "";

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,int,java.lang.String)>($r4, i0, varReplacer6884, varReplacer6885);

        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    protected void doFSetStat(int, java.lang.String, java.util.Map) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        java.lang.String r1, varReplacer6886;
        java.util.Map $r2, r8;
        java.lang.Object $r3;
        org.apache.sshd.server.subsystem.sftp.Handle r4, $r6;
        org.slf4j.Logger $r5, $r10;
        boolean $z0;
        java.nio.file.Path $r7;
        java.lang.Object[] $r9;
        org.apache.sshd.server.session.ServerSession $r11;
        int i0;
        java.lang.Integer $r12;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r8 := @parameter2: java.util.Map;

        $r2 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map handles>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (org.apache.sshd.server.subsystem.sftp.Handle) $r3;

        $r5 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r5.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r10 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r9 = newarray (java.lang.Object)[5];

        $r11 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r9[0] = $r11;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r9[1] = $r12;

        $r9[2] = r1;

        $r9[3] = r4;

        $r9[4] = r8;

        varReplacer6886 = "doFsetStat({})[id={}] SSH_FXP_FSETSTAT (handle={}[{}], attrs={})";

        interfaceinvoke $r10.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(varReplacer6886, $r9);

     label1:
        $r6 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.subsystem.sftp.Handle validateHandle(java.lang.String,org.apache.sshd.server.subsystem.sftp.Handle,java.lang.Class)>(r1, r4, class "Lorg/apache/sshd/server/subsystem/sftp/Handle;");

        $r7 = virtualinvoke $r6.<org.apache.sshd.server.subsystem.sftp.Handle: java.nio.file.Path getFile()>();

        virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doSetAttributes(java.nio.file.Path,java.util.Map)>($r7, r8);

        return;
    }

    protected void doSetStat(org.apache.sshd.common.util.buffer.Buffer, int) throws java.io.IOException
    {
        org.apache.sshd.common.util.buffer.Buffer r0, $r4, $r7;
        java.lang.String r1, varReplacer6888;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r2;
        java.util.Map r3;
        int i0, varReplacer6887;
        java.lang.Throwable $r5, r6;
        java.lang.Exception $r8;

        nop;

        r2 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i0 := @parameter1: int;

        r1 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

        r3 = virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map readAttrs(org.apache.sshd.common.util.buffer.Buffer)>(r0);

     label1:
        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doSetStat(int,java.lang.String,java.util.Map)>(i0, r1, r3);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r6 = $r5;

        $r7 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        $r8 = (java.lang.Exception) r6;

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,java.lang.Exception)>($r7, i0, $r8);

        return;

     label4:
        $r4 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        varReplacer6887 = 0;

        varReplacer6888 = "";

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,int,java.lang.String)>($r4, i0, varReplacer6887, varReplacer6888);

        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    protected void doSetStat(int, java.lang.String, java.util.Map) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        org.slf4j.Logger $r1, $r6;
        boolean $z0;
        java.lang.String r2, varReplacer6889;
        java.nio.file.Path r3;
        java.util.Map r4;
        java.lang.Object[] $r5;
        org.apache.sshd.server.session.ServerSession $r7;
        int i0;
        java.lang.Integer $r8;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        i0 := @parameter0: int;

        r2 := @parameter1: java.lang.String;

        r4 := @parameter2: java.util.Map;

        $r1 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r1.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r6 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r5 = newarray (java.lang.Object)[4];

        $r7 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r5[0] = $r7;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r5[1] = $r8;

        $r5[2] = r2;

        $r5[3] = r4;

        varReplacer6889 = "doSetStat({})[id={}] SSH_FXP_SETSTAT (path={}, attrs={})";

        interfaceinvoke $r6.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(varReplacer6889, $r5);

     label1:
        r3 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.nio.file.Path resolveFile(java.lang.String)>(r2);

        virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doSetAttributes(java.nio.file.Path,java.util.Map)>(r3, r4);

        return;
    }

    protected void doFStat(org.apache.sshd.common.util.buffer.Buffer, int) throws java.io.IOException
    {
        org.apache.sshd.common.util.buffer.Buffer r0, $r4, $r7;
        java.lang.String r1;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r2;
        int $i0, i1, i2;
        java.util.Map r3;
        java.lang.Throwable $r5, r6;
        java.lang.Exception $r8;

        nop;

        r2 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i1 := @parameter1: int;

        r1 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

        i2 = 65535;

        $i0 = r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int version>;

        if $i0 < 4 goto label1;

        i2 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: int getInt()>();

     label1:
        r3 = virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map doFStat(int,java.lang.String,int)>(i1, r1, i2);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r6 = $r5;

        $r7 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        $r8 = (java.lang.Exception) r6;

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,java.lang.Exception)>($r7, i1, $r8);

        return;

     label4:
        $r4 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendAttrs(org.apache.sshd.common.util.buffer.Buffer,int,java.util.Map)>($r4, i1, r3);

        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    protected java.util.Map doFStat(int, java.lang.String, int) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        java.lang.String r1, $r14, varReplacer6890;
        java.util.Map $r2, $r9;
        java.lang.Object $r3;
        org.apache.sshd.server.subsystem.sftp.Handle r4, $r6;
        org.slf4j.Logger $r5, $r11;
        boolean $z0;
        java.nio.file.Path $r7;
        int i0, i1, varReplacer6891;
        java.nio.file.LinkOption[] $r8;
        java.lang.Object[] $r10;
        org.apache.sshd.server.session.ServerSession $r12;
        java.lang.Integer $r13;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        i1 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r2 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map handles>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (org.apache.sshd.server.subsystem.sftp.Handle) $r3;

        $r5 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r5.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r11 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r10 = newarray (java.lang.Object)[5];

        $r12 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r10[0] = $r12;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r10[1] = $r13;

        $r10[2] = r1;

        $r10[3] = r4;

        $r14 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r10[4] = $r14;

        varReplacer6890 = "doFStat({})[id={}] SSH_FXP_FSTAT (handle={}[{}], flags=0x{})";

        interfaceinvoke $r11.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(varReplacer6890, $r10);

     label1:
        $r6 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.subsystem.sftp.Handle validateHandle(java.lang.String,org.apache.sshd.server.subsystem.sftp.Handle,java.lang.Class)>(r1, r4, class "Lorg/apache/sshd/server/subsystem/sftp/Handle;");

        $r7 = virtualinvoke $r6.<org.apache.sshd.server.subsystem.sftp.Handle: java.nio.file.Path getFile()>();

        varReplacer6891 = 1;

        $r8 = staticinvoke <org.apache.sshd.common.util.io.IoUtils: java.nio.file.LinkOption[] getLinkOptions(boolean)>(varReplacer6891);

        $r9 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map resolveFileAttributes(java.nio.file.Path,int,java.nio.file.LinkOption[])>($r7, i0, $r8);

        return $r9;
    }

    protected void doLStat(org.apache.sshd.common.util.buffer.Buffer, int) throws java.io.IOException
    {
        org.apache.sshd.common.util.buffer.Buffer r0, $r4, $r7;
        java.lang.String r1;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r2;
        int $i0, i1, i2;
        java.util.Map r3;
        java.lang.Throwable $r5, r6;
        java.lang.Exception $r8;

        nop;

        r2 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i1 := @parameter1: int;

        r1 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

        i2 = 65535;

        $i0 = r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int version>;

        if $i0 < 4 goto label1;

        i2 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: int getInt()>();

     label1:
        r3 = virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map doLStat(int,java.lang.String,int)>(i1, r1, i2);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r6 = $r5;

        $r7 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        $r8 = (java.lang.Exception) r6;

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,java.lang.Exception)>($r7, i1, $r8);

        return;

     label4:
        $r4 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendAttrs(org.apache.sshd.common.util.buffer.Buffer,int,java.util.Map)>($r4, i1, r3);

        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    protected java.util.Map doLStat(int, java.lang.String, int) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        java.lang.String r1, $r10, varReplacer6893;
        java.nio.file.Path r2;
        org.slf4j.Logger $r3, $r7;
        boolean $z0;
        int i0, i1, varReplacer6892;
        java.nio.file.LinkOption[] $r4;
        java.util.Map $r5;
        java.lang.Object[] $r6;
        org.apache.sshd.server.session.ServerSession $r8;
        java.lang.Integer $r9;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        i1 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.nio.file.Path resolveFile(java.lang.String)>(r1);

        $r3 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r3.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r7 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r6 = newarray (java.lang.Object)[5];

        $r8 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r6[0] = $r8;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r6[1] = $r9;

        $r6[2] = r1;

        $r6[3] = r2;

        $r10 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r6[4] = $r10;

        varReplacer6893 = "doLStat({})[id={}] SSH_FXP_LSTAT (path={}[{}], flags=0x{})";

        interfaceinvoke $r7.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(varReplacer6893, $r6);

     label1:
        varReplacer6892 = 0;

        $r4 = staticinvoke <org.apache.sshd.common.util.io.IoUtils: java.nio.file.LinkOption[] getLinkOptions(boolean)>(varReplacer6892);

        $r5 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map resolveFileAttributes(java.nio.file.Path,int,java.nio.file.LinkOption[])>(r2, i0, $r4);

        return $r5;
    }

    protected void doWrite(org.apache.sshd.common.util.buffer.Buffer, int) throws java.io.IOException
    {
        org.apache.sshd.common.util.buffer.Buffer r0, $r4, $r7;
        java.lang.String r1, varReplacer6895;
        long l0;
        int i1, i2, $i3, $i4, varReplacer6894;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r2;
        byte[] $r3;
        java.lang.Throwable $r5, r6;
        java.lang.Exception $r8;

        nop;

        r2 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i2 := @parameter1: int;

        r1 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

        l0 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: long getLong()>();

        i1 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: int getInt()>();

     label1:
        $r3 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: byte[] array()>();

        $i3 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: int rpos()>();

        $i4 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: int available()>();

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doWrite(int,java.lang.String,long,int,byte[],int,int)>(i2, r1, l0, i1, $r3, $i3, $i4);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r6 = $r5;

        $r7 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        $r8 = (java.lang.Exception) r6;

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,java.lang.Exception)>($r7, i2, $r8);

        return;

     label4:
        $r4 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        varReplacer6894 = 0;

        varReplacer6895 = "";

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,int,java.lang.String)>($r4, i2, varReplacer6894, varReplacer6895);

        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    protected void doWrite(int, java.lang.String, long, int, byte[], int, int) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        java.lang.String r1, $r19, $r26, varReplacer6896, varReplacer6897, varReplacer6898, varReplacer6899, varReplacer6900, varReplacer6901;
        java.util.Map $r2;
        java.lang.Object $r3;
        org.apache.sshd.server.subsystem.sftp.Handle r4, $r6;
        org.slf4j.Logger $r5, $r28;
        boolean $z0, $z1;
        org.apache.sshd.server.subsystem.sftp.FileHandle r7;
        int i0, i1, i2, i4;
        byte[] r8;
        long l3;
        org.apache.sshd.server.subsystem.sftp.SftpEventListener r9;
        org.apache.sshd.server.session.ServerSession $r10, $r29;
        java.lang.IllegalStateException $r11, $r20;
        java.lang.StringBuilder $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r21, $r22, $r23, $r24, $r25;
        java.lang.Object[] $r27;
        java.lang.Integer $r30, $r32;
        java.lang.Long $r31;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        i4 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        l3 := @parameter2: long;

        i0 := @parameter3: int;

        r8 := @parameter4: byte[];

        i2 := @parameter5: int;

        i1 := @parameter6: int;

        $r2 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map handles>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (org.apache.sshd.server.subsystem.sftp.Handle) $r3;

        $r5 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r5.<org.slf4j.Logger: boolean isTraceEnabled()>();

        if $z0 == 0 goto label1;

        $r28 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r27 = newarray (java.lang.Object)[6];

        $r29 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r27[0] = $r29;

        $r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4);

        $r27[1] = $r30;

        $r27[2] = r1;

        $r27[3] = r4;

        $r31 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l3);

        $r27[4] = $r31;

        $r32 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r27[5] = $r32;

        varReplacer6897 = "doWrite({})[id={}] SSH_FXP_WRITE (handle={}[{}], offset={}, data=byte[{}])";

        interfaceinvoke $r28.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object[])>(varReplacer6897, $r27);

     label1:
        $r6 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.subsystem.sftp.Handle validateHandle(java.lang.String,org.apache.sshd.server.subsystem.sftp.Handle,java.lang.Class)>(r1, r4, class "Lorg/apache/sshd/server/subsystem/sftp/FileHandle;");

        r7 = (org.apache.sshd.server.subsystem.sftp.FileHandle) $r6;

        if i0 >= 0 goto label2;

        $r20 = new java.lang.IllegalStateException;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        varReplacer6898 = "Bad length (";

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6898);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        varReplacer6900 = ") for writing to ";

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6900);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r26);

        throw $r20;

     label2:
        if i1 >= i0 goto label3;

        $r11 = new java.lang.IllegalStateException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        varReplacer6901 = "Not enough buffer data for writing to ";

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6901);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        varReplacer6896 = ": required=";

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6896);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        varReplacer6899 = ", available=";

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6899);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r19);

        throw $r11;

     label3:
        $z1 = virtualinvoke r7.<org.apache.sshd.server.subsystem.sftp.FileHandle: boolean isOpenAppend()>();

        if $z1 == 0 goto label4;

        virtualinvoke r7.<org.apache.sshd.server.subsystem.sftp.FileHandle: void append(byte[],int,int)>(r8, i2, i0);

        goto label5;

     label4:
        virtualinvoke r7.<org.apache.sshd.server.subsystem.sftp.FileHandle: void write(byte[],int,int,long)>(r8, i2, i0, l3);

     label5:
        r9 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.subsystem.sftp.SftpEventListener getSftpEventListenerProxy()>();

        $r10 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        interfaceinvoke r9.<org.apache.sshd.server.subsystem.sftp.SftpEventListener: void write(org.apache.sshd.server.session.ServerSession,java.lang.String,org.apache.sshd.server.subsystem.sftp.FileHandle,long,byte[],int,int)>($r10, r1, r7, l3, r8, i2, i0);

        return;
    }

    protected void doRead(org.apache.sshd.common.util.buffer.Buffer, int) throws java.io.IOException
    {
        org.apache.sshd.common.util.buffer.Buffer r0, $r25;
        java.lang.String r1, $r15, varReplacer6902, varReplacer6903, varReplacer6904, varReplacer6905, varReplacer6906, varReplacer6907;
        long l0, $l4, $l7, varReplacer6910;
        int i1, i2, i3, $i5, i6, i8, i9, $i10, i11, varReplacer6908, varReplacer6909;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r2;
        org.apache.sshd.server.session.ServerSession $r3, $r18;
        org.slf4j.Logger $r4, $r17;
        boolean $z0, $z1;
        org.apache.sshd.common.util.Int2IntFunction $r5;
        byte[] $r6;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r13, $r14, $r27;
        java.lang.Object[] $r16;
        java.lang.Integer $r19, $r21, $r22, $r23;
        java.lang.Long $r20;
        java.lang.Throwable $r24, r26;
        java.io.EOFException $r28;
        java.lang.Exception $r29;

        nop;

        r2 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i6 := @parameter1: int;

        r1 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

        l0 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: long getLong()>();

        i1 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: int getInt()>();

        $r3 = virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        varReplacer6907 = "sftp-max-packet-length";

        varReplacer6908 = 16384;

        i2 = staticinvoke <org.apache.sshd.common.PropertyResolverUtils: int getIntProperty(org.apache.sshd.common.PropertyResolver,java.lang.String,int)>($r3, varReplacer6907, varReplacer6908);

        i3 = staticinvoke <java.lang.Math: int min(int,int)>(i1, i2);

        $r4 = r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r4.<org.slf4j.Logger: boolean isTraceEnabled()>();

        if $z0 == 0 goto label1;

        $r17 = r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r16 = newarray (java.lang.Object)[7];

        $r18 = virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r16[0] = $r18;

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6);

        $r16[1] = $r19;

        $r16[2] = r1;

        $r20 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r16[3] = $r20;

        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r16[4] = $r21;

        $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r16[5] = $r22;

        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        $r16[6] = $r23;

        varReplacer6903 = "doRead({})[id={}]({})[offset={}] - req={}, max={}, effective={}";

        interfaceinvoke $r17.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object[])>(varReplacer6903, $r16);

     label1:
        if i3 < 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        $l4 = (long) i3;

        varReplacer6902 = "Illegal requested read length: %d";

        staticinvoke <org.apache.sshd.common.util.ValidateUtils: void checkTrue(boolean,java.lang.String,long)>($z1, varReplacer6902, $l4);

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void clear()>();

        $i5 = i3 + 64;

        $r5 = <org.apache.sshd.common.util.Int2IntFunction: org.apache.sshd.common.util.Int2IntFunction IDENTITY>;

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void ensureCapacity(int,org.apache.sshd.common.util.Int2IntFunction)>($i5, $r5);

        varReplacer6909 = 103;

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putByte(byte)>(varReplacer6909);

        $l7 = (long) i6;

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putInt(long)>($l7);

        i11 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: int wpos()>();

        varReplacer6910 = 0L;

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putInt(long)>(varReplacer6910);

        i8 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: int wpos()>();

        $r6 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: byte[] array()>();

        i9 = virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int doRead(int,java.lang.String,long,int,byte[],int)>(i6, r1, l0, i3, $r6, i8);

        if i9 >= 0 goto label4;

        $r28 = new java.io.EOFException;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        varReplacer6904 = "Unable to read ";

        $r9 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6904);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        varReplacer6906 = " bytes from offset=";

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6906);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        varReplacer6905 = " of ";

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6905);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r28.<java.io.EOFException: void <init>(java.lang.String)>($r15);

        throw $r28;

     label4:
        $i10 = i8 + i9;

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void wpos(int)>($i10);

        staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: void updateLengthPlaceholder(org.apache.sshd.common.util.buffer.Buffer,int,int)>(r0, i11, i9);

     label5:
        goto label7;

     label6:
        $r24 := @caughtexception;

        r26 = $r24;

        $r25 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        $r29 = (java.lang.Exception) r26;

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,java.lang.Exception)>($r25, i6, $r29);

        return;

     label7:
        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void send(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        return;

        catch java.io.IOException from label1 to label5 with label6;
        catch java.lang.RuntimeException from label1 to label5 with label6;
    }

    protected int doRead(int, java.lang.String, long, int, byte[], int) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        java.lang.String r1, varReplacer6911, varReplacer6912;
        java.util.Map $r2;
        java.lang.Object $r3;
        org.apache.sshd.server.subsystem.sftp.Handle r4, $r6;
        org.slf4j.Logger $r5, $r12;
        boolean $z0, $z1;
        int i0, i4, i6, i7;
        long $l1, $l3, l5;
        byte $b2;
        org.apache.sshd.server.subsystem.sftp.FileHandle r7;
        byte[] r8;
        org.apache.sshd.server.subsystem.sftp.SftpEventListener r9;
        org.apache.sshd.server.session.ServerSession $r10, $r13;
        java.lang.Object[] $r11;
        java.lang.Integer $r14, $r16;
        java.lang.Long $r15;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        i7 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        l5 := @parameter2: long;

        i0 := @parameter3: int;

        r8 := @parameter4: byte[];

        i4 := @parameter5: int;

        $r2 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map handles>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (org.apache.sshd.server.subsystem.sftp.Handle) $r3;

        $r5 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r5.<org.slf4j.Logger: boolean isTraceEnabled()>();

        if $z0 == 0 goto label1;

        $r12 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r11 = newarray (java.lang.Object)[6];

        $r13 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r11[0] = $r13;

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i7);

        $r11[1] = $r14;

        $r11[2] = r1;

        $r11[3] = r4;

        $r15 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l5);

        $r11[4] = $r15;

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r11[5] = $r16;

        varReplacer6912 = "doRead({})[id={}] SSH_FXP_READ (handle={}[{}], offset={}, length={})";

        interfaceinvoke $r12.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object[])>(varReplacer6912, $r11);

     label1:
        $l1 = (long) i0;

        $b2 = $l1 cmp 0L;

        if $b2 <= 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        $l3 = (long) i0;

        varReplacer6911 = "Invalid read length: %d";

        staticinvoke <org.apache.sshd.common.util.ValidateUtils: void checkTrue(boolean,java.lang.String,long)>($z1, varReplacer6911, $l3);

        $r6 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.subsystem.sftp.Handle validateHandle(java.lang.String,org.apache.sshd.server.subsystem.sftp.Handle,java.lang.Class)>(r1, r4, class "Lorg/apache/sshd/server/subsystem/sftp/FileHandle;");

        r7 = (org.apache.sshd.server.subsystem.sftp.FileHandle) $r6;

        i6 = virtualinvoke r7.<org.apache.sshd.server.subsystem.sftp.FileHandle: int read(byte[],int,int,long)>(r8, i4, i0, l5);

        r9 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.subsystem.sftp.SftpEventListener getSftpEventListenerProxy()>();

        $r10 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        interfaceinvoke r9.<org.apache.sshd.server.subsystem.sftp.SftpEventListener: void read(org.apache.sshd.server.session.ServerSession,java.lang.String,org.apache.sshd.server.subsystem.sftp.FileHandle,long,byte[],int,int,int)>($r10, r1, r7, l5, r8, i4, i0, i6);

        return i6;
    }

    protected void doClose(org.apache.sshd.common.util.buffer.Buffer, int) throws java.io.IOException
    {
        org.apache.sshd.common.util.buffer.Buffer r0, $r3, $r6;
        java.lang.String r1, varReplacer6914, varReplacer6915;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r2;
        int i0, varReplacer6913;
        java.lang.Throwable $r4, r5;
        java.lang.Exception $r7;

        nop;

        r2 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i0 := @parameter1: int;

        r1 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

     label1:
        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void doClose(int,java.lang.String)>(i0, r1);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r5 = $r4;

        $r6 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        $r7 = (java.lang.Exception) r5;

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,java.lang.Exception)>($r6, i0, $r7);

        return;

     label4:
        $r3 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        varReplacer6913 = 0;

        varReplacer6914 = "";

        varReplacer6915 = "";

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,int,java.lang.String,java.lang.String)>($r3, i0, varReplacer6913, varReplacer6914, varReplacer6914);

        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    protected void doClose(int, java.lang.String) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        java.lang.String r1, varReplacer6916;
        java.util.Map $r2;
        java.lang.Object $r3;
        org.apache.sshd.server.subsystem.sftp.Handle r4, $r6;
        org.slf4j.Logger $r5, $r10;
        boolean $z0;
        org.apache.sshd.server.subsystem.sftp.SftpEventListener r7;
        org.apache.sshd.server.session.ServerSession $r8, $r11;
        java.lang.Object[] $r9;
        int i0;
        java.lang.Integer $r12;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r2 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map handles>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        r4 = (org.apache.sshd.server.subsystem.sftp.Handle) $r3;

        $r5 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r5.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r10 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r9 = newarray (java.lang.Object)[4];

        $r11 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r9[0] = $r11;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r9[1] = $r12;

        $r9[2] = r1;

        $r9[3] = r4;

        varReplacer6916 = "doClose({})[id={}] SSH_FXP_CLOSE (handle={}[{}])";

        interfaceinvoke $r10.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(varReplacer6916, $r9);

     label1:
        $r6 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.subsystem.sftp.Handle validateHandle(java.lang.String,org.apache.sshd.server.subsystem.sftp.Handle,java.lang.Class)>(r1, r4, class "Lorg/apache/sshd/server/subsystem/sftp/Handle;");

        virtualinvoke $r6.<org.apache.sshd.server.subsystem.sftp.Handle: void close()>();

        r7 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.subsystem.sftp.SftpEventListener getSftpEventListenerProxy()>();

        $r8 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        interfaceinvoke r7.<org.apache.sshd.server.subsystem.sftp.SftpEventListener: void close(org.apache.sshd.server.session.ServerSession,java.lang.String,org.apache.sshd.server.subsystem.sftp.Handle)>($r8, r1, r4);

        return;
    }

    protected void doOpen(org.apache.sshd.common.util.buffer.Buffer, int) throws java.io.IOException
    {
        org.apache.sshd.common.util.buffer.Buffer r0, $r4, $r7;
        java.lang.String r1, r3;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r2;
        int $i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10, i11, i12, $i13;
        java.lang.Throwable $r5, r6;
        java.util.Map r8;
        java.lang.Exception $r9;

        nop;

        r2 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i2 := @parameter1: int;

        r1 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

        i8 = 0;

        $i0 = r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int version>;

        if $i0 < 5 goto label01;

        i8 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: int getInt()>();

        if i8 != 0 goto label01;

        i8 = 129;

     label01:
        i9 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: int getInt()>();

        if i9 != 0 goto label02;

        i9 = 1;

     label02:
        $i1 = r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int version>;

        if $i1 >= 5 goto label12;

        i10 = i9;

        i11 = 0;

        $i3 = i10 & 3;

        lookupswitch($i3)
        {
            case 1: goto label03;
            case 2: goto label04;
            default: goto label05;
        };

     label03:
        i8 = i8 | 129;

        goto label06;

     label04:
        i8 = i8 | 258;

        goto label06;

     label05:
        i12 = i8 | 129;

        i8 = i12 | 258;

     label06:
        $i13 = i10 & 4;

        if $i13 == 0 goto label07;

        i8 = i8 | 4;

        i11 = i11 | 24;

     label07:
        $i4 = i10 & 8;

        if $i4 == 0 goto label10;

        $i6 = i10 & 32;

        if $i6 == 0 goto label08;

        i9 = i11 | 0;

        goto label12;

     label08:
        $i7 = i10 & 16;

        if $i7 == 0 goto label09;

        i9 = i11 | 1;

        goto label12;

     label09:
        i9 = i11 | 3;

        goto label12;

     label10:
        $i5 = i10 & 16;

        if $i5 == 0 goto label11;

        i9 = i11 | 4;

        goto label12;

     label11:
        i9 = i11 | 2;

     label12:
        r8 = virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map readAttrs(org.apache.sshd.common.util.buffer.Buffer)>(r0);

     label13:
        r3 = virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.lang.String doOpen(int,java.lang.String,int,int,java.util.Map)>(i2, r1, i9, i8, r8);

     label14:
        goto label16;

     label15:
        $r5 := @caughtexception;

        r6 = $r5;

        $r7 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        $r9 = (java.lang.Exception) r6;

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,java.lang.Exception)>($r7, i2, $r9);

        return;

     label16:
        $r4 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: org.apache.sshd.common.util.buffer.Buffer clear(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendHandle(org.apache.sshd.common.util.buffer.Buffer,int,java.lang.String)>($r4, i2, r3);

        return;

        catch java.io.IOException from label13 to label14 with label15;
        catch java.lang.RuntimeException from label13 to label14 with label15;
    }

    protected java.lang.String doOpen(int, java.lang.String, int, int, java.util.Map) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        org.slf4j.Logger $r1, $r22;
        boolean $z0;
        java.util.Map $r2, r8, $r12;
        int i0, i1, i2, i3, i4, varReplacer6921;
        org.apache.sshd.server.session.ServerSession $r3, $r11, $r23;
        java.lang.String r4, r6, $r20, $r25, $r26, varReplacer6917, varReplacer6918, varReplacer6919, varReplacer6920;
        java.nio.file.Path r5;
        org.apache.sshd.server.subsystem.sftp.FileHandle $r7, r9;
        org.apache.sshd.server.subsystem.sftp.SftpEventListener r10;
        java.lang.IllegalStateException $r14;
        java.lang.StringBuilder $r15, $r16, $r17, $r18, $r19;
        java.lang.Object[] $r21;
        java.lang.Integer $r24;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        i4 := @parameter0: int;

        r4 := @parameter1: java.lang.String;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r8 := @parameter4: java.util.Map;

        $r1 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r1.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r22 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r21 = newarray (java.lang.Object)[6];

        $r23 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r21[0] = $r23;

        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4);

        $r21[1] = $r24;

        $r21[2] = r4;

        $r25 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i3);

        $r21[3] = $r25;

        $r26 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i2);

        $r21[4] = $r26;

        $r21[5] = r8;

        varReplacer6919 = "doOpen({})[id={}] SSH_FXP_OPEN (path={}, access=0x{}, pflags=0x{}, attrs={})";

        interfaceinvoke $r22.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(varReplacer6919, $r21);

     label1:
        $r2 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map handles>;

        i0 = interfaceinvoke $r2.<java.util.Map: int size()>();

        $r3 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        varReplacer6920 = "max-open-handles-per-session";

        varReplacer6921 = 2147483647;

        i1 = staticinvoke <org.apache.sshd.common.PropertyResolverUtils: int getIntProperty(org.apache.sshd.common.PropertyResolver,java.lang.String,int)>($r3, varReplacer6920, varReplacer6921);

        if i0 <= i1 goto label2;

        $r14 = new java.lang.IllegalStateException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        varReplacer6917 = "Too many open handles: current=";

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6917);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        varReplacer6918 = ", max.=";

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6918);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r20);

        throw $r14;

     label2:
        r5 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.nio.file.Path resolveFile(java.lang.String)>(r4);

        r6 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.lang.String generateFileHandle(java.nio.file.Path)>(r5);

        $r7 = new org.apache.sshd.server.subsystem.sftp.FileHandle;

        specialinvoke $r7.<org.apache.sshd.server.subsystem.sftp.FileHandle: void <init>(org.apache.sshd.server.subsystem.sftp.SftpSubsystem,java.nio.file.Path,int,int,java.util.Map)>(r0, r5, i2, i3, r8);

        r9 = $r7;

        r10 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.subsystem.sftp.SftpEventListener getSftpEventListenerProxy()>();

        $r11 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        interfaceinvoke r10.<org.apache.sshd.server.subsystem.sftp.SftpEventListener: void open(org.apache.sshd.server.session.ServerSession,java.lang.String,org.apache.sshd.server.subsystem.sftp.Handle)>($r11, r6, r9);

        $r12 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map handles>;

        interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, r9);

        return r6;
    }

    protected java.lang.String generateFileHandle(java.nio.file.Path)
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        int $i0, $i1, $i2, i3, varReplacer6925, varReplacer6926, varReplacer6927;
        java.lang.IllegalStateException $r1;
        java.lang.StringBuilder $r2, $r3, $r5;
        java.nio.file.Path r4;
        java.lang.String $r6, r10, varReplacer6922, varReplacer6923, varReplacer6924;
        byte[] $r7, $r9;
        org.apache.sshd.common.random.Random $r8;
        java.util.Map $r11;
        boolean $z0, $z1, $z2;
        org.slf4j.Logger $r12, $r14, $r16, $r18;
        java.lang.Object[] $r13, $r17;
        org.apache.sshd.server.session.ServerSession $r15, $r19;
        java.lang.Integer $r20;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r4 := @parameter0: java.nio.file.Path;

        i3 = 0;

     label1:
        $i0 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int maxFileHandleRounds>;

        if i3 >= $i0 goto label5;

        $r8 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.common.random.Random randomizer>;

        $r7 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: byte[] workBuf>;

        $i1 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int fileHandleSize>;

        varReplacer6927 = 0;

        interfaceinvoke $r8.<org.apache.sshd.common.random.Random: void fill(byte[],int,int)>($r7, varReplacer6927, $i1);

        $r9 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: byte[] workBuf>;

        $i2 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int fileHandleSize>;

        varReplacer6925 = 0;

        varReplacer6926 = 0;

        r10 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: java.lang.String printHex(byte[],int,int,char)>($r9, varReplacer6925, $i2, varReplacer6925);

        $r11 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map handles>;

        $z0 = interfaceinvoke $r11.<java.util.Map: boolean containsKey(java.lang.Object)>(r10);

        if $z0 == 0 goto label2;

        $r16 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z2 = interfaceinvoke $r16.<org.slf4j.Logger: boolean isTraceEnabled()>();

        if $z2 == 0 goto label4;

        $r18 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r17 = newarray (java.lang.Object)[4];

        $r19 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r17[0] = $r19;

        $r17[1] = r4;

        $r17[2] = r10;

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        $r17[3] = $r20;

        varReplacer6924 = "generateFileHandle({})[{}] handle={} in use at round {}";

        interfaceinvoke $r18.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object[])>(varReplacer6924, $r17);

        goto label4;

     label2:
        $r12 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z1 = interfaceinvoke $r12.<org.slf4j.Logger: boolean isTraceEnabled()>();

        if $z1 == 0 goto label3;

        $r14 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r13 = newarray (java.lang.Object)[3];

        $r15 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r13[0] = $r15;

        $r13[1] = r4;

        $r13[2] = r10;

        varReplacer6922 = "generateFileHandle({})[{}] {}";

        interfaceinvoke $r14.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object[])>(varReplacer6922, $r13);

     label3:
        return r10;

     label4:
        i3 = i3 + 1;

        goto label1;

     label5:
        $r1 = new java.lang.IllegalStateException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        varReplacer6923 = "Failed to generate a unique file handle for ";

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6923);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        throw $r1;
    }

    protected void doInit(org.apache.sshd.common.util.buffer.Buffer, int) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        org.slf4j.Logger $r1, $r9;
        boolean $z0, $z1;
        org.apache.sshd.common.util.buffer.Buffer r2;
        int i0, $i1, $i2, $i4, varReplacer6929, varReplacer6930;
        java.lang.String r3, r13, varReplacer6928;
        long $l3;
        org.apache.sshd.server.session.ServerSession $r4, $r10;
        byte[] r5;
        java.util.Map $r6;
        java.lang.Object[] $r8;
        java.lang.Integer $r11, $r12;
        org.apache.sshd.server.subsystem.sftp.SftpEventListener r14;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r2 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i0 := @parameter1: int;

        $r1 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r1.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r9 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r8 = newarray (java.lang.Object)[3];

        $r10 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r8[0] = $r10;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r8[1] = $r11;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r8[2] = $r12;

        varReplacer6928 = "doInit({})[id={}] SSH_FXP_INIT (version={})";

        interfaceinvoke $r9.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(varReplacer6928, $r8);

     label1:
        varReplacer6929 = 8;

        r3 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.lang.String checkVersionCompatibility(org.apache.sshd.common.util.buffer.Buffer,int,int,int)>(r2, i0, i0, varReplacer6929);

        $z1 = staticinvoke <org.apache.sshd.common.util.GenericUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z1 == 0 goto label2;

        return;

     label2:
        r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int version> = i0;

     label3:
        $i1 = virtualinvoke r2.<org.apache.sshd.common.util.buffer.Buffer: int available()>();

        if $i1 <= 0 goto label4;

        r13 = virtualinvoke r2.<org.apache.sshd.common.util.buffer.Buffer: java.lang.String getString()>();

        r5 = virtualinvoke r2.<org.apache.sshd.common.util.buffer.Buffer: byte[] getBytes()>();

        $r6 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map extensions>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r13, r5);

        goto label3;

     label4:
        virtualinvoke r2.<org.apache.sshd.common.util.buffer.Buffer: void clear()>();

        varReplacer6930 = 2;

        virtualinvoke r2.<org.apache.sshd.common.util.buffer.Buffer: void putByte(byte)>(varReplacer6930);

        $i2 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int version>;

        $l3 = (long) $i2;

        virtualinvoke r2.<org.apache.sshd.common.util.buffer.Buffer: void putInt(long)>($l3);

        virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void appendExtensions(org.apache.sshd.common.util.buffer.Buffer,java.lang.String)>(r2, r3);

        r14 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.subsystem.sftp.SftpEventListener getSftpEventListenerProxy()>();

        $r4 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $i4 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int version>;

        interfaceinvoke r14.<org.apache.sshd.server.subsystem.sftp.SftpEventListener: void initialized(org.apache.sshd.server.session.ServerSession,int)>($r4, $i4);

        virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void send(org.apache.sshd.common.util.buffer.Buffer)>(r2);

        return;
    }

    protected void appendExtensions(org.apache.sshd.common.util.buffer.Buffer, java.lang.String)
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        org.apache.sshd.common.util.buffer.Buffer r1;
        java.lang.String r2, $r4, r14, varReplacer6931;
        org.apache.sshd.server.session.ServerSession $r3, $r19;
        java.util.Map $r5, r7;
        int i1;
        java.lang.Object r8, $r11, $r13, $r15, $r20;
        java.util.Set $r9;
        java.util.Iterator r10;
        java.util.Map$Entry r12;
        org.apache.sshd.common.OptionalFeature r16;
        boolean $z0, $z2, $z3;
        org.slf4j.Logger $r17, $r18;
        java.util.ArrayList $r21;
        java.util.List $r22;
        java.util.Collection $r23, $r24;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r1 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void appendVersionsExtension(org.apache.sshd.common.util.buffer.Buffer,java.lang.String)>(r1, r2);

        $r3 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r4 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.lang.String resolveNewlineValue(org.apache.sshd.server.session.ServerSession)>($r3);

        virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void appendNewlineExtension(org.apache.sshd.common.util.buffer.Buffer,java.lang.String)>(r1, $r4);

        $r5 = staticinvoke <org.apache.sshd.common.config.VersionProperties: java.util.Map getVersionProperties()>();

        virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void appendVendorIdExtension(org.apache.sshd.common.util.buffer.Buffer,java.util.Map)>(r1, $r5);

        virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.List appendOpenSSHExtensions(org.apache.sshd.common.util.buffer.Buffer)>(r1);

        virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int appendAclSupportedExtension(org.apache.sshd.common.util.buffer.Buffer)>(r1);

        r7 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map getSupportedClientExtensions()>();

        i1 = staticinvoke <org.apache.sshd.common.util.GenericUtils: int size(java.util.Map)>(r7);

        if i1 > 0 goto label1;

        $r20 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        goto label2;

     label1:
        $r21 = new java.util.ArrayList;

        $r20 = $r21;

        specialinvoke $r21.<java.util.ArrayList: void <init>(int)>(i1);

     label2:
        r8 = $r20;

        if i1 <= 0 goto label5;

        $r9 = interfaceinvoke r7.<java.util.Map: java.util.Set entrySet()>();

        r10 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z3 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label5;

        $r11 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>();

        r12 = (java.util.Map$Entry) $r11;

        $r13 = interfaceinvoke r12.<java.util.Map$Entry: java.lang.Object getKey()>();

        r14 = (java.lang.String) $r13;

        $r15 = interfaceinvoke r12.<java.util.Map$Entry: java.lang.Object getValue()>();

        r16 = (org.apache.sshd.common.OptionalFeature) $r15;

        $z0 = interfaceinvoke r16.<org.apache.sshd.common.OptionalFeature: boolean isSupported()>();

        if $z0 != 0 goto label4;

        $r17 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z2 = interfaceinvoke $r17.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z2 == 0 goto label3;

        $r18 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r19 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        varReplacer6931 = "appendExtensions({}) skip unsupported extension={}";

        interfaceinvoke $r18.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>(varReplacer6931, $r19, r14);

        goto label3;

     label4:
        $r22 = (java.util.List) r8;

        interfaceinvoke $r22.<java.util.List: boolean add(java.lang.Object)>(r14);

        goto label3;

     label5:
        $r23 = (java.util.Collection) r8;

        virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void appendSupportedExtension(org.apache.sshd.common.util.buffer.Buffer,java.util.Collection)>(r1, $r23);

        $r24 = (java.util.Collection) r8;

        virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void appendSupported2Extension(org.apache.sshd.common.util.buffer.Buffer,java.util.Collection)>(r1, $r24);

        return;
    }

    protected int appendAclSupportedExtension(org.apache.sshd.common.util.buffer.Buffer)
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        org.apache.sshd.server.session.ServerSession r1;
        java.util.Collection r2;
        int i0, i1;
        org.slf4j.Logger $r3, $r5;
        boolean $z0;
        org.apache.sshd.common.util.buffer.Buffer r4;
        long $l2, varReplacer6932;
        java.util.Set $r6;
        java.lang.String varReplacer6933, varReplacer6934;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r4 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        r1 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        r2 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Collection resolveAclSupportedCapabilities(org.apache.sshd.server.session.ServerSession)>(r1);

        i0 = staticinvoke <org.apache.sshd.common.subsystem.sftp.extensions.AclSupportedParser$AclCapabilities: int constructAclCapabilities(java.util.Collection)>(r2);

        if i0 == 0 goto label2;

        $r3 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r3.<org.slf4j.Logger: boolean isTraceEnabled()>();

        if $z0 == 0 goto label1;

        $r5 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r6 = staticinvoke <org.apache.sshd.common.subsystem.sftp.extensions.AclSupportedParser$AclCapabilities: java.util.Set decodeAclCapabilities(int)>(i0);

        varReplacer6934 = "appendAclSupportedExtension({}) capabilities={}";

        interfaceinvoke $r5.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>(varReplacer6934, r1, $r6);

     label1:
        varReplacer6933 = "acl-supported";

        virtualinvoke r4.<org.apache.sshd.common.util.buffer.Buffer: void putString(java.lang.String)>(varReplacer6933);

        i1 = virtualinvoke r4.<org.apache.sshd.common.util.buffer.Buffer: int wpos()>();

        varReplacer6932 = 0L;

        virtualinvoke r4.<org.apache.sshd.common.util.buffer.Buffer: void putInt(long)>(varReplacer6932);

        $l2 = (long) i0;

        virtualinvoke r4.<org.apache.sshd.common.util.buffer.Buffer: void putInt(long)>($l2);

        staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: int updateLengthPlaceholder(org.apache.sshd.common.util.buffer.Buffer,int)>(r4, i1);

     label2:
        return i0;
    }

    protected java.util.Collection resolveAclSupportedCapabilities(org.apache.sshd.server.session.ServerSession)
    {
        org.apache.sshd.server.session.ServerSession r0;
        java.lang.String r1, r8, varReplacer6935, varReplacer6936, varReplacer6937;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r2;
        org.slf4j.Logger $r3, $r13;
        boolean $z0;
        int $i0, $i1, i2, i3, varReplacer6938;
        java.lang.String[] r4, r7;
        java.util.HashSet $r5, r6;
        java.lang.Integer $r9, r11;
        java.lang.Object $r10;
        java.util.Set $r12, $r14;

        nop;

        r2 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.server.session.ServerSession;

        varReplacer6936 = "sftp-acl-supported-mask";

        r1 = staticinvoke <org.apache.sshd.common.PropertyResolverUtils: java.lang.String getString(org.apache.sshd.common.PropertyResolver,java.lang.String)>(r0, varReplacer6936);

        if r1 != null goto label1;

        $r14 = <org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Set DEFAULT_ACL_SUPPORTED_MASK>;

        return $r14;

     label1:
        $r3 = r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r3.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label2;

        $r13 = r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        varReplacer6937 = "resolveAclSupportedCapabilities({}) override=\'{}\'";

        interfaceinvoke $r13.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>(varReplacer6937, r0, r1);

     label2:
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label3;

        $r12 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();

        return $r12;

     label3:
        varReplacer6938 = 44;

        r4 = staticinvoke <org.apache.sshd.common.util.GenericUtils: java.lang.String[] split(java.lang.String,char)>(r1, varReplacer6938);

        $r5 = new java.util.HashSet;

        $i1 = lengthof r4;

        specialinvoke $r5.<java.util.HashSet: void <init>(int)>($i1);

        r6 = $r5;

        r7 = r4;

        i2 = lengthof r7;

        i3 = 0;

     label4:
        if i3 >= i2 goto label5;

        r8 = r7[i3];

        $r9 = staticinvoke <org.apache.sshd.common.subsystem.sftp.extensions.AclSupportedParser$AclCapabilities: java.lang.Integer getAclCapabilityValue(java.lang.String)>(r8);

        varReplacer6935 = "Unknown ACL capability: %s";

        $r10 = staticinvoke <org.apache.sshd.common.util.ValidateUtils: java.lang.Object checkNotNull(java.lang.Object,java.lang.String,java.lang.Object)>($r9, varReplacer6935, r8);

        r11 = (java.lang.Integer) $r10;

        interfaceinvoke r6.<java.util.Set: boolean add(java.lang.Object)>(r11);

        i3 = i3 + 1;

        goto label4;

     label5:
        return r6;
    }

    protected java.util.List appendOpenSSHExtensions(org.apache.sshd.common.util.buffer.Buffer)
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        org.apache.sshd.server.session.ServerSession $r1;
        java.util.List r2;
        boolean $z0, $z1;
        java.util.Iterator r3;
        java.lang.Object $r4;
        org.apache.sshd.common.subsystem.sftp.extensions.openssh.AbstractOpenSSHExtensionParser$OpenSSHExtension r5;
        org.apache.sshd.common.util.buffer.Buffer r6;
        java.lang.String $r7, $r8;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r6 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        $r1 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        r2 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.List resolveOpenSSHExtensions(org.apache.sshd.server.session.ServerSession)>($r1);

        $z0 = staticinvoke <org.apache.sshd.common.util.GenericUtils: boolean isEmpty(java.util.Collection)>(r2);

        if $z0 == 0 goto label1;

        return r2;

     label1:
        r3 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.sshd.common.subsystem.sftp.extensions.openssh.AbstractOpenSSHExtensionParser$OpenSSHExtension) $r4;

        $r7 = virtualinvoke r5.<org.apache.sshd.common.subsystem.sftp.extensions.openssh.AbstractOpenSSHExtensionParser$OpenSSHExtension: java.lang.String getName()>();

        virtualinvoke r6.<org.apache.sshd.common.util.buffer.Buffer: void putString(java.lang.String)>($r7);

        $r8 = virtualinvoke r5.<org.apache.sshd.common.subsystem.sftp.extensions.openssh.AbstractOpenSSHExtensionParser$OpenSSHExtension: java.lang.String getVersion()>();

        virtualinvoke r6.<org.apache.sshd.common.util.buffer.Buffer: void putString(java.lang.String)>($r8);

        goto label2;

     label3:
        return r2;
    }

    protected java.util.List resolveOpenSSHExtensions(org.apache.sshd.server.session.ServerSession)
    {
        org.apache.sshd.server.session.ServerSession r0;
        java.lang.String r1, r8, r9, r13, r14, $r15, $r16, $r18, varReplacer6939, varReplacer6940, varReplacer6941, varReplacer6943;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r2;
        org.slf4j.Logger $r3, $r11;
        boolean $z0, $z1, $z3;
        java.lang.String[] r4, r7;
        int i0, i1, i2, $i3, $i4, i5, $i6, varReplacer6942, varReplacer6944, varReplacer6945;
        java.util.ArrayList $r5, r6;
        java.util.List $r10, $r12;
        org.apache.sshd.common.subsystem.sftp.extensions.openssh.AbstractOpenSSHExtensionParser$OpenSSHExtension $r17;

        nop;

        r2 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.server.session.ServerSession;

        varReplacer6939 = "sftp-openssh-extensions";

        r1 = staticinvoke <org.apache.sshd.common.PropertyResolverUtils: java.lang.String getString(org.apache.sshd.common.PropertyResolver,java.lang.String)>(r0, varReplacer6939);

        if r1 != null goto label1;

        $r12 = <org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.List DEFAULT_OPEN_SSH_EXTENSIONS>;

        return $r12;

     label1:
        $r3 = r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r3.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label2;

        $r11 = r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        varReplacer6940 = "resolveOpenSSHExtensions({}) override=\'{}\'";

        interfaceinvoke $r11.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>(varReplacer6940, r0, r1);

     label2:
        varReplacer6944 = 44;

        r4 = staticinvoke <org.apache.sshd.common.util.GenericUtils: java.lang.String[] split(java.lang.String,char)>(r1, varReplacer6944);

        i0 = staticinvoke <org.apache.sshd.common.util.GenericUtils: int length(java.lang.Object[])>(r4);

        if i0 > 0 goto label3;

        $r10 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r10;

     label3:
        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>(int)>(i0);

        r6 = $r5;

        r7 = r4;

        i1 = lengthof r7;

        i5 = 0;

     label4:
        if i5 >= i1 goto label9;

        r13 = r7[i5];

        r14 = staticinvoke <org.apache.sshd.common.util.GenericUtils: java.lang.String trimToEmpty(java.lang.String)>(r13);

        $z1 = staticinvoke <org.apache.sshd.common.util.GenericUtils: boolean isEmpty(java.lang.CharSequence)>(r14);

        if $z1 == 0 goto label5;

        goto label8;

     label5:
        varReplacer6945 = 61;

        i2 = virtualinvoke r14.<java.lang.String: int indexOf(int)>(varReplacer6945);

        if i2 <= 0 goto label6;

        $i3 = virtualinvoke r14.<java.lang.String: int length()>();

        $i4 = $i3 - 1;

        if i2 >= $i4 goto label6;

        $z3 = 1;

        goto label7;

     label6:
        $z3 = 0;

     label7:
        varReplacer6941 = "Malformed OpenSSH extension spec: %s";

        staticinvoke <org.apache.sshd.common.util.ValidateUtils: void checkTrue(boolean,java.lang.String,java.lang.Object)>($z3, varReplacer6941, r14);

        varReplacer6942 = 0;

        $r15 = virtualinvoke r14.<java.lang.String: java.lang.String substring(int,int)>(varReplacer6942, i2);

        r8 = staticinvoke <org.apache.sshd.common.util.GenericUtils: java.lang.String trimToEmpty(java.lang.String)>($r15);

        $i6 = i2 + 1;

        $r16 = virtualinvoke r14.<java.lang.String: java.lang.String substring(int)>($i6);

        r9 = staticinvoke <org.apache.sshd.common.util.GenericUtils: java.lang.String trimToEmpty(java.lang.String)>($r16);

        $r17 = new org.apache.sshd.common.subsystem.sftp.extensions.openssh.AbstractOpenSSHExtensionParser$OpenSSHExtension;

        varReplacer6943 = "No version specified for OpenSSH extension %s";

        $r18 = staticinvoke <org.apache.sshd.common.util.ValidateUtils: java.lang.String checkNotNullAndNotEmpty(java.lang.String,java.lang.String,java.lang.Object)>(r9, varReplacer6943, r8);

        specialinvoke $r17.<org.apache.sshd.common.subsystem.sftp.extensions.openssh.AbstractOpenSSHExtensionParser$OpenSSHExtension: void <init>(java.lang.String,java.lang.String)>(r8, $r18);

        interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>($r17);

     label8:
        i5 = i5 + 1;

        goto label4;

     label9:
        return r6;
    }

    protected java.util.Map getSupportedClientExtensions()
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        org.apache.sshd.server.session.ServerSession r1;
        java.lang.String r2, r8, varReplacer6946, varReplacer6947;
        org.slf4j.Logger $r3, $r14;
        boolean $z0;
        int $i0, $i1, $i2, i3, i4, varReplacer6948, varReplacer6949;
        java.lang.String[] r4, r7;
        java.util.LinkedHashMap $r5, r6;
        org.apache.sshd.common.OptionalFeature $r9, $r11;
        java.util.Map $r12, $r13, $r15;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r1 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        varReplacer6946 = "sftp-client-extensions";

        r2 = staticinvoke <org.apache.sshd.common.PropertyResolverUtils: java.lang.String getString(org.apache.sshd.common.PropertyResolver,java.lang.String)>(r1, varReplacer6946);

        if r2 != null goto label1;

        $r15 = <org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map DEFAULT_SUPPORTED_CLIENT_EXTENSIONS>;

        return $r15;

     label1:
        $r3 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r3.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label2;

        $r14 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        varReplacer6947 = "getSupportedClientExtensions({}) override=\'{}\'";

        interfaceinvoke $r14.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>(varReplacer6947, r1, r2);

     label2:
        $i0 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i0 > 0 goto label3;

        $r13 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        return $r13;

     label3:
        varReplacer6948 = 44;

        $i1 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(varReplacer6948);

        if $i1 > 0 goto label4;

        $r11 = <org.apache.sshd.common.OptionalFeature: org.apache.sshd.common.OptionalFeature TRUE>;

        $r12 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>(r2, $r11);

        return $r12;

     label4:
        varReplacer6949 = 44;

        r4 = staticinvoke <org.apache.sshd.common.util.GenericUtils: java.lang.String[] split(java.lang.String,char)>(r2, varReplacer6949);

        $r5 = new java.util.LinkedHashMap;

        $i2 = lengthof r4;

        specialinvoke $r5.<java.util.LinkedHashMap: void <init>(int)>($i2);

        r6 = $r5;

        r7 = r4;

        i3 = lengthof r7;

        i4 = 0;

     label5:
        if i4 >= i3 goto label6;

        r8 = r7[i4];

        $r9 = <org.apache.sshd.common.OptionalFeature: org.apache.sshd.common.OptionalFeature TRUE>;

        interfaceinvoke r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r8, $r9);

        i4 = i4 + 1;

        goto label5;

     label6:
        return r6;
    }

    protected void appendVersionsExtension(org.apache.sshd.common.util.buffer.Buffer, java.lang.String)
    {
        java.lang.String r0, varReplacer6950, varReplacer6951;
        boolean $z0, $z1;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r1;
        org.slf4j.Logger $r2, $r4;
        org.apache.sshd.common.util.buffer.Buffer r3;
        org.apache.sshd.server.session.ServerSession $r5;

        nop;

        r1 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r3 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        r0 := @parameter1: java.lang.String;

        $z0 = staticinvoke <org.apache.sshd.common.util.GenericUtils: boolean isEmpty(java.lang.CharSequence)>(r0);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z1 = interfaceinvoke $r2.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z1 == 0 goto label2;

        $r4 = r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r5 = virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        varReplacer6951 = "appendVersionsExtension({}) value={}";

        interfaceinvoke $r4.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>(varReplacer6951, $r5, r0);

     label2:
        varReplacer6950 = "versions";

        virtualinvoke r3.<org.apache.sshd.common.util.buffer.Buffer: void putString(java.lang.String)>(varReplacer6950);

        virtualinvoke r3.<org.apache.sshd.common.util.buffer.Buffer: void putString(java.lang.String)>(r0);

        return;
    }

    protected void appendNewlineExtension(org.apache.sshd.common.util.buffer.Buffer, java.lang.String)
    {
        java.lang.String r0, $r8, varReplacer6953, varReplacer6954;
        boolean $z0, $z1;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r1;
        org.slf4j.Logger $r2, $r4;
        org.apache.sshd.common.util.buffer.Buffer r3;
        org.apache.sshd.server.session.ServerSession $r5;
        java.nio.charset.Charset $r6;
        byte[] $r7;
        int varReplacer6952;

        nop;

        r1 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r3 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        r0 := @parameter1: java.lang.String;

        $z0 = staticinvoke <org.apache.sshd.common.util.GenericUtils: boolean isEmpty(java.lang.CharSequence)>(r0);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z1 = interfaceinvoke $r2.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z1 == 0 goto label2;

        $r4 = r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r5 = virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r6 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r7 = virtualinvoke r0.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r6);

        varReplacer6952 = 58;

        $r8 = staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: java.lang.String printHex(char,byte[])>(varReplacer6952, $r7);

        varReplacer6953 = "appendNewlineExtension({}) value={}";

        interfaceinvoke $r4.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>(varReplacer6953, $r5, $r8);

     label2:
        varReplacer6954 = "newline";

        virtualinvoke r3.<org.apache.sshd.common.util.buffer.Buffer: void putString(java.lang.String)>(varReplacer6954);

        virtualinvoke r3.<org.apache.sshd.common.util.buffer.Buffer: void putString(java.lang.String)>(r0);

        return;
    }

    protected java.lang.String resolveNewlineValue(org.apache.sshd.server.session.ServerSession)
    {
        org.apache.sshd.server.session.ServerSession r0;
        java.lang.String r1, $r2, varReplacer6955;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r3;

        nop;

        r3 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.server.session.ServerSession;

        varReplacer6955 = "sftp-newline";

        r1 = staticinvoke <org.apache.sshd.common.PropertyResolverUtils: java.lang.String getString(org.apache.sshd.common.PropertyResolver,java.lang.String)>(r0, varReplacer6955);

        if r1 != null goto label1;

        $r2 = <org.apache.sshd.common.util.io.IoUtils: java.lang.String EOL>;

        return $r2;

     label1:
        return r1;
    }

    protected void appendVendorIdExtension(org.apache.sshd.common.util.buffer.Buffer, java.util.Map)
    {
        java.util.Map r0, $r4;
        boolean $z0, $z1;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r1;
        org.slf4j.Logger $r2, $r14;
        org.apache.sshd.common.util.buffer.Buffer r3;
        org.apache.sshd.common.PropertyResolver r5;
        int i0;
        java.lang.Class $r6, $r10;
        java.lang.Package $r7;
        java.lang.String $r8, $r9, $r11, $r12, $r13, varReplacer6957, varReplacer6958, varReplacer6959, varReplacer6960, varReplacer6961, varReplacer6962;
        org.apache.sshd.server.session.ServerSession $r15;
        long varReplacer6956, varReplacer6963;

        nop;

        r1 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r3 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        r0 := @parameter1: java.util.Map;

        $z0 = staticinvoke <org.apache.sshd.common.util.GenericUtils: boolean isEmpty(java.util.Map)>(r0);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z1 = interfaceinvoke $r2.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z1 == 0 goto label2;

        $r14 = r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r15 = virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        varReplacer6961 = "appendVendorIdExtension({}): {}";

        interfaceinvoke $r14.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>(varReplacer6961, $r15, r0);

     label2:
        varReplacer6960 = "vendor-id";

        virtualinvoke r3.<org.apache.sshd.common.util.buffer.Buffer: void putString(java.lang.String)>(varReplacer6960);

        $r4 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>(r0);

        r5 = staticinvoke <org.apache.sshd.common.PropertyResolverUtils: org.apache.sshd.common.PropertyResolver toPropertyResolver(java.util.Map)>($r4);

        i0 = virtualinvoke r3.<org.apache.sshd.common.util.buffer.Buffer: int wpos()>();

        varReplacer6956 = 0L;

        virtualinvoke r3.<org.apache.sshd.common.util.buffer.Buffer: void putInt(long)>(varReplacer6956);

        $r6 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.Package getPackage()>();

        $r8 = virtualinvoke $r7.<java.lang.Package: java.lang.String getName()>();

        varReplacer6957 = "groupId";

        $r9 = staticinvoke <org.apache.sshd.common.PropertyResolverUtils: java.lang.String getStringProperty(org.apache.sshd.common.PropertyResolver,java.lang.String,java.lang.String)>(r5, varReplacer6957, $r8);

        virtualinvoke r3.<org.apache.sshd.common.util.buffer.Buffer: void putString(java.lang.String)>($r9);

        $r10 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r11 = virtualinvoke $r10.<java.lang.Class: java.lang.String getSimpleName()>();

        varReplacer6962 = "artifactId";

        $r12 = staticinvoke <org.apache.sshd.common.PropertyResolverUtils: java.lang.String getStringProperty(org.apache.sshd.common.PropertyResolver,java.lang.String,java.lang.String)>(r5, varReplacer6962, $r11);

        virtualinvoke r3.<org.apache.sshd.common.util.buffer.Buffer: void putString(java.lang.String)>($r12);

        varReplacer6958 = "version";

        varReplacer6959 = "SSHD-UNKNOWN";

        $r13 = staticinvoke <org.apache.sshd.common.PropertyResolverUtils: java.lang.String getStringProperty(org.apache.sshd.common.PropertyResolver,java.lang.String,java.lang.String)>(r5, varReplacer6958, varReplacer6959);

        virtualinvoke r3.<org.apache.sshd.common.util.buffer.Buffer: void putString(java.lang.String)>($r13);

        varReplacer6963 = 0L;

        virtualinvoke r3.<org.apache.sshd.common.util.buffer.Buffer: void putLong(long)>(varReplacer6963);

        staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: int updateLengthPlaceholder(org.apache.sshd.common.util.buffer.Buffer,int)>(r3, i0);

        return;
    }

    protected void appendSupportedExtension(org.apache.sshd.common.util.buffer.Buffer, java.util.Collection)
    {
        org.apache.sshd.common.util.buffer.Buffer r0;
        int i0, varReplacer6965;
        java.util.Collection r1;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r2;
        long varReplacer6964, varReplacer6966, varReplacer6967, varReplacer6968, varReplacer6969, varReplacer6971;
        java.lang.String varReplacer6970;

        nop;

        r2 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        r1 := @parameter1: java.util.Collection;

        varReplacer6970 = "supported";

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putString(java.lang.String)>(varReplacer6970);

        i0 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: int wpos()>();

        varReplacer6968 = 0L;

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putInt(long)>(varReplacer6968);

        varReplacer6964 = 701L;

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putInt(long)>(varReplacer6964);

        varReplacer6966 = 0L;

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putInt(long)>(varReplacer6966);

        varReplacer6971 = 63L;

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putInt(long)>(varReplacer6971);

        varReplacer6969 = 0L;

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putInt(long)>(varReplacer6969);

        varReplacer6967 = 0L;

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putInt(long)>(varReplacer6967);

        varReplacer6965 = 0;

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putStringList(java.util.Collection,boolean)>(r1, varReplacer6965);

        staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: int updateLengthPlaceholder(org.apache.sshd.common.util.buffer.Buffer,int)>(r0, i0);

        return;
    }

    protected void appendSupported2Extension(org.apache.sshd.common.util.buffer.Buffer, java.util.Collection)
    {
        org.apache.sshd.common.util.buffer.Buffer r0;
        int i0, varReplacer6973, varReplacer6975, varReplacer6978, varReplacer6981;
        java.util.List $r1;
        java.util.Collection r2;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r3;
        long varReplacer6972, varReplacer6976, varReplacer6977, varReplacer6979, varReplacer6980, varReplacer6982;
        java.lang.String varReplacer6974;

        nop;

        r3 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        r2 := @parameter1: java.util.Collection;

        varReplacer6974 = "supported2";

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putString(java.lang.String)>(varReplacer6974);

        i0 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: int wpos()>();

        varReplacer6976 = 0L;

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putInt(long)>(varReplacer6976);

        varReplacer6977 = 701L;

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putInt(long)>(varReplacer6977);

        varReplacer6982 = 0L;

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putInt(long)>(varReplacer6982);

        varReplacer6972 = 15L;

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putInt(long)>(varReplacer6972);

        varReplacer6979 = 0L;

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putInt(long)>(varReplacer6979);

        varReplacer6980 = 0L;

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putInt(long)>(varReplacer6980);

        varReplacer6973 = 0;

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putShort(int)>(varReplacer6973);

        varReplacer6981 = 0;

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putShort(int)>(varReplacer6981);

        $r1 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        varReplacer6978 = 1;

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putStringList(java.util.Collection,boolean)>($r1, varReplacer6978);

        varReplacer6975 = 1;

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putStringList(java.util.Collection,boolean)>(r2, varReplacer6975);

        staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: int updateLengthPlaceholder(org.apache.sshd.common.util.buffer.Buffer,int)>(r0, i0);

        return;
    }

    protected void sendHandle(org.apache.sshd.common.util.buffer.Buffer, int, java.lang.String) throws java.io.IOException
    {
        org.apache.sshd.common.util.buffer.Buffer r0;
        int i0, varReplacer6983;
        long $l1;
        java.lang.String r1;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r2;

        nop;

        r2 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        varReplacer6983 = 102;

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putByte(byte)>(varReplacer6983);

        $l1 = (long) i0;

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putInt(long)>($l1);

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putString(java.lang.String)>(r1);

        virtualinvoke r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void send(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        return;
    }

    protected void sendAttrs(org.apache.sshd.common.util.buffer.Buffer, int, java.util.Map) throws java.io.IOException
    {
        org.apache.sshd.common.util.buffer.Buffer r0;
        int i0, varReplacer6984;
        long $l1;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r1;
        java.util.Map r2;

        nop;

        r1 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i0 := @parameter1: int;

        r2 := @parameter2: java.util.Map;

        varReplacer6984 = 105;

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putByte(byte)>(varReplacer6984);

        $l1 = (long) i0;

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putInt(long)>($l1);

        virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void writeAttrs(org.apache.sshd.common.util.buffer.Buffer,java.util.Map)>(r0, r2);

        virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void send(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        return;
    }

    protected void sendLink(org.apache.sshd.common.util.buffer.Buffer, int, java.lang.String) throws java.io.IOException
    {
        java.lang.String r0, r1, r2, $r8, varReplacer6986;
        char $c0;
        org.apache.sshd.common.util.buffer.Buffer r3;
        int i1, $i3, $i4, varReplacer6985, varReplacer6987;
        long $l2, varReplacer6988;
        java.util.Map r4;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r5;
        org.apache.sshd.server.session.ServerSession $r6;

        nop;

        r5 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r3 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i1 := @parameter1: int;

        r0 := @parameter2: java.lang.String;

        $c0 = <java.io.File: char separatorChar>;

        varReplacer6985 = 47;

        r1 = virtualinvoke r0.<java.lang.String: java.lang.String replace(char,char)>($c0, varReplacer6985);

        varReplacer6986 = "/";

        r2 = staticinvoke <org.apache.sshd.common.util.SelectorUtils: java.lang.String normalizePath(java.lang.String,java.lang.String)>(r1, varReplacer6986);

        varReplacer6987 = 104;

        virtualinvoke r3.<org.apache.sshd.common.util.buffer.Buffer: void putByte(byte)>(varReplacer6987);

        $l2 = (long) i1;

        virtualinvoke r3.<org.apache.sshd.common.util.buffer.Buffer: void putInt(long)>($l2);

        varReplacer6988 = 1L;

        virtualinvoke r3.<org.apache.sshd.common.util.buffer.Buffer: void putInt(long)>(varReplacer6988);

        virtualinvoke r3.<org.apache.sshd.common.util.buffer.Buffer: void putString(java.lang.String)>(r2);

        r4 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        $i3 = r5.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int version>;

        if $i3 != 3 goto label1;

        $r8 = staticinvoke <org.apache.sshd.common.subsystem.sftp.SftpHelper: java.lang.String getLongName(java.lang.String,java.util.Map)>(r2, r4);

        virtualinvoke r3.<org.apache.sshd.common.util.buffer.Buffer: void putString(java.lang.String)>($r8);

     label1:
        virtualinvoke r5.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void writeAttrs(org.apache.sshd.common.util.buffer.Buffer,java.util.Map)>(r3, r4);

        $i4 = virtualinvoke r5.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int getVersion()>();

        $r6 = virtualinvoke r5.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        staticinvoke <org.apache.sshd.common.subsystem.sftp.SftpHelper: java.lang.Boolean indicateEndOfNamesList(org.apache.sshd.common.util.buffer.Buffer,int,org.apache.sshd.common.PropertyResolver)>(r3, $i4, $r6);

        virtualinvoke r5.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void send(org.apache.sshd.common.util.buffer.Buffer)>(r3);

        return;
    }

    protected void sendPath(org.apache.sshd.common.util.buffer.Buffer, int, java.nio.file.Path, java.util.Map) throws java.io.IOException
    {
        org.apache.sshd.common.util.buffer.Buffer r0;
        int i0, $i3, $i4, $i5, varReplacer6990, varReplacer6992;
        long $l1, varReplacer6991;
        java.lang.String r1, r2, $r7, $r8, r10, varReplacer6989;
        char $c2;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r3;
        java.util.Map r4;
        org.apache.sshd.server.session.ServerSession $r5;
        java.nio.file.Path r9, r11;

        nop;

        r3 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i0 := @parameter1: int;

        r9 := @parameter2: java.nio.file.Path;

        r4 := @parameter3: java.util.Map;

        varReplacer6990 = 104;

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putByte(byte)>(varReplacer6990);

        $l1 = (long) i0;

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putInt(long)>($l1);

        varReplacer6991 = 1L;

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putInt(long)>(varReplacer6991);

        r1 = interfaceinvoke r9.<java.nio.file.Path: java.lang.String toString()>();

        $c2 = <java.io.File: char separatorChar>;

        varReplacer6992 = 47;

        r2 = virtualinvoke r1.<java.lang.String: java.lang.String replace(char,char)>($c2, varReplacer6992);

        varReplacer6989 = "/";

        r10 = staticinvoke <org.apache.sshd.common.util.SelectorUtils: java.lang.String normalizePath(java.lang.String,java.lang.String)>(r2, varReplacer6989);

        $i3 = virtualinvoke r10.<java.lang.String: int length()>();

        if $i3 != 0 goto label1;

        r10 = "/";

     label1:
        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putString(java.lang.String)>(r10);

        $i4 = r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int version>;

        if $i4 != 3 goto label2;

        r11 = virtualinvoke r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.nio.file.Path resolveFile(java.lang.String)>(r10);

        $r7 = virtualinvoke r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.lang.String getShortName(java.nio.file.Path)>(r11);

        $r8 = virtualinvoke r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.lang.String getLongName(java.nio.file.Path,java.lang.String,java.util.Map)>(r11, $r7, r4);

        virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: void putString(java.lang.String)>($r8);

     label2:
        virtualinvoke r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void writeAttrs(org.apache.sshd.common.util.buffer.Buffer,java.util.Map)>(r0, r4);

        $i5 = virtualinvoke r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int getVersion()>();

        $r5 = virtualinvoke r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        staticinvoke <org.apache.sshd.common.subsystem.sftp.SftpHelper: java.lang.Boolean indicateEndOfNamesList(org.apache.sshd.common.util.buffer.Buffer,int,org.apache.sshd.common.PropertyResolver)>(r0, $i5, $r5);

        virtualinvoke r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void send(org.apache.sshd.common.util.buffer.Buffer)>(r0);

        return;
    }

    protected int doReadDir(int, java.lang.String, org.apache.sshd.server.subsystem.sftp.DirectoryHandle, org.apache.sshd.common.util.buffer.Buffer, int) throws java.io.IOException
    {
        java.nio.file.LinkOption[] r0;
        java.util.TreeMap $r1, r2;
        org.apache.sshd.server.subsystem.sftp.DirectoryHandle r3;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.sshd.common.util.buffer.Buffer r4;
        int i0, i1, i2, $i3, varReplacer6994;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r5;
        org.apache.sshd.server.session.ServerSession $r6;
        java.lang.String r7, $r8, varReplacer6993, varReplacer6995;
        java.nio.file.Path $r9, $r10, $r11, r12;
        org.apache.sshd.server.subsystem.sftp.SftpEventListener r13;

        nop;

        r5 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        i1 := @parameter0: int;

        r7 := @parameter1: java.lang.String;

        r3 := @parameter2: org.apache.sshd.server.subsystem.sftp.DirectoryHandle;

        r4 := @parameter3: org.apache.sshd.common.util.buffer.Buffer;

        i0 := @parameter4: int;

        i2 = 0;

        varReplacer6994 = 0;

        r0 = staticinvoke <org.apache.sshd.common.util.io.IoUtils: java.nio.file.LinkOption[] getLinkOptions(boolean)>(varReplacer6994);

        $r1 = new java.util.TreeMap;

        specialinvoke $r1.<java.util.TreeMap: void <init>()>();

        r2 = $r1;

     label1:
        $z0 = virtualinvoke r3.<org.apache.sshd.server.subsystem.sftp.DirectoryHandle: boolean isSendDot()>();

        if $z0 != 0 goto label2;

        $z3 = virtualinvoke r3.<org.apache.sshd.server.subsystem.sftp.DirectoryHandle: boolean isSendDotDot()>();

        if $z3 != 0 goto label2;

        $z4 = virtualinvoke r3.<org.apache.sshd.server.subsystem.sftp.DirectoryHandle: boolean hasNext()>();

        if $z4 == 0 goto label6;

     label2:
        $i3 = virtualinvoke r4.<org.apache.sshd.common.util.buffer.Buffer: int wpos()>();

        if $i3 >= i0 goto label6;

        $z1 = virtualinvoke r3.<org.apache.sshd.server.subsystem.sftp.DirectoryHandle: boolean isSendDot()>();

        if $z1 == 0 goto label3;

        $r11 = virtualinvoke r3.<org.apache.sshd.server.subsystem.sftp.DirectoryHandle: java.nio.file.Path getFile()>();

        varReplacer6993 = ".";

        virtualinvoke r5.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void writeDirEntry(int,org.apache.sshd.server.subsystem.sftp.DirectoryHandle,java.util.Map,org.apache.sshd.common.util.buffer.Buffer,int,java.nio.file.Path,java.lang.String,java.nio.file.LinkOption[])>(i1, r3, r2, r4, i2, $r11, varReplacer6993, r0);

        virtualinvoke r3.<org.apache.sshd.server.subsystem.sftp.DirectoryHandle: void markDotSent()>();

        goto label5;

     label3:
        $z2 = virtualinvoke r3.<org.apache.sshd.server.subsystem.sftp.DirectoryHandle: boolean isSendDotDot()>();

        if $z2 == 0 goto label4;

        $r9 = virtualinvoke r3.<org.apache.sshd.server.subsystem.sftp.DirectoryHandle: java.nio.file.Path getFile()>();

        $r10 = interfaceinvoke $r9.<java.nio.file.Path: java.nio.file.Path getParent()>();

        varReplacer6995 = "..";

        virtualinvoke r5.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void writeDirEntry(int,org.apache.sshd.server.subsystem.sftp.DirectoryHandle,java.util.Map,org.apache.sshd.common.util.buffer.Buffer,int,java.nio.file.Path,java.lang.String,java.nio.file.LinkOption[])>(i1, r3, r2, r4, i2, $r10, varReplacer6995, r0);

        virtualinvoke r3.<org.apache.sshd.server.subsystem.sftp.DirectoryHandle: void markDotDotSent()>();

        goto label5;

     label4:
        r12 = virtualinvoke r3.<org.apache.sshd.server.subsystem.sftp.DirectoryHandle: java.nio.file.Path next()>();

        $r8 = virtualinvoke r5.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.lang.String getShortName(java.nio.file.Path)>(r12);

        virtualinvoke r5.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void writeDirEntry(int,org.apache.sshd.server.subsystem.sftp.DirectoryHandle,java.util.Map,org.apache.sshd.common.util.buffer.Buffer,int,java.nio.file.Path,java.lang.String,java.nio.file.LinkOption[])>(i1, r3, r2, r4, i2, r12, $r8, r0);

     label5:
        i2 = i2 + 1;

        goto label1;

     label6:
        r13 = virtualinvoke r5.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.subsystem.sftp.SftpEventListener getSftpEventListenerProxy()>();

        $r6 = virtualinvoke r5.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        interfaceinvoke r13.<org.apache.sshd.server.subsystem.sftp.SftpEventListener: void read(org.apache.sshd.server.session.ServerSession,java.lang.String,org.apache.sshd.server.subsystem.sftp.DirectoryHandle,java.util.Map)>($r6, r7, r3, r2);

        return i2;
    }

    protected transient void writeDirEntry(int, org.apache.sshd.server.subsystem.sftp.DirectoryHandle, java.util.Map, org.apache.sshd.common.util.buffer.Buffer, int, java.nio.file.Path, java.lang.String, java.nio.file.LinkOption[]) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        java.nio.file.Path r1;
        java.nio.file.LinkOption[] r2;
        java.util.Map r3, r4;
        java.lang.String r5, $r22, r23, $r40, varReplacer6996, varReplacer6997, varReplacer6998, varReplacer6999, varReplacer7000, varReplacer7001, varReplacer7003, varReplacer7004, varReplacer7005, varReplacer7006, varReplacer7007;
        org.apache.sshd.common.util.buffer.Buffer r7;
        int $i0, i1, i2, varReplacer7002;
        org.slf4j.Logger $r8, $r10, $r24, $r26;
        boolean $z0, $z1;
        java.lang.StringBuilder $r9, $r11, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r25, $r27, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39;
        org.apache.sshd.server.session.ServerSession $r12, $r28;
        org.apache.sshd.server.subsystem.sftp.DirectoryHandle r41;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        i1 := @parameter0: int;

        r41 := @parameter1: org.apache.sshd.server.subsystem.sftp.DirectoryHandle;

        r4 := @parameter2: java.util.Map;

        r7 := @parameter3: org.apache.sshd.common.util.buffer.Buffer;

        i2 := @parameter4: int;

        r1 := @parameter5: java.nio.file.Path;

        r5 := @parameter6: java.lang.String;

        r2 := @parameter7: java.nio.file.LinkOption[];

        varReplacer7002 = 65535;

        r3 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map resolveFileAttributes(java.nio.file.Path,int,java.nio.file.LinkOption[])>(r1, varReplacer7002, r2);

        interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, r1);

        virtualinvoke r7.<org.apache.sshd.common.util.buffer.Buffer: void putString(java.lang.String)>(r5);

        $i0 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int version>;

        if $i0 != 3 goto label2;

        r23 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.lang.String getLongName(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption[])>(r1, r5, r2);

        virtualinvoke r7.<org.apache.sshd.common.util.buffer.Buffer: void putString(java.lang.String)>(r23);

        $r24 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z1 = interfaceinvoke $r24.<org.slf4j.Logger: boolean isTraceEnabled()>();

        if $z1 == 0 goto label1;

        $r26 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        varReplacer6996 = "writeDirEntry(";

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6996);

        $r28 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r28);

        varReplacer7004 = ") id=";

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7004);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        varReplacer6998 = ")[";

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6998);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        varReplacer7006 = "] - ";

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7006);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        varReplacer7000 = " [";

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7000);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r23);

        varReplacer6999 = "]: ";

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6999);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r26.<org.slf4j.Logger: void trace(java.lang.String)>($r40);

     label1:
        goto label3;

     label2:
        $r8 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r8.<org.slf4j.Logger: boolean isTraceEnabled()>();

        if $z0 == 0 goto label3;

        $r10 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        varReplacer7007 = "writeDirEntry(";

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7007);

        $r12 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        varReplacer6997 = "(id=";

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6997);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        varReplacer7005 = ")[";

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7005);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        varReplacer7001 = "] - ";

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7001);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        varReplacer7003 = ": ";

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7003);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r10.<org.slf4j.Logger: void trace(java.lang.String)>($r22);

     label3:
        virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void writeAttrs(org.apache.sshd.common.util.buffer.Buffer,java.util.Map)>(r7, r3);

        return;
    }

    protected transient java.lang.String getLongName(java.nio.file.Path, java.lang.String, java.nio.file.LinkOption[]) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        java.nio.file.Path r1;
        java.lang.String r2, $r4;
        java.nio.file.LinkOption[] r3;
        int varReplacer7008;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r1 := @parameter0: java.nio.file.Path;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.nio.file.LinkOption[];

        varReplacer7008 = 1;

        $r4 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.lang.String getLongName(java.nio.file.Path,java.lang.String,boolean,java.nio.file.LinkOption[])>(r1, r2, varReplacer7008, r3);

        return $r4;
    }

    protected transient java.lang.String getLongName(java.nio.file.Path, java.lang.String, boolean, java.nio.file.LinkOption[]) throws java.io.IOException
    {
        boolean z0;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        java.nio.file.Path r1;
        java.lang.String r2, $r3;
        java.nio.file.LinkOption[] r4;
        java.util.Map r5;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r1 := @parameter0: java.nio.file.Path;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        r4 := @parameter3: java.nio.file.LinkOption[];

        if z0 == 0 goto label1;

        r5 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map getAttributes(java.nio.file.Path,java.nio.file.LinkOption[])>(r1, r4);

        goto label2;

     label1:
        r5 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

     label2:
        $r3 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.lang.String getLongName(java.nio.file.Path,java.lang.String,java.util.Map)>(r1, r2, r5);

        return $r3;
    }

    protected java.lang.String getLongName(java.nio.file.Path, java.lang.String, java.util.Map) throws java.io.IOException
    {
        java.lang.String r0, $r2;
        java.util.Map r1;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r3;
        java.nio.file.Path r4;

        nop;

        r3 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r4 := @parameter0: java.nio.file.Path;

        r0 := @parameter1: java.lang.String;

        r1 := @parameter2: java.util.Map;

        $r2 = staticinvoke <org.apache.sshd.common.subsystem.sftp.SftpHelper: java.lang.String getLongName(java.lang.String,java.util.Map)>(r0, r1);

        return $r2;
    }

    protected java.lang.String getShortName(java.nio.file.Path) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        java.nio.file.Path r1, r2, r8, r9, r10;
        int i0, varReplacer7010;
        boolean $z0;
        java.lang.String $r3, $r4, $r5, $r6, $r7, varReplacer7009;
        char $c1;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r1 := @parameter0: java.nio.file.Path;

        r2 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.nio.file.Path normalize(java.nio.file.Path)>(r1);

        i0 = interfaceinvoke r2.<java.nio.file.Path: int getNameCount()>();

        $z0 = staticinvoke <org.apache.sshd.common.util.OsUtils: boolean isUNIX()>();

        if $z0 == 0 goto label4;

        r9 = interfaceinvoke r1.<java.nio.file.Path: java.nio.file.Path getFileName()>();

        if r9 != null goto label1;

        varReplacer7009 = ".";

        r8 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.nio.file.Path resolveFile(java.lang.String)>(varReplacer7009);

        r9 = interfaceinvoke r8.<java.nio.file.Path: java.nio.file.Path getFileName()>();

     label1:
        if r9 != null goto label2;

        if i0 <= 0 goto label2;

        r9 = interfaceinvoke r2.<java.nio.file.Path: java.nio.file.Path getFileName()>();

     label2:
        if r9 == null goto label3;

        $r7 = interfaceinvoke r9.<java.nio.file.Path: java.lang.String toString()>();

        return $r7;

     label3:
        $r6 = interfaceinvoke r2.<java.nio.file.Path: java.lang.String toString()>();

        return $r6;

     label4:
        if i0 <= 0 goto label5;

        r10 = interfaceinvoke r2.<java.nio.file.Path: java.nio.file.Path getFileName()>();

        $r5 = interfaceinvoke r10.<java.nio.file.Path: java.lang.String toString()>();

        return $r5;

     label5:
        $r3 = interfaceinvoke r2.<java.nio.file.Path: java.lang.String toString()>();

        $c1 = <java.io.File: char separatorChar>;

        varReplacer7010 = 47;

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String replace(char,char)>($c1, varReplacer7010);

        return $r4;
    }

    protected transient java.util.Map resolveFileAttributes(java.nio.file.Path, int, java.nio.file.LinkOption[]) throws java.io.IOException
    {
        java.nio.file.Path r0;
        java.nio.file.LinkOption[] r1;
        java.lang.Boolean r2;
        boolean $z0;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r3;
        int i0;
        java.util.Map $r4, $r7;
        java.io.FileNotFoundException $r5;
        java.lang.String $r6;

        nop;

        r3 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: java.nio.file.Path;

        i0 := @parameter1: int;

        r1 := @parameter2: java.nio.file.LinkOption[];

        r2 = staticinvoke <org.apache.sshd.common.util.io.IoUtils: java.lang.Boolean checkFileExists(java.nio.file.Path,java.nio.file.LinkOption[])>(r0, r1);

        if r2 != null goto label1;

        $r7 = virtualinvoke r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map handleUnknownStatusFileAttributes(java.nio.file.Path,int,java.nio.file.LinkOption[])>(r0, i0, r1);

        return $r7;

     label1:
        $z0 = virtualinvoke r2.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

        $r5 = new java.io.FileNotFoundException;

        $r6 = interfaceinvoke r0.<java.nio.file.Path: java.lang.String toString()>();

        specialinvoke $r5.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label2:
        $r4 = virtualinvoke r3.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map getAttributes(java.nio.file.Path,int,java.nio.file.LinkOption[])>(r0, i0, r1);

        return $r4;
    }

    protected void writeAttrs(org.apache.sshd.common.util.buffer.Buffer, java.util.Map) throws java.io.IOException
    {
        org.apache.sshd.common.util.buffer.Buffer r0;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r1;
        int $i0;
        java.util.Map r2;

        nop;

        r1 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        r2 := @parameter1: java.util.Map;

        $i0 = virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int getVersion()>();

        staticinvoke <org.apache.sshd.common.subsystem.sftp.SftpHelper: void writeAttrs(org.apache.sshd.common.util.buffer.Buffer,int,java.util.Map)>(r0, $i0, r2);

        return;
    }

    protected transient java.util.Map getAttributes(java.nio.file.Path, java.nio.file.LinkOption[]) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        java.nio.file.Path r1;
        java.nio.file.LinkOption[] r2;
        java.util.Map $r3;
        int varReplacer7011;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r1 := @parameter0: java.nio.file.Path;

        r2 := @parameter1: java.nio.file.LinkOption[];

        varReplacer7011 = 65535;

        $r3 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map getAttributes(java.nio.file.Path,int,java.nio.file.LinkOption[])>(r1, varReplacer7011, r2);

        return $r3;
    }

    protected transient java.util.Map handleUnknownStatusFileAttributes(java.nio.file.Path, int, java.nio.file.LinkOption[]) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        org.apache.sshd.server.subsystem.sftp.UnsupportedAttributePolicy $r1, $r27;
        int[] $r2;
        int $i0, $i1, i2;
        java.lang.StringBuilder $r3, $r5, $r7, $r8, $r10, $r11, $r15, $r16, $r17, $r19, $r21, $r23, $r24, $r25, $r26, $r28;
        org.slf4j.Logger $r4, $r20;
        org.apache.sshd.server.session.ServerSession $r6, $r22;
        java.nio.file.Path r9;
        java.lang.String $r12, $r18, $r29, varReplacer7012, varReplacer7013, varReplacer7014, varReplacer7015, varReplacer7016, varReplacer7017, varReplacer7018;
        java.nio.file.LinkOption[] r13;
        java.nio.file.AccessDeniedException $r14;
        java.util.Map $r30;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r9 := @parameter0: java.nio.file.Path;

        i2 := @parameter1: int;

        r13 := @parameter2: java.nio.file.LinkOption[];

        $r2 = <org.apache.sshd.server.subsystem.sftp.SftpSubsystem$4: int[] $SwitchMap$org$apache$sshd$server$subsystem$sftp$UnsupportedAttributePolicy>;

        $r1 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.subsystem.sftp.UnsupportedAttributePolicy unsupportedAttributePolicy>;

        $i0 = virtualinvoke $r1.<org.apache.sshd.server.subsystem.sftp.UnsupportedAttributePolicy: int ordinal()>();

        $i1 = $r2[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            default: goto label4;
        };

     label1:
        goto label5;

     label2:
        $r14 = new java.nio.file.AccessDeniedException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        varReplacer7016 = "Cannot determine existence for attributes of ";

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7016);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r9);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.nio.file.AccessDeniedException: void <init>(java.lang.String)>($r18);

        throw $r14;

     label3:
        $r4 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        varReplacer7015 = "handleUnknownStatusFileAttributes(";

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7015);

        $r6 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        varReplacer7012 = ")[";

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7012);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r9);

        varReplacer7017 = "] cannot determine existence";

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7017);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<org.slf4j.Logger: void warn(java.lang.String)>($r12);

        goto label5;

     label4:
        $r20 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        varReplacer7013 = "handleUnknownStatusFileAttributes(";

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7013);

        $r22 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r22);

        varReplacer7014 = ")[";

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7014);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r9);

        varReplacer7018 = "] unknown policy: ";

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7018);

        $r27 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.subsystem.sftp.UnsupportedAttributePolicy unsupportedAttributePolicy>;

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r20.<org.slf4j.Logger: void warn(java.lang.String)>($r29);

     label5:
        $r30 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map getAttributes(java.nio.file.Path,int,java.nio.file.LinkOption[])>(r9, i2, r13);

        return $r30;
    }

    protected transient java.util.Map getAttributes(java.nio.file.Path, int, java.nio.file.LinkOption[]) throws java.io.IOException
    {
        java.nio.file.Path r0;
        java.nio.file.FileSystem r1;
        java.util.Set r2;
        java.util.Comparator $r4;
        java.util.TreeMap r5, $r22;
        boolean $z0, $z1, $z2, $z4;
        int $i0, i1, $i2, $i3;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r7;
        java.nio.file.LinkOption[] r8;
        java.lang.Object $r9, $r11, r16;
        java.util.Map r10, r21;
        java.lang.StringBuilder $r13, $r14, $r24;
        java.lang.String $r15, r18, r20, varReplacer7019, varReplacer7020;
        java.util.Iterator r17, r19;
        java.util.ArrayList $r23;
        java.util.Collection $r25, $r26;

        nop;

        r7 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: java.nio.file.Path;

        i1 := @parameter1: int;

        r8 := @parameter2: java.nio.file.LinkOption[];

        r1 = interfaceinvoke r0.<java.nio.file.Path: java.nio.file.FileSystem getFileSystem()>();

        r2 = virtualinvoke r1.<java.nio.file.FileSystem: java.util.Set supportedFileAttributeViews()>();

        $r22 = new java.util.TreeMap;

        $r4 = <java.lang.String: java.util.Comparator CASE_INSENSITIVE_ORDER>;

        specialinvoke $r22.<java.util.TreeMap: void <init>(java.util.Comparator)>($r4);

        r5 = $r22;

        $z0 = staticinvoke <org.apache.sshd.common.util.GenericUtils: boolean isEmpty(java.util.Collection)>(r2);

        if $z0 == 0 goto label1;

        r16 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        goto label4;

     label1:
        varReplacer7020 = "unix";

        $z1 = interfaceinvoke r2.<java.util.Collection: boolean contains(java.lang.Object)>(varReplacer7020);

        if $z1 == 0 goto label2;

        r16 = <org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.List DEFAULT_UNIX_VIEW>;

        goto label4;

     label2:
        $r23 = new java.util.ArrayList;

        $i0 = interfaceinvoke r2.<java.util.Collection: int size()>();

        specialinvoke $r23.<java.util.ArrayList: void <init>(int)>($i0);

        r16 = $r23;

        r17 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z2 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        $r11 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>();

        r18 = (java.lang.String) $r11;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        varReplacer7019 = ":*";

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7019);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $r25 = (java.util.Collection) r16;

        interfaceinvoke $r25.<java.util.Collection: boolean add(java.lang.Object)>($r15);

        goto label3;

     label4:
        $r26 = (java.util.Collection) r16;

        r19 = interfaceinvoke $r26.<java.util.Collection: java.util.Iterator iterator()>();

     label5:
        $z4 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label7;

        $r9 = interfaceinvoke r19.<java.util.Iterator: java.lang.Object next()>();

        r20 = (java.lang.String) $r9;

        r10 = virtualinvoke r7.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map readFileAttributes(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption[])>(r0, r20, r8);

        $i3 = staticinvoke <org.apache.sshd.common.util.GenericUtils: int size(java.util.Map)>(r10);

        if $i3 <= 0 goto label6;

        interfaceinvoke r5.<java.util.Map: void putAll(java.util.Map)>(r10);

     label6:
        goto label5;

     label7:
        r21 = virtualinvoke r7.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map resolveMissingFileAttributes(java.nio.file.Path,int,java.util.Map,java.nio.file.LinkOption[])>(r0, i1, r5, r8);

        $i2 = staticinvoke <org.apache.sshd.common.util.GenericUtils: int size(java.util.Map)>(r21);

        if $i2 <= 0 goto label8;

        interfaceinvoke r5.<java.util.Map: void putAll(java.util.Map)>(r21);

     label8:
        return r5;
    }

    protected transient java.util.Map resolveMissingFileAttributes(java.nio.file.Path, int, java.util.Map, java.nio.file.LinkOption[]) throws java.io.IOException
    {
        java.util.Map $r0, $r3, r8;
        java.util.Set $r1;
        java.util.Iterator r2;
        java.lang.Object $r4, $r6, r9, $r10, $r43, r44;
        java.util.Map$Entry r5;
        java.lang.String r7, $r35, $r40, $r41, varReplacer7021, varReplacer7022, varReplacer7023, varReplacer7024, varReplacer7025, varReplacer7026;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.sshd.common.util.io.FileInfoExtractor r11;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r12;
        java.nio.file.Path r13;
        java.nio.file.LinkOption[] r14;
        org.slf4j.Logger $r16, $r18, $r23, $r24, $r26, $r37;
        java.lang.Object[] $r17, $r36;
        org.apache.sshd.server.session.ServerSession $r19, $r28, $r38;
        java.util.Comparator $r21;
        java.lang.Throwable $r22, r45;
        java.lang.StringBuilder $r27, $r29, $r30, $r31, $r32, $r33, $r34, $r47;
        java.lang.Class $r39;
        int i0;
        java.util.TreeMap r42, $r46;
        java.io.IOException $r48;

        nop;

        r12 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r13 := @parameter0: java.nio.file.Path;

        i0 := @parameter1: int;

        r8 := @parameter2: java.util.Map;

        r14 := @parameter3: java.nio.file.LinkOption[];

        r42 = null;

        $r0 = <org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map FILEATTRS_RESOLVERS>;

        $r1 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z5 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label12;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r4;

        $r6 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        r7 = (java.lang.String) $r6;

        $z0 = staticinvoke <org.apache.sshd.common.util.GenericUtils: boolean isEmpty(java.util.Map)>(r8);

        if $z0 == 0 goto label02;

        $r43 = null;

        goto label03;

     label02:
        $r43 = interfaceinvoke r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7);

     label03:
        r9 = $r43;

        $r10 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        r11 = (org.apache.sshd.common.util.io.FileInfoExtractor) $r10;

     label04:
        r44 = virtualinvoke r12.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.lang.Object resolveMissingFileAttributeValue(java.nio.file.Path,java.lang.String,java.lang.Object,org.apache.sshd.common.util.io.FileInfoExtractor,java.nio.file.LinkOption[])>(r13, r7, r9, r11, r14);

        $z1 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(r44, r9);

        if $z1 == 0 goto label06;

     label05:
        goto label01;

     label06:
        if r42 != null goto label07;

        $r46 = new java.util.TreeMap;

        $r21 = <java.lang.String: java.util.Comparator CASE_INSENSITIVE_ORDER>;

        specialinvoke $r46.<java.util.TreeMap: void <init>(java.util.Comparator)>($r21);

        r42 = $r46;

     label07:
        interfaceinvoke r42.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, r44);

        $r16 = r12.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z2 = interfaceinvoke $r16.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z2 == 0 goto label08;

        $r18 = r12.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r17 = newarray (java.lang.Object)[5];

        $r19 = virtualinvoke r12.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r17[0] = $r19;

        $r17[1] = r13;

        $r17[2] = r7;

        $r17[3] = r9;

        $r17[4] = r44;

        varReplacer7023 = "resolveMissingFileAttributes({})[{}[{}]] replace {} with {}";

        interfaceinvoke $r18.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(varReplacer7023, $r17);

     label08:
        goto label11;

     label09:
        $r22 := @caughtexception;

        r45 = $r22;

        $r23 = r12.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z3 = interfaceinvoke $r23.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z3 == 0 goto label10;

        $r37 = r12.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r36 = newarray (java.lang.Object)[5];

        $r38 = virtualinvoke r12.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r36[0] = $r38;

        $r36[1] = r13;

        $r36[2] = r7;

        $r39 = virtualinvoke r45.<java.lang.Object: java.lang.Class getClass()>();

        $r40 = virtualinvoke $r39.<java.lang.Class: java.lang.String getSimpleName()>();

        $r36[3] = $r40;

        $r48 = (java.io.IOException) r45;

        $r41 = virtualinvoke $r48.<java.io.IOException: java.lang.String getMessage()>();

        $r36[4] = $r41;

        varReplacer7022 = "resolveMissingFileAttributes({})[{}[{}]] failed ({}) to resolve missing value: {}";

        interfaceinvoke $r37.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(varReplacer7022, $r36);

     label10:
        $r24 = r12.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z4 = interfaceinvoke $r24.<org.slf4j.Logger: boolean isTraceEnabled()>();

        if $z4 == 0 goto label11;

        $r26 = r12.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        varReplacer7025 = "resolveMissingFileAttributes(";

        $r27 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7025);

        $r28 = virtualinvoke r12.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r28);

        varReplacer7026 = ")[";

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7026);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r13);

        varReplacer7024 = "[";

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7024);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        varReplacer7021 = "]] missing value resolution failure details";

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7021);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r26.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Throwable)>($r35, r45);

     label11:
        goto label01;

     label12:
        if r42 != null goto label13;

        $r3 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        return $r3;

     label13:
        return r42;

        catch java.io.IOException from label04 to label05 with label09;
        catch java.io.IOException from label06 to label08 with label09;
    }

    protected transient java.lang.Object resolveMissingFileAttributeValue(java.nio.file.Path, java.lang.String, java.lang.Object, org.apache.sshd.common.util.io.FileInfoExtractor, java.nio.file.LinkOption[]) throws java.io.IOException
    {
        java.lang.Object r0, $r4;
        org.apache.sshd.common.util.io.FileInfoExtractor r1;
        java.nio.file.Path r2;
        java.nio.file.LinkOption[] r3;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r5;
        java.lang.String r6;

        nop;

        r5 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r2 := @parameter0: java.nio.file.Path;

        r6 := @parameter1: java.lang.String;

        r0 := @parameter2: java.lang.Object;

        r1 := @parameter3: org.apache.sshd.common.util.io.FileInfoExtractor;

        r3 := @parameter4: java.nio.file.LinkOption[];

        if r0 == null goto label1;

        return r0;

     label1:
        $r4 = interfaceinvoke r1.<org.apache.sshd.common.util.io.FileInfoExtractor: java.lang.Object infoOf(java.nio.file.Path,java.nio.file.LinkOption[])>(r2, r3);

        return $r4;
    }

    protected transient java.util.Map addMissingAttribute(java.nio.file.Path, java.util.Map, java.lang.String, org.apache.sshd.common.util.io.FileInfoExtractor, java.nio.file.LinkOption[]) throws java.io.IOException
    {
        boolean $z0;
        java.lang.String r0;
        org.apache.sshd.common.util.io.FileInfoExtractor r1;
        java.nio.file.Path r2;
        java.nio.file.LinkOption[] r3;
        java.util.Comparator $r6;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r7;
        java.lang.Object r8, $r9, r10, r11;
        java.util.TreeMap $r12;
        java.util.Map $r13, $r14, $r15, $r16, $r17, $r18;

        nop;

        r7 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r2 := @parameter0: java.nio.file.Path;

        r8 := @parameter1: java.util.Map;

        r0 := @parameter2: java.lang.String;

        r1 := @parameter3: org.apache.sshd.common.util.io.FileInfoExtractor;

        r3 := @parameter4: java.nio.file.LinkOption[];

        $r13 = (java.util.Map) r8;

        $z0 = staticinvoke <org.apache.sshd.common.util.GenericUtils: boolean isEmpty(java.util.Map)>($r13);

        if $z0 == 0 goto label1;

        $r9 = null;

        goto label2;

     label1:
        $r14 = (java.util.Map) r8;

        $r9 = interfaceinvoke $r14.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

     label2:
        r10 = $r9;

        if r10 == null goto label3;

        $r15 = (java.util.Map) r8;

        return $r15;

     label3:
        r11 = interfaceinvoke r1.<org.apache.sshd.common.util.io.FileInfoExtractor: java.lang.Object infoOf(java.nio.file.Path,java.nio.file.LinkOption[])>(r2, r3);

        if r11 != null goto label4;

        $r16 = (java.util.Map) r8;

        return $r16;

     label4:
        if r8 != null goto label5;

        $r12 = new java.util.TreeMap;

        $r6 = <java.lang.String: java.util.Comparator CASE_INSENSITIVE_ORDER>;

        specialinvoke $r12.<java.util.TreeMap: void <init>(java.util.Comparator)>($r6);

        r8 = $r12;

     label5:
        $r17 = (java.util.Map) r8;

        interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r11);

        $r18 = (java.util.Map) r8;

        return $r18;
    }

    protected transient java.util.Map readFileAttributes(java.nio.file.Path, java.lang.String, java.nio.file.LinkOption[]) throws java.io.IOException
    {
        java.nio.file.Path r0;
        java.lang.String r1;
        java.nio.file.LinkOption[] r2;
        java.util.Map $r3, $r7;
        java.lang.Throwable $r4, r5;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r6;
        java.io.IOException $r8;

        nop;

        r6 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: java.nio.file.Path;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.nio.file.LinkOption[];

     label1:
        $r3 = staticinvoke <java.nio.file.Files: java.util.Map readAttributes(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption[])>(r0, r1, r2);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        r5 = $r4;

        $r8 = (java.io.IOException) r5;

        $r7 = virtualinvoke r6.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map handleReadFileAttributesException(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption[],java.io.IOException)>(r0, r1, r2, $r8);

        return $r7;

        catch java.io.IOException from label1 to label2 with label3;
    }

    protected java.util.Map handleReadFileAttributesException(java.nio.file.Path, java.lang.String, java.nio.file.LinkOption[], java.io.IOException) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        org.slf4j.Logger $r1, $r5, $r22, $r39;
        boolean $z0;
        org.apache.sshd.server.subsystem.sftp.UnsupportedAttributePolicy $r2, $r28;
        int[] $r3;
        int $i0, $i1;
        java.lang.StringBuilder $r4, $r6, $r8, $r9, $r11, $r12, $r16, $r17, $r19, $r21, $r23, $r24, $r25, $r26, $r27, $r29, $r30, $r33, $r34, $r36, $r38, $r40, $r41, $r42, $r43, $r44;
        java.nio.file.Path r7;
        java.lang.String r10, $r15, $r18, $r20, $r32, $r35, $r37, $r45, varReplacer7027, varReplacer7028, varReplacer7029, varReplacer7030, varReplacer7031, varReplacer7032, varReplacer7033, varReplacer7034, varReplacer7035, varReplacer7036, varReplacer7037, varReplacer7038;
        java.io.IOException r13;
        java.lang.Class $r14, $r31;
        java.nio.file.LinkOption[] r46;
        java.util.Map $r47;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r7 := @parameter0: java.nio.file.Path;

        r10 := @parameter1: java.lang.String;

        r46 := @parameter2: java.nio.file.LinkOption[];

        r13 := @parameter3: java.io.IOException;

        $r1 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r1.<org.slf4j.Logger: boolean isTraceEnabled()>();

        if $z0 == 0 goto label1;

        $r39 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        varReplacer7027 = "handleReadFileAttributesException(";

        $r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7027);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        varReplacer7030 = ")[";

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7030);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        varReplacer7031 = "] details";

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7031);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r39.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Throwable)>($r45, r13);

     label1:
        $r3 = <org.apache.sshd.server.subsystem.sftp.SftpSubsystem$4: int[] $SwitchMap$org$apache$sshd$server$subsystem$sftp$UnsupportedAttributePolicy>;

        $r2 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.subsystem.sftp.UnsupportedAttributePolicy unsupportedAttributePolicy>;

        $i0 = virtualinvoke $r2.<org.apache.sshd.server.subsystem.sftp.UnsupportedAttributePolicy: int ordinal()>();

        $i1 = $r3[$i0];

        tableswitch($i1)
        {
            case 1: goto label2;
            case 2: goto label4;
            case 3: goto label3;
            default: goto label5;
        };

     label2:
        goto label6;

     label3:
        $r5 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        varReplacer7038 = "handleReadFileAttributesException(";

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7038);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        varReplacer7032 = ")[";

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7032);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        varReplacer7033 = "] ";

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7033);

        $r14 = virtualinvoke r13.<java.lang.Object: java.lang.Class getClass()>();

        $r15 = virtualinvoke $r14.<java.lang.Class: java.lang.String getSimpleName()>();

        $r16 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        varReplacer7037 = ": ";

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7037);

        $r18 = virtualinvoke r13.<java.io.IOException: java.lang.String getMessage()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r5.<org.slf4j.Logger: void warn(java.lang.String)>($r20);

        goto label6;

     label4:
        throw r13;

     label5:
        $r22 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        varReplacer7028 = "handleReadFileAttributesException(";

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7028);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        varReplacer7036 = ")[";

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7036);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        varReplacer7029 = "] Unknown policy (";

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7029);

        $r28 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.subsystem.sftp.UnsupportedAttributePolicy unsupportedAttributePolicy>;

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r28);

        varReplacer7034 = ") for ";

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7034);

        $r31 = virtualinvoke r13.<java.lang.Object: java.lang.Class getClass()>();

        $r32 = virtualinvoke $r31.<java.lang.Class: java.lang.String getSimpleName()>();

        $r33 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        varReplacer7035 = ": ";

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7035);

        $r35 = virtualinvoke r13.<java.io.IOException: java.lang.String getMessage()>();

        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r22.<org.slf4j.Logger: void warn(java.lang.String)>($r37);

     label6:
        $r47 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        return $r47;
    }

    protected void doSetAttributes(java.nio.file.Path, java.util.Map) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        org.apache.sshd.server.subsystem.sftp.SftpEventListener r1;
        org.apache.sshd.server.session.ServerSession r2;
        java.nio.file.Path r3;
        java.util.Map r4;
        java.nio.file.LinkOption[] $r5;
        java.lang.Throwable $r6, r7;
        null_type varReplacer7039;
        int varReplacer7040;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r3 := @parameter0: java.nio.file.Path;

        r4 := @parameter1: java.util.Map;

        r1 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.subsystem.sftp.SftpEventListener getSftpEventListenerProxy()>();

        r2 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        interfaceinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpEventListener: void modifyingAttributes(org.apache.sshd.server.session.ServerSession,java.nio.file.Path,java.util.Map)>(r2, r3, r4);

     label1:
        varReplacer7040 = 0;

        $r5 = staticinvoke <org.apache.sshd.common.util.io.IoUtils: java.nio.file.LinkOption[] getLinkOptions(boolean)>(varReplacer7040);

        virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void setFileAttributes(java.nio.file.Path,java.util.Map,java.nio.file.LinkOption[])>(r3, r4, $r5);

        varReplacer7039 = null;

        interfaceinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpEventListener: void modifiedAttributes(org.apache.sshd.server.session.ServerSession,java.nio.file.Path,java.util.Map,java.lang.Throwable)>(r2, r3, r4, varReplacer7039);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        r7 = $r6;

        interfaceinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpEventListener: void modifiedAttributes(org.apache.sshd.server.session.ServerSession,java.nio.file.Path,java.util.Map,java.lang.Throwable)>(r2, r3, r4, r7);

        throw r7;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    protected transient void setFileAttributes(java.nio.file.Path, java.util.Map, java.nio.file.LinkOption[]) throws java.io.IOException
    {
        java.util.Comparator $r1;
        java.util.TreeSet r2, $r34;
        java.util.Map r3;
        java.util.Set $r4;
        java.util.Iterator r5;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r6;
        java.lang.Object $r7, $r9, r27;
        java.util.Map$Entry r8;
        java.lang.String r10, r28, r29, varReplacer7041, varReplacer7042, varReplacer7043, varReplacer7044, varReplacer7045, varReplacer7046, varReplacer7047, varReplacer7048, varReplacer7049, varReplacer7050, varReplacer7051;
        int $i0, $i3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        java.nio.file.Path r11;
        java.nio.file.LinkOption[] r12;
        java.nio.file.attribute.GroupPrincipal $r13;
        java.nio.file.attribute.UserPrincipal $r14;
        java.lang.Number $r15;
        long l1;
        java.lang.Object[] $r16;
        java.nio.file.StandardOpenOption $r17;
        java.nio.channels.FileChannel r18;
        java.lang.Exception $r20, r33;
        java.lang.Throwable $r21, r22, r23, $r24, $r25, $r26, r30, r31, r32;
        byte b2;
        java.nio.file.OpenOption[] $r35;

        nop;

        r6 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r11 := @parameter0: java.nio.file.Path;

        r3 := @parameter1: java.util.Map;

        r12 := @parameter2: java.nio.file.LinkOption[];

        $r34 = new java.util.TreeSet;

        $r1 = <java.lang.String: java.util.Comparator CASE_INSENSITIVE_ORDER>;

        specialinvoke $r34.<java.util.TreeSet: void <init>(java.util.Comparator)>($r1);

        r2 = $r34;

        $r4 = interfaceinvoke r3.<java.util.Map: java.util.Set entrySet()>();

        r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z11 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z11 == 0 goto label45;

        $r7 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.util.Map$Entry) $r7;

        $r9 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getKey()>();

        r10 = (java.lang.String) $r9;

        r27 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getValue()>();

        r28 = null;

        r29 = r10;

        b2 = -1;

        $i0 = virtualinvoke r29.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case -1820889799: goto label12;
            case -1540361492: goto label10;
            case -932915833: goto label11;
            case 96394: goto label08;
            case 102338: goto label04;
            case 115792: goto label03;
            case 3530753: goto label02;
            case 98629247: goto label06;
            case 106164915: goto label05;
            case 1133704324: goto label07;
            case 1586015820: goto label09;
            default: goto label13;
        };

     label02:
        varReplacer7049 = "size";

        $z4 = virtualinvoke r29.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer7049);

        if $z4 == 0 goto label13;

        b2 = 0;

        goto label13;

     label03:
        varReplacer7046 = "uid";

        $z5 = virtualinvoke r29.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer7046);

        if $z5 == 0 goto label13;

        b2 = 1;

        goto label13;

     label04:
        varReplacer7050 = "gid";

        $z6 = virtualinvoke r29.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer7050);

        if $z6 == 0 goto label13;

        b2 = 2;

        goto label13;

     label05:
        varReplacer7041 = "owner";

        $z2 = virtualinvoke r29.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer7041);

        if $z2 == 0 goto label13;

        b2 = 3;

        goto label13;

     label06:
        varReplacer7047 = "group";

        $z3 = virtualinvoke r29.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer7047);

        if $z3 == 0 goto label13;

        b2 = 4;

        goto label13;

     label07:
        varReplacer7051 = "permissions";

        $z1 = virtualinvoke r29.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer7051);

        if $z1 == 0 goto label13;

        b2 = 5;

        goto label13;

     label08:
        varReplacer7045 = "acl";

        $z7 = virtualinvoke r29.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer7045);

        if $z7 == 0 goto label13;

        b2 = 6;

        goto label13;

     label09:
        varReplacer7043 = "creationTime";

        $z0 = virtualinvoke r29.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer7043);

        if $z0 == 0 goto label13;

        b2 = 7;

        goto label13;

     label10:
        varReplacer7048 = "lastModifiedTime";

        $z9 = virtualinvoke r29.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer7048);

        if $z9 == 0 goto label13;

        b2 = 8;

        goto label13;

     label11:
        varReplacer7042 = "lastAccessTime";

        $z8 = virtualinvoke r29.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer7042);

        if $z8 == 0 goto label13;

        b2 = 9;

        goto label13;

     label12:
        varReplacer7044 = "extended";

        $z10 = virtualinvoke r29.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer7044);

        if $z10 == 0 goto label13;

        b2 = 10;

     label13:
        tableswitch(b2)
        {
            case 0: goto label14;
            case 1: goto label30;
            case 2: goto label31;
            case 3: goto label32;
            case 4: goto label33;
            case 5: goto label34;
            case 6: goto label35;
            case 7: goto label36;
            case 8: goto label37;
            case 9: goto label38;
            case 10: goto label39;
            default: goto label40;
        };

     label14:
        $r15 = (java.lang.Number) r27;

        l1 = virtualinvoke $r15.<java.lang.Number: long longValue()>();

        $r16 = newarray (java.nio.file.OpenOption)[1];

        $r17 = <java.nio.file.StandardOpenOption: java.nio.file.StandardOpenOption WRITE>;

        $r16[0] = $r17;

        $r35 = (java.nio.file.OpenOption[]) $r16;

        r18 = staticinvoke <java.nio.channels.FileChannel: java.nio.channels.FileChannel open(java.nio.file.Path,java.nio.file.OpenOption[])>(r11, $r35);

        r30 = null;

     label15:
        virtualinvoke r18.<java.nio.channels.FileChannel: java.nio.channels.FileChannel truncate(long)>(l1);

     label16:
        if r18 == null goto label29;

        if r30 == null goto label20;

     label17:
        virtualinvoke r18.<java.nio.channels.FileChannel: void close()>();

     label18:
        goto label29;

     label19:
        $r26 := @caughtexception;

        r31 = $r26;

        virtualinvoke r30.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r31);

        goto label29;

     label20:
        virtualinvoke r18.<java.nio.channels.FileChannel: void close()>();

        goto label29;

     label21:
        $r25 := @caughtexception;

        r32 = $r25;

        r30 = r32;

        throw r32;

     label22:
        $r24 := @caughtexception;

        r23 = $r24;

     label23:
        if r18 == null goto label28;

        if r30 == null goto label27;

     label24:
        virtualinvoke r18.<java.nio.channels.FileChannel: void close()>();

     label25:
        goto label28;

     label26:
        $r21 := @caughtexception;

        r22 = $r21;

        virtualinvoke r30.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r22);

        goto label28;

     label27:
        virtualinvoke r18.<java.nio.channels.FileChannel: void close()>();

     label28:
        throw r23;

     label29:
        goto label01;

     label30:
        r28 = "unix";

        goto label40;

     label31:
        r28 = "unix";

        goto label40;

     label32:
        r28 = "posix";

        $r14 = (java.nio.file.attribute.UserPrincipal) r27;

        r27 = virtualinvoke r6.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.nio.file.attribute.UserPrincipal toUser(java.nio.file.Path,java.nio.file.attribute.UserPrincipal)>(r11, $r14);

        goto label40;

     label33:
        r28 = "posix";

        $r13 = (java.nio.file.attribute.GroupPrincipal) r27;

        r27 = virtualinvoke r6.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.nio.file.attribute.GroupPrincipal toGroup(java.nio.file.Path,java.nio.file.attribute.GroupPrincipal)>(r11, $r13);

        goto label40;

     label34:
        r28 = "posix";

        goto label40;

     label35:
        r28 = "acl";

        goto label40;

     label36:
        r28 = "basic";

        goto label40;

     label37:
        r28 = "basic";

        goto label40;

     label38:
        r28 = "basic";

        goto label40;

     label39:
        r28 = "extended";

        goto label40;

     label40:
        $i3 = staticinvoke <org.apache.sshd.common.util.GenericUtils: int length(java.lang.CharSequence)>(r28);

        if $i3 <= 0 goto label44;

        if r27 == null goto label44;

     label41:
        virtualinvoke r6.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void setFileAttribute(java.nio.file.Path,java.lang.String,java.lang.String,java.lang.Object,java.nio.file.LinkOption[])>(r11, r28, r10, r27, r12);

     label42:
        goto label44;

     label43:
        $r20 := @caughtexception;

        r33 = $r20;

        virtualinvoke r6.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void handleSetFileAttributeFailure(java.nio.file.Path,java.lang.String,java.lang.String,java.lang.Object,java.util.Collection,java.lang.Exception)>(r11, r28, r10, r27, r2, r33);

     label44:
        goto label01;

     label45:
        virtualinvoke r6.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void handleUnsupportedAttributes(java.util.Collection)>(r2);

        return;

        catch java.lang.Throwable from label17 to label18 with label19;
        catch java.lang.Throwable from label15 to label16 with label21;
        catch java.lang.Throwable from label24 to label25 with label26;
        catch java.lang.Throwable from label21 to label23 with label22;
        catch java.lang.Exception from label41 to label42 with label43;
    }

    protected void handleSetFileAttributeFailure(java.nio.file.Path, java.lang.String, java.lang.String, java.lang.Object, java.util.Collection, java.lang.Exception) throws java.io.IOException
    {
        java.lang.Exception r0;
        boolean $z0, $z1, $z2, $z3;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r1;
        java.lang.Object[] $r2, $r32;
        org.slf4j.Logger $r3, $r12, $r16, $r30, $r33;
        org.apache.sshd.server.session.ServerSession $r4, $r18, $r34;
        java.nio.file.Path r5;
        java.lang.String r6, r7, $r10, $r11, $r29, $r35, varReplacer7052, varReplacer7053, varReplacer7054, varReplacer7055, varReplacer7056, varReplacer7057, varReplacer7058, varReplacer7059;
        java.lang.Object r8;
        java.lang.Class $r9;
        java.io.IOException $r13, $r14;
        java.lang.StringBuilder $r15, $r17, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28;
        java.util.Collection r31;

        nop;

        r1 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r5 := @parameter0: java.nio.file.Path;

        r6 := @parameter1: java.lang.String;

        r7 := @parameter2: java.lang.String;

        r8 := @parameter3: java.lang.Object;

        r31 := @parameter4: java.util.Collection;

        r0 := @parameter5: java.lang.Exception;

        $z0 = r0 instanceof java.lang.UnsupportedOperationException;

        if $z0 == 0 goto label2;

        $r30 = r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z3 = interfaceinvoke $r30.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z3 == 0 goto label1;

        $r33 = r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r32 = newarray (java.lang.Object)[6];

        $r34 = virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r32[0] = $r34;

        $r32[1] = r5;

        $r32[2] = r6;

        $r32[3] = r7;

        $r32[4] = r8;

        $r35 = virtualinvoke r0.<java.lang.Exception: java.lang.String getMessage()>();

        $r32[5] = $r35;

        varReplacer7054 = "handleSetFileAttributeFailure({})[{}] {}:{}={} unsupported: {}";

        interfaceinvoke $r33.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(varReplacer7054, $r32);

     label1:
        interfaceinvoke r31.<java.util.Collection: boolean add(java.lang.Object)>(r7);

        goto label5;

     label2:
        $r3 = r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r2 = newarray (java.lang.Object)[7];

        $r4 = virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r2[0] = $r4;

        $r2[1] = r5;

        $r2[2] = r6;

        $r2[3] = r7;

        $r2[4] = r8;

        $r9 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.String getSimpleName()>();

        $r2[5] = $r10;

        $r11 = virtualinvoke r0.<java.lang.Exception: java.lang.String getMessage()>();

        $r2[6] = $r11;

        varReplacer7057 = "handleSetFileAttributeFailure({})[{}] {}:{}={} - failed ({}) to set: {}";

        interfaceinvoke $r3.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object[])>(varReplacer7057, $r2);

        $r12 = r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z1 = interfaceinvoke $r12.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z1 == 0 goto label3;

        $r16 = r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        varReplacer7059 = "handleSetFileAttributeFailure(";

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7059);

        $r18 = virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

        varReplacer7058 = ")[";

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7058);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        varReplacer7055 = "] ";

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7055);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        varReplacer7056 = ":";

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7056);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        varReplacer7052 = "=";

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7052);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

        varReplacer7053 = " failure details";

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7053);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r16.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Throwable)>($r29, r0);

     label3:
        $z2 = r0 instanceof java.io.IOException;

        if $z2 == 0 goto label4;

        $r14 = (java.io.IOException) r0;

        throw $r14;

     label4:
        $r13 = new java.io.IOException;

        specialinvoke $r13.<java.io.IOException: void <init>(java.lang.Throwable)>(r0);

        throw $r13;

     label5:
        return;
    }

    protected transient void setFileAttribute(java.nio.file.Path, java.lang.String, java.lang.String, java.lang.Object, java.nio.file.LinkOption[]) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        org.slf4j.Logger $r1, $r25;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        java.lang.String r2, $r3, $r4, $r5, $r10, $r11, r12, $r13, $r14, $r15, $r20, $r22, $r23, varReplacer7060, varReplacer7061;
        java.nio.file.Path r6;
        java.lang.Object r7;
        java.nio.file.LinkOption[] r8;
        java.security.Principal $r9;
        java.lang.StringBuilder $r16, $r17, $r18, $r19;
        java.lang.Object[] $r24;
        org.apache.sshd.server.session.ServerSession $r26;
        java.util.List r27;
        java.util.Set r28;
        java.nio.file.attribute.FileTime $r29;
        java.util.Map r30;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r6 := @parameter0: java.nio.file.Path;

        r12 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r7 := @parameter3: java.lang.Object;

        r8 := @parameter4: java.nio.file.LinkOption[];

        $r1 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r1.<org.slf4j.Logger: boolean isTraceEnabled()>();

        if $z0 == 0 goto label1;

        $r25 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r24 = newarray (java.lang.Object)[5];

        $r26 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r24[0] = $r26;

        $r24[1] = r6;

        $r24[2] = r12;

        $r24[3] = r2;

        $r24[4] = r7;

        varReplacer7060 = "setFileAttribute({})[{}] {}:{}={}";

        interfaceinvoke $r25.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object[])>(varReplacer7060, $r24);

     label1:
        $r3 = "acl";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2);

        if $z1 == 0 goto label2;

        $r23 = "acl";

        $z10 = virtualinvoke $r23.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r12);

        if $z10 == 0 goto label2;

        r27 = (java.util.List) r7;

        virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void setFileAccessControl(java.nio.file.Path,java.util.List,java.nio.file.LinkOption[])>(r6, r27, r8);

        goto label9;

     label2:
        $r4 = "permissions";

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2);

        if $z2 == 0 goto label3;

        r28 = (java.util.Set) r7;

        virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void setFilePermissions(java.nio.file.Path,java.util.Set,java.nio.file.LinkOption[])>(r6, r28, r8);

        goto label9;

     label3:
        $r5 = "owner";

        $z3 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2);

        if $z3 != 0 goto label4;

        $r10 = "group";

        $z4 = virtualinvoke $r10.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2);

        if $z4 == 0 goto label5;

     label4:
        $r9 = (java.security.Principal) r7;

        virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void setFileOwnership(java.nio.file.Path,java.lang.String,java.security.Principal,java.nio.file.LinkOption[])>(r6, r2, $r9, r8);

        goto label9;

     label5:
        $r11 = "creationTime";

        $z5 = virtualinvoke $r11.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2);

        if $z5 != 0 goto label6;

        $r13 = "lastModifiedTime";

        $z6 = virtualinvoke $r13.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2);

        if $z6 != 0 goto label6;

        $r14 = "lastAccessTime";

        $z7 = virtualinvoke $r14.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2);

        if $z7 == 0 goto label7;

     label6:
        $r29 = (java.nio.file.attribute.FileTime) r7;

        virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void setFileTime(java.nio.file.Path,java.lang.String,java.lang.String,java.nio.file.attribute.FileTime,java.nio.file.LinkOption[])>(r6, r12, r2, $r29, r8);

        goto label9;

     label7:
        $r15 = "extended";

        $z8 = virtualinvoke $r15.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r12);

        if $z8 == 0 goto label8;

        $r22 = "extended";

        $z9 = virtualinvoke $r22.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2);

        if $z9 == 0 goto label8;

        r30 = (java.util.Map) r7;

        virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void setFileExtensions(java.nio.file.Path,java.util.Map,java.nio.file.LinkOption[])>(r6, r30, r8);

        goto label9;

     label8:
        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);

        varReplacer7061 = ":";

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7061);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <java.nio.file.Files: java.nio.file.Path setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption[])>(r6, $r20, r7, r8);

     label9:
        return;
    }

    protected transient void setFileTime(java.nio.file.Path, java.lang.String, java.lang.String, java.nio.file.attribute.FileTime, java.nio.file.LinkOption[]) throws java.io.IOException
    {
        java.nio.file.attribute.FileTime r0;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r1;
        org.slf4j.Logger $r2, $r14;
        boolean $z0;
        java.nio.file.Path r3;
        java.lang.StringBuilder $r4, $r6, $r7, $r9;
        java.lang.String r5, r8, $r10, varReplacer7062, varReplacer7063;
        java.nio.file.LinkOption[] r11;
        java.lang.Object[] $r13;
        org.apache.sshd.server.session.ServerSession $r15;

        nop;

        r1 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r3 := @parameter0: java.nio.file.Path;

        r5 := @parameter1: java.lang.String;

        r8 := @parameter2: java.lang.String;

        r0 := @parameter3: java.nio.file.attribute.FileTime;

        r11 := @parameter4: java.nio.file.LinkOption[];

        if r0 != null goto label1;

        return;

     label1:
        $r2 = r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r2.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label2;

        $r14 = r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r13 = newarray (java.lang.Object)[5];

        $r15 = virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r13[0] = $r15;

        $r13[1] = r3;

        $r13[2] = r5;

        $r13[3] = r8;

        $r13[4] = r0;

        varReplacer7063 = "setFileTime({})[{}] {}:{}={}";

        interfaceinvoke $r14.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(varReplacer7063, $r13);

     label2:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        varReplacer7062 = ":";

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7062);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <java.nio.file.Files: java.nio.file.Path setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption[])>(r3, $r10, r0, r11);

        return;
    }

    protected transient void setFileOwnership(java.nio.file.Path, java.lang.String, java.security.Principal, java.nio.file.LinkOption[]) throws java.io.IOException
    {
        java.security.Principal r0;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r1;
        org.slf4j.Logger $r2, $r46;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.String r3, $r4, $r5, $r10, $r19, $r23, $r25, $r33, $r37, $r39, $r44, varReplacer7064, varReplacer7065, varReplacer7066, varReplacer7067, varReplacer7068, varReplacer7069, varReplacer7070, varReplacer7071;
        java.lang.UnsupportedOperationException $r6, $r26, $r40;
        java.lang.StringBuilder $r7, $r8, $r9, $r16, $r17, $r20, $r21, $r24, $r30, $r31, $r34, $r35, $r38, $r41, $r42, $r43;
        java.nio.file.Path r11;
        java.nio.file.LinkOption[] r12;
        java.nio.file.attribute.FileAttributeView $r13, $r27;
        java.nio.file.attribute.GroupPrincipal $r14;
        java.io.StreamCorruptedException $r15, $r29;
        java.lang.Class $r18, $r22, $r32, $r36;
        java.nio.file.attribute.UserPrincipal $r28;
        java.lang.Object[] $r45;
        org.apache.sshd.server.session.ServerSession $r47;
        java.nio.file.attribute.FileOwnerAttributeView r48;
        java.nio.file.attribute.PosixFileAttributeView r49;

        nop;

        r1 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r11 := @parameter0: java.nio.file.Path;

        r3 := @parameter1: java.lang.String;

        r0 := @parameter2: java.security.Principal;

        r12 := @parameter3: java.nio.file.LinkOption[];

        if r0 != null goto label1;

        return;

     label1:
        $r2 = r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r2.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label2;

        $r46 = r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r45 = newarray (java.lang.Object)[4];

        $r47 = virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r45[0] = $r47;

        $r45[1] = r11;

        $r45[2] = r3;

        $r45[3] = r0;

        varReplacer7066 = "setFileOwnership({})[{}] {}={}";

        interfaceinvoke $r46.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(varReplacer7066, $r45);

     label2:
        $r4 = "owner";

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r3);

        if $z1 == 0 goto label5;

        $r27 = staticinvoke <java.nio.file.Files: java.nio.file.attribute.FileAttributeView getFileAttributeView(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>(r11, class "Ljava/nio/file/attribute/FileOwnerAttributeView;", r12);

        r48 = (java.nio.file.attribute.FileOwnerAttributeView) $r27;

        if r48 != null goto label3;

        $r40 = new java.lang.UnsupportedOperationException;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        varReplacer7069 = "Owner view not supported for ";

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7069);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r11);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r40.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r44);

        throw $r40;

     label3:
        $z4 = r0 instanceof java.nio.file.attribute.UserPrincipal;

        if $z4 != 0 goto label4;

        $r29 = new java.io.StreamCorruptedException;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        varReplacer7068 = "Owner is not ";

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7068);

        $r32 = class "Ljava/nio/file/attribute/UserPrincipal;";

        $r33 = virtualinvoke $r32.<java.lang.Class: java.lang.String getSimpleName()>();

        $r34 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        varReplacer7070 = ": ";

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7070);

        $r36 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r37 = virtualinvoke $r36.<java.lang.Class: java.lang.String getSimpleName()>();

        $r38 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r29.<java.io.StreamCorruptedException: void <init>(java.lang.String)>($r39);

        throw $r29;

     label4:
        $r28 = (java.nio.file.attribute.UserPrincipal) r0;

        interfaceinvoke r48.<java.nio.file.attribute.FileOwnerAttributeView: void setOwner(java.nio.file.attribute.UserPrincipal)>($r28);

        goto label9;

     label5:
        $r5 = "group";

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r3);

        if $z2 == 0 goto label8;

        $r13 = staticinvoke <java.nio.file.Files: java.nio.file.attribute.FileAttributeView getFileAttributeView(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>(r11, class "Ljava/nio/file/attribute/PosixFileAttributeView;", r12);

        r49 = (java.nio.file.attribute.PosixFileAttributeView) $r13;

        if r49 != null goto label6;

        $r26 = new java.lang.UnsupportedOperationException;

        varReplacer7067 = "POSIX view not supported";

        specialinvoke $r26.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>(varReplacer7067);

        throw $r26;

     label6:
        $z3 = r0 instanceof java.nio.file.attribute.GroupPrincipal;

        if $z3 != 0 goto label7;

        $r15 = new java.io.StreamCorruptedException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        varReplacer7064 = "Group is not ";

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7064);

        $r18 = class "Ljava/nio/file/attribute/GroupPrincipal;";

        $r19 = virtualinvoke $r18.<java.lang.Class: java.lang.String getSimpleName()>();

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        varReplacer7071 = ": ";

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7071);

        $r22 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r23 = virtualinvoke $r22.<java.lang.Class: java.lang.String getSimpleName()>();

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.io.StreamCorruptedException: void <init>(java.lang.String)>($r25);

        throw $r15;

     label7:
        $r14 = (java.nio.file.attribute.GroupPrincipal) r0;

        interfaceinvoke r49.<java.nio.file.attribute.PosixFileAttributeView: void setGroup(java.nio.file.attribute.GroupPrincipal)>($r14);

        goto label9;

     label8:
        $r6 = new java.lang.UnsupportedOperationException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        varReplacer7065 = "Unknown ownership attribute: ";

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7065);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r10);

        throw $r6;

     label9:
        return;
    }

    protected transient void setFileExtensions(java.nio.file.Path, java.util.Map, java.nio.file.LinkOption[]) throws java.io.IOException
    {
        java.util.Map r0;
        boolean $z0, $z1;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r1;
        int $i0;
        java.lang.UnsupportedOperationException $r2;
        org.slf4j.Logger $r3, $r5;
        java.lang.Object[] $r4;
        org.apache.sshd.server.session.ServerSession $r6;
        java.nio.file.Path r7;
        java.nio.file.LinkOption[] r8;
        java.lang.String varReplacer7072, varReplacer7073;

        nop;

        r1 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r7 := @parameter0: java.nio.file.Path;

        r0 := @parameter1: java.util.Map;

        r8 := @parameter2: java.nio.file.LinkOption[];

        $z0 = staticinvoke <org.apache.sshd.common.util.GenericUtils: boolean isEmpty(java.util.Map)>(r0);

        if $z0 == 0 goto label1;

        return;

     label1:
        $i0 = r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int version>;

        if $i0 >= 6 goto label2;

        $r3 = r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z1 = interfaceinvoke $r3.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z1 == 0 goto label3;

        $r5 = r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r4 = newarray (java.lang.Object)[3];

        $r6 = virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r4[0] = $r6;

        $r4[1] = r7;

        $r4[2] = r0;

        varReplacer7072 = "setFileExtensions({})[{}]: {}";

        interfaceinvoke $r5.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(varReplacer7072, $r4);

        goto label3;

     label2:
        $r2 = new java.lang.UnsupportedOperationException;

        varReplacer7073 = "File extensions not supported";

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>(varReplacer7073);

        throw $r2;

     label3:
        return;
    }

    protected transient void setFilePermissions(java.nio.file.Path, java.util.Set, java.nio.file.LinkOption[]) throws java.io.IOException
    {
        boolean $z0, $z1;
        java.nio.file.Path r0;
        java.nio.file.LinkOption[] r1;
        java.nio.file.attribute.FileAttributeView $r2;
        java.nio.file.attribute.PosixFileAttributeView r3;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r4;
        org.slf4j.Logger $r5, $r8;
        java.util.Set r6;
        java.lang.Object[] $r7;
        org.apache.sshd.server.session.ServerSession $r9;
        java.lang.UnsupportedOperationException $r10;
        java.lang.StringBuilder $r11, $r12, $r13;
        java.lang.String $r14, varReplacer7074, varReplacer7075;
        java.io.File $r15;

        nop;

        r4 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: java.nio.file.Path;

        r6 := @parameter1: java.util.Set;

        r1 := @parameter2: java.nio.file.LinkOption[];

        $z0 = staticinvoke <org.apache.sshd.common.util.OsUtils: boolean isWin32()>();

        if $z0 == 0 goto label1;

        $r15 = interfaceinvoke r0.<java.nio.file.Path: java.io.File toFile()>();

        staticinvoke <org.apache.sshd.common.util.io.IoUtils: void setPermissionsToFile(java.io.File,java.util.Collection)>($r15, r6);

        return;

     label1:
        $r2 = staticinvoke <java.nio.file.Files: java.nio.file.attribute.FileAttributeView getFileAttributeView(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>(r0, class "Ljava/nio/file/attribute/PosixFileAttributeView;", r1);

        r3 = (java.nio.file.attribute.PosixFileAttributeView) $r2;

        if r3 != null goto label2;

        $r10 = new java.lang.UnsupportedOperationException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        varReplacer7075 = "POSIX view not supported for ";

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7075);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r14);

        throw $r10;

     label2:
        $r5 = r4.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z1 = interfaceinvoke $r5.<org.slf4j.Logger: boolean isTraceEnabled()>();

        if $z1 == 0 goto label3;

        $r8 = r4.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r7 = newarray (java.lang.Object)[3];

        $r9 = virtualinvoke r4.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r7[0] = $r9;

        $r7[1] = r0;

        $r7[2] = r6;

        varReplacer7074 = "setFilePermissions({})[{}] {}";

        interfaceinvoke $r8.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object[])>(varReplacer7074, $r7);

     label3:
        interfaceinvoke r3.<java.nio.file.attribute.PosixFileAttributeView: void setPermissions(java.util.Set)>(r6);

        return;
    }

    protected transient void setFileAccessControl(java.nio.file.Path, java.util.List, java.nio.file.LinkOption[]) throws java.io.IOException
    {
        java.nio.file.Path r0;
        java.nio.file.LinkOption[] r1;
        java.nio.file.attribute.FileAttributeView $r2;
        java.nio.file.attribute.AclFileAttributeView r3;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r4;
        org.slf4j.Logger $r5, $r8;
        boolean $z0;
        java.util.List r6;
        java.lang.Object[] $r7;
        org.apache.sshd.server.session.ServerSession $r9;
        java.lang.UnsupportedOperationException $r10;
        java.lang.StringBuilder $r11, $r12, $r13;
        java.lang.String $r14, varReplacer7076, varReplacer7077;

        nop;

        r4 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: java.nio.file.Path;

        r6 := @parameter1: java.util.List;

        r1 := @parameter2: java.nio.file.LinkOption[];

        $r2 = staticinvoke <java.nio.file.Files: java.nio.file.attribute.FileAttributeView getFileAttributeView(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>(r0, class "Ljava/nio/file/attribute/AclFileAttributeView;", r1);

        r3 = (java.nio.file.attribute.AclFileAttributeView) $r2;

        if r3 != null goto label1;

        $r10 = new java.lang.UnsupportedOperationException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        varReplacer7076 = "ACL view not supported for ";

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7076);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r14);

        throw $r10;

     label1:
        $r5 = r4.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r5.<org.slf4j.Logger: boolean isTraceEnabled()>();

        if $z0 == 0 goto label2;

        $r8 = r4.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r7 = newarray (java.lang.Object)[3];

        $r9 = virtualinvoke r4.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r7[0] = $r9;

        $r7[1] = r0;

        $r7[2] = r6;

        varReplacer7077 = "setFileAccessControl({})[{}] {}";

        interfaceinvoke $r8.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object[])>(varReplacer7077, $r7);

     label2:
        interfaceinvoke r3.<java.nio.file.attribute.AclFileAttributeView: void setAcl(java.util.List)>(r6);

        return;
    }

    protected void handleUnsupportedAttributes(java.util.Collection)
    {
        java.util.Collection r0;
        boolean $z0;
        java.lang.String r1, $r9, $r14, $r22, varReplacer7078, varReplacer7079, varReplacer7080, varReplacer7082;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r2;
        org.apache.sshd.server.subsystem.sftp.UnsupportedAttributePolicy $r3, $r20;
        int[] $r4;
        int $i0, $i1, varReplacer7081;
        java.lang.StringBuilder $r5, $r7, $r8, $r11, $r12, $r13, $r15, $r17, $r18, $r19, $r21;
        org.slf4j.Logger $r6, $r16;
        java.lang.UnsupportedOperationException $r10;

        nop;

        r2 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: java.util.Collection;

        $z0 = interfaceinvoke r0.<java.util.Collection: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        varReplacer7081 = 44;

        r1 = staticinvoke <org.apache.sshd.common.util.GenericUtils: java.lang.String join(java.lang.Iterable,char)>(r0, varReplacer7081);

        $r4 = <org.apache.sshd.server.subsystem.sftp.SftpSubsystem$4: int[] $SwitchMap$org$apache$sshd$server$subsystem$sftp$UnsupportedAttributePolicy>;

        $r3 = r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.subsystem.sftp.UnsupportedAttributePolicy unsupportedAttributePolicy>;

        $i0 = virtualinvoke $r3.<org.apache.sshd.server.subsystem.sftp.UnsupportedAttributePolicy: int ordinal()>();

        $i1 = $r4[$i0];

        tableswitch($i1)
        {
            case 1: goto label2;
            case 2: goto label4;
            case 3: goto label3;
            default: goto label5;
        };

     label2:
        goto label6;

     label3:
        $r6 = r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        varReplacer7080 = "Unsupported attributes: ";

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7080);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r6.<org.slf4j.Logger: void warn(java.lang.String)>($r9);

        goto label6;

     label4:
        $r10 = new java.lang.UnsupportedOperationException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        varReplacer7082 = "Unsupported attributes: ";

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7082);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r14);

        throw $r10;

     label5:
        $r16 = r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        varReplacer7079 = "Unknown policy for attributes=";

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7079);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        varReplacer7078 = ": ";

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7078);

        $r20 = r2.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.subsystem.sftp.UnsupportedAttributePolicy unsupportedAttributePolicy>;

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r16.<org.slf4j.Logger: void warn(java.lang.String)>($r22);

     label6:
        return;
    }

    protected java.nio.file.attribute.GroupPrincipal toGroup(java.nio.file.Path, java.nio.file.attribute.GroupPrincipal) throws java.io.IOException
    {
        java.nio.file.attribute.GroupPrincipal r0, $r5;
        java.lang.String r1, varReplacer7083;
        java.nio.file.Path r2;
        java.nio.file.FileSystem r3;
        java.nio.file.attribute.UserPrincipalLookupService r4;
        java.lang.Throwable $r7, r8;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r9;
        java.nio.file.attribute.UserPrincipalNotFoundException $r10;
        java.io.IOException $r11;
        null_type varReplacer7084;

        nop;

        r9 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r2 := @parameter0: java.nio.file.Path;

        r0 := @parameter1: java.nio.file.attribute.GroupPrincipal;

        r1 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        r3 = interfaceinvoke r2.<java.nio.file.Path: java.nio.file.FileSystem getFileSystem()>();

        r4 = virtualinvoke r3.<java.nio.file.FileSystem: java.nio.file.attribute.UserPrincipalLookupService getUserPrincipalLookupService()>();

     label1:
        if r4 != null goto label2;

        $r10 = new java.nio.file.attribute.UserPrincipalNotFoundException;

        varReplacer7083 = "No lookup service";

        specialinvoke $r10.<java.nio.file.attribute.UserPrincipalNotFoundException: void <init>(java.lang.String)>(varReplacer7083);

        throw $r10;

     label2:
        $r5 = virtualinvoke r4.<java.nio.file.attribute.UserPrincipalLookupService: java.nio.file.attribute.GroupPrincipal lookupPrincipalByGroupName(java.lang.String)>(r1);

     label3:
        return $r5;

     label4:
        $r7 := @caughtexception;

        r8 = $r7;

        $r11 = (java.io.IOException) r8;

        virtualinvoke r9.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void handleUserPrincipalLookupServiceException(java.lang.Class,java.lang.String,java.io.IOException)>(class "Ljava/nio/file/attribute/GroupPrincipal;", r1, $r11);

        varReplacer7084 = null;

        return varReplacer7084;

        catch java.io.IOException from label1 to label3 with label4;
    }

    protected java.nio.file.attribute.UserPrincipal toUser(java.nio.file.Path, java.nio.file.attribute.UserPrincipal) throws java.io.IOException
    {
        java.nio.file.attribute.UserPrincipal r0, $r5;
        java.lang.String r1, varReplacer7085;
        java.nio.file.Path r2;
        java.nio.file.FileSystem r3;
        java.nio.file.attribute.UserPrincipalLookupService r4;
        java.lang.Throwable $r7, r8;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r9;
        java.nio.file.attribute.UserPrincipalNotFoundException $r10;
        java.io.IOException $r11;
        null_type varReplacer7086;

        nop;

        r9 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r2 := @parameter0: java.nio.file.Path;

        r0 := @parameter1: java.nio.file.attribute.UserPrincipal;

        r1 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        r3 = interfaceinvoke r2.<java.nio.file.Path: java.nio.file.FileSystem getFileSystem()>();

        r4 = virtualinvoke r3.<java.nio.file.FileSystem: java.nio.file.attribute.UserPrincipalLookupService getUserPrincipalLookupService()>();

     label1:
        if r4 != null goto label2;

        $r10 = new java.nio.file.attribute.UserPrincipalNotFoundException;

        varReplacer7085 = "No lookup service";

        specialinvoke $r10.<java.nio.file.attribute.UserPrincipalNotFoundException: void <init>(java.lang.String)>(varReplacer7085);

        throw $r10;

     label2:
        $r5 = virtualinvoke r4.<java.nio.file.attribute.UserPrincipalLookupService: java.nio.file.attribute.UserPrincipal lookupPrincipalByName(java.lang.String)>(r1);

     label3:
        return $r5;

     label4:
        $r7 := @caughtexception;

        r8 = $r7;

        $r11 = (java.io.IOException) r8;

        virtualinvoke r9.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void handleUserPrincipalLookupServiceException(java.lang.Class,java.lang.String,java.io.IOException)>(class "Ljava/nio/file/attribute/UserPrincipal;", r1, $r11);

        varReplacer7086 = null;

        return varReplacer7086;

        catch java.io.IOException from label1 to label3 with label4;
    }

    protected void handleUserPrincipalLookupServiceException(java.lang.Class, java.lang.String, java.io.IOException) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        org.slf4j.Logger $r1, $r5, $r23, $r34;
        boolean $z0;
        org.apache.sshd.server.subsystem.sftp.UnsupportedAttributePolicy $r2, $r30;
        int[] $r3;
        int $i0, $i1;
        java.lang.StringBuilder $r4, $r6, $r9, $r10, $r12, $r13, $r17, $r18, $r20, $r22, $r24, $r26, $r27, $r28, $r29, $r31, $r33, $r35, $r37, $r38, $r39, $r40;
        java.lang.Class r7, $r15;
        java.lang.String $r8, r11, $r16, $r19, $r21, $r25, $r32, $r36, $r41, varReplacer7087, varReplacer7088, varReplacer7089, varReplacer7090, varReplacer7091, varReplacer7092, varReplacer7093, varReplacer7094, varReplacer7095, varReplacer7096;
        java.io.IOException r14;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r7 := @parameter0: java.lang.Class;

        r11 := @parameter1: java.lang.String;

        r14 := @parameter2: java.io.IOException;

        $r1 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r1.<org.slf4j.Logger: boolean isTraceEnabled()>();

        if $z0 == 0 goto label1;

        $r34 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        varReplacer7094 = "handleUserPrincipalLookupServiceException(";

        $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7094);

        $r36 = virtualinvoke r7.<java.lang.Class: java.lang.String getSimpleName()>();

        $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        varReplacer7091 = "[";

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7091);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        varReplacer7090 = "]) details";

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7090);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r34.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Throwable)>($r41, r14);

     label1:
        $r3 = <org.apache.sshd.server.subsystem.sftp.SftpSubsystem$4: int[] $SwitchMap$org$apache$sshd$server$subsystem$sftp$UnsupportedAttributePolicy>;

        $r2 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.subsystem.sftp.UnsupportedAttributePolicy unsupportedAttributePolicy>;

        $i0 = virtualinvoke $r2.<org.apache.sshd.server.subsystem.sftp.UnsupportedAttributePolicy: int ordinal()>();

        $i1 = $r3[$i0];

        tableswitch($i1)
        {
            case 1: goto label2;
            case 2: goto label4;
            case 3: goto label3;
            default: goto label5;
        };

     label2:
        goto label6;

     label3:
        $r5 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        varReplacer7087 = "handleUserPrincipalLookupServiceException(";

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7087);

        $r8 = virtualinvoke r7.<java.lang.Class: java.lang.String getSimpleName()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        varReplacer7092 = "[";

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7092);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        varReplacer7093 = "]) failed (";

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7093);

        $r15 = virtualinvoke r14.<java.lang.Object: java.lang.Class getClass()>();

        $r16 = virtualinvoke $r15.<java.lang.Class: java.lang.String getSimpleName()>();

        $r17 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        varReplacer7096 = "): ";

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7096);

        $r19 = virtualinvoke r14.<java.io.IOException: java.lang.String getMessage()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r5.<org.slf4j.Logger: void warn(java.lang.String)>($r21);

        goto label6;

     label4:
        throw r14;

     label5:
        $r23 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        varReplacer7088 = "Unknown policy for principal=";

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7088);

        $r25 = virtualinvoke r7.<java.lang.Class: java.lang.String getSimpleName()>();

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        varReplacer7095 = "[";

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7095);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        varReplacer7089 = "]: ";

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7089);

        $r30 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.subsystem.sftp.UnsupportedAttributePolicy unsupportedAttributePolicy>;

        $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r30);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r23.<org.slf4j.Logger: void warn(java.lang.String)>($r32);

     label6:
        return;
    }

    protected java.util.Map readAttrs(org.apache.sshd.common.util.buffer.Buffer) throws java.io.IOException
    {
        org.apache.sshd.common.util.buffer.Buffer r0;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r1;
        int $i0;
        java.util.Map $r2;

        nop;

        r1 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        $i0 = virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: int getVersion()>();

        $r2 = staticinvoke <org.apache.sshd.common.subsystem.sftp.SftpHelper: java.util.Map readAttrs(org.apache.sshd.common.util.buffer.Buffer,int)>(r0, $i0);

        return $r2;
    }

    protected org.apache.sshd.server.subsystem.sftp.Handle validateHandle(java.lang.String, org.apache.sshd.server.subsystem.sftp.Handle, java.lang.Class) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.Handle r0, $r4;
        java.lang.Class r1, r2;
        boolean $z0;
        java.lang.Object $r3;
        org.apache.sshd.server.subsystem.sftp.InvalidHandleException $r5;
        java.lang.String r6, $r11, varReplacer7097;
        java.io.FileNotFoundException $r7;
        java.lang.StringBuilder $r8, $r9, $r10;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r12;

        nop;

        r12 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r6 := @parameter0: java.lang.String;

        r0 := @parameter1: org.apache.sshd.server.subsystem.sftp.Handle;

        r2 := @parameter2: java.lang.Class;

        if r0 != null goto label1;

        $r7 = new java.io.FileNotFoundException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        varReplacer7097 = "No such current handle: ";

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7097);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r11);

        throw $r7;

     label1:
        r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke r2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r1);

        if $z0 != 0 goto label2;

        $r5 = new org.apache.sshd.server.subsystem.sftp.InvalidHandleException;

        specialinvoke $r5.<org.apache.sshd.server.subsystem.sftp.InvalidHandleException: void <init>(java.lang.String,org.apache.sshd.server.subsystem.sftp.Handle,java.lang.Class)>(r6, r0, r2);

        throw $r5;

     label2:
        $r3 = virtualinvoke r2.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(r0);

        $r4 = (org.apache.sshd.server.subsystem.sftp.Handle) $r3;

        return $r4;
    }

    protected void sendStatus(org.apache.sshd.common.util.buffer.Buffer, int, java.lang.Exception) throws java.io.IOException
    {
        java.lang.Exception r0;
        int i0, i1;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r1;
        org.apache.sshd.common.util.buffer.Buffer r2;
        java.lang.String $r3;

        nop;

        r1 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r2 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i1 := @parameter1: int;

        r0 := @parameter2: java.lang.Exception;

        i0 = staticinvoke <org.apache.sshd.common.subsystem.sftp.SftpHelper: int resolveSubstatus(java.lang.Throwable)>(r0);

        $r3 = virtualinvoke r0.<java.lang.Exception: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,int,java.lang.String)>(r2, i1, i0, $r3);

        return;
    }

    protected void sendStatus(org.apache.sshd.common.util.buffer.Buffer, int, int, java.lang.String) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        org.apache.sshd.common.util.buffer.Buffer r1;
        int i0, i1;
        java.lang.String r2, $r5, varReplacer7098;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r1 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        if r2 == null goto label1;

        $r5 = r2;

        goto label2;

     label1:
        $r5 = "";

     label2:
        varReplacer7098 = "";

        virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void sendStatus(org.apache.sshd.common.util.buffer.Buffer,int,int,java.lang.String,java.lang.String)>(r1, i0, i1, $r5, varReplacer7098);

        return;
    }

    protected void sendStatus(org.apache.sshd.common.util.buffer.Buffer, int, int, java.lang.String, java.lang.String) throws java.io.IOException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        org.slf4j.Logger $r1, $r6;
        boolean $z0;
        org.apache.sshd.common.util.buffer.Buffer r2;
        int i0, i2, varReplacer7100;
        long $l1, $l3;
        java.lang.String r3, r4, $r9, varReplacer7099;
        java.lang.Object[] $r5;
        org.apache.sshd.server.session.ServerSession $r7;
        java.lang.Integer $r8;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r2 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i0 := @parameter1: int;

        i2 := @parameter2: int;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String;

        $r1 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r1.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r6 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r5 = newarray (java.lang.Object)[5];

        $r7 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r5[0] = $r7;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r5[1] = $r8;

        $r9 = staticinvoke <org.apache.sshd.common.subsystem.sftp.SftpConstants: java.lang.String getStatusName(int)>(i2);

        $r5[2] = $r9;

        $r5[3] = r4;

        $r5[4] = r3;

        varReplacer7099 = "doSendStatus({})[id={}] SSH_FXP_STATUS (substatus={}, lang={}, msg={})";

        interfaceinvoke $r6.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>(varReplacer7099, $r5);

     label1:
        varReplacer7100 = 101;

        virtualinvoke r2.<org.apache.sshd.common.util.buffer.Buffer: void putByte(byte)>(varReplacer7100);

        $l1 = (long) i0;

        virtualinvoke r2.<org.apache.sshd.common.util.buffer.Buffer: void putInt(long)>($l1);

        $l3 = (long) i2;

        virtualinvoke r2.<org.apache.sshd.common.util.buffer.Buffer: void putInt(long)>($l3);

        virtualinvoke r2.<org.apache.sshd.common.util.buffer.Buffer: void putString(java.lang.String)>(r3);

        virtualinvoke r2.<org.apache.sshd.common.util.buffer.Buffer: void putString(java.lang.String)>(r4);

        virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: void send(org.apache.sshd.common.util.buffer.Buffer)>(r2);

        return;
    }

    protected void send(org.apache.sshd.common.util.buffer.Buffer) throws java.io.IOException
    {
        org.apache.sshd.common.util.buffer.Buffer r0;
        int i0, $i1, $i2, varReplacer7101;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r1;
        byte[] $r2, $r3, $r6;
        java.io.OutputStream $r4, $r5, $r7;

        nop;

        r1 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: org.apache.sshd.common.util.buffer.Buffer;

        i0 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: int available()>();

        $r4 = r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.io.OutputStream out>;

        $r3 = r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: byte[] workBuf>;

        $r2 = r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: byte[] workBuf>;

        $i1 = lengthof $r2;

        varReplacer7101 = 0;

        staticinvoke <org.apache.sshd.common.util.buffer.BufferUtils: void writeInt(java.io.OutputStream,int,byte[],int,int)>($r4, i0, $r3, varReplacer7101, $i1);

        $r5 = r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.io.OutputStream out>;

        $r6 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: byte[] array()>();

        $i2 = virtualinvoke r0.<org.apache.sshd.common.util.buffer.Buffer: int rpos()>();

        virtualinvoke $r5.<java.io.OutputStream: void write(byte[],int,int)>($r6, $i2, i0);

        $r7 = r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.io.OutputStream out>;

        virtualinvoke $r7.<java.io.OutputStream: void flush()>();

        return;
    }

    public void destroy()
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        java.util.concurrent.atomic.AtomicBoolean $r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, z10;
        org.apache.sshd.server.session.ServerSession r2;
        org.slf4j.Logger $r3, $r6, $r8, $r16, $r18, $r24, $r26, $r28, $r40, $r42, $r49, $r53, $r55;
        java.util.concurrent.ExecutorService $r4, $r5, $r63;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r19, $r20, $r21, $r22, $r29, $r30, $r31, $r34, $r35, $r37, $r43, $r44, $r45, $r56, $r57, $r58, $r68, $r69, $r70, $r71, $r72;
        int $i0, varReplacer7115, varReplacer7117;
        java.lang.String $r13, $r23, $r33, $r36, $r38, $r46, $r51, $r52, $r59, varReplacer7102, varReplacer7103, varReplacer7104, varReplacer7105, varReplacer7107, varReplacer7109, varReplacer7110, varReplacer7111, varReplacer7112, varReplacer7113, varReplacer7114, varReplacer7116, varReplacer7118;
        java.util.concurrent.Future $r14, $r15, $r62;
        java.lang.Throwable $r25, $r39, r66, r67;
        java.lang.Class $r32, $r50;
        java.lang.Exception $r47, r61;
        java.lang.Object[] $r48;
        org.apache.sshd.server.subsystem.sftp.SftpEventListener r60;
        java.util.List r64;
        java.nio.file.FileSystem $r65;
        java.io.IOException $r73;
        null_type varReplacer7106, varReplacer7108;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        $r1 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.concurrent.atomic.AtomicBoolean closed>;

        varReplacer7115 = 1;

        $z0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: boolean getAndSet(boolean)>(varReplacer7115);

        if $z0 == 0 goto label01;

        return;

     label01:
        r2 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r3 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z1 = interfaceinvoke $r3.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z1 == 0 goto label02;

        $r24 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        varReplacer7103 = "destroy({}) - mark as closed";

        interfaceinvoke $r24.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>(varReplacer7103, r2);

     label02:
        r60 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.subsystem.sftp.SftpEventListener getSftpEventListenerProxy()>();

        interfaceinvoke r60.<org.apache.sshd.server.subsystem.sftp.SftpEventListener: void destroying(org.apache.sshd.server.session.ServerSession)>(r2);

     label03:
        goto label05;

     label04:
        $r47 := @caughtexception;

        r61 = $r47;

        $r49 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r48 = newarray (java.lang.Object)[3];

        $r48[0] = r2;

        $r50 = virtualinvoke r61.<java.lang.Object: java.lang.Class getClass()>();

        $r51 = virtualinvoke $r50.<java.lang.Class: java.lang.String getSimpleName()>();

        $r48[1] = $r51;

        $r52 = virtualinvoke r61.<java.lang.Exception: java.lang.String getMessage()>();

        $r48[2] = $r52;

        varReplacer7110 = "destroy({}) Failed ({}) to announce destruction event: {}";

        interfaceinvoke $r49.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object[])>(varReplacer7110, $r48);

        $r53 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z9 = interfaceinvoke $r53.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z9 == 0 goto label05;

        $r55 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r68 = new java.lang.StringBuilder;

        specialinvoke $r68.<java.lang.StringBuilder: void <init>()>();

        varReplacer7114 = "destroy(";

        $r56 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7114);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        varReplacer7116 = ") destruction announcement failure details";

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7116);

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r55.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Throwable)>($r59, r61);

     label05:
        $r62 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.concurrent.Future pendingFuture>;

        if $r62 == null goto label06;

        $r14 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.concurrent.Future pendingFuture>;

        $z5 = interfaceinvoke $r14.<java.util.concurrent.Future: boolean isDone()>();

        if $z5 != 0 goto label06;

        $r15 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.concurrent.Future pendingFuture>;

        varReplacer7117 = 1;

        z10 = interfaceinvoke $r15.<java.util.concurrent.Future: boolean cancel(boolean)>(varReplacer7117);

        $r16 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z6 = interfaceinvoke $r16.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z6 == 0 goto label06;

        $r18 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r69 = new java.lang.StringBuilder;

        specialinvoke $r69.<java.lang.StringBuilder: void <init>()>();

        varReplacer7104 = "destroy(";

        $r19 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7104);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        varReplacer7113 = ") - cancel pending future=";

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7113);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z10);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r18.<org.slf4j.Logger: void debug(java.lang.String)>($r23);

     label06:
        varReplacer7106 = null;

        r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.concurrent.Future pendingFuture> = varReplacer7106;

        $r63 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.concurrent.ExecutorService executors>;

        if $r63 == null goto label07;

        $r4 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.concurrent.ExecutorService executors>;

        $z2 = interfaceinvoke $r4.<java.util.concurrent.ExecutorService: boolean isShutdown()>();

        if $z2 != 0 goto label07;

        $z3 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: boolean shutdownExecutor>;

        if $z3 == 0 goto label07;

        $r5 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.concurrent.ExecutorService executors>;

        r64 = interfaceinvoke $r5.<java.util.concurrent.ExecutorService: java.util.List shutdownNow()>();

        $r6 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z4 = interfaceinvoke $r6.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z4 == 0 goto label07;

        $r8 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r70 = new java.lang.StringBuilder;

        specialinvoke $r70.<java.lang.StringBuilder: void <init>()>();

        varReplacer7107 = "destroy(";

        $r9 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7107);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        varReplacer7105 = ") - shutdown executor service - runners count=";

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7105);

        $i0 = interfaceinvoke r64.<java.util.Collection: int size()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r8.<org.slf4j.Logger: void debug(java.lang.String)>($r13);

     label07:
        varReplacer7108 = null;

        r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.concurrent.ExecutorService executors> = varReplacer7108;

     label08:
        $r65 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.nio.file.FileSystem fileSystem>;

        virtualinvoke $r65.<java.nio.file.FileSystem: void close()>();

     label09:
        goto label13;

     label10:
        $r39 := @caughtexception;

        r66 = $r39;

        $r40 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z8 = interfaceinvoke $r40.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z8 == 0 goto label11;

        $r42 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r71 = new java.lang.StringBuilder;

        specialinvoke $r71.<java.lang.StringBuilder: void <init>()>();

        varReplacer7111 = "destroy(";

        $r43 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7111);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        varReplacer7109 = ") closing the file system is not supported";

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7109);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r42.<org.slf4j.Logger: void debug(java.lang.String)>($r46);

     label11:
        goto label13;

     label12:
        $r25 := @caughtexception;

        r67 = $r25;

        $r26 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z7 = interfaceinvoke $r26.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z7 == 0 goto label13;

        $r28 = r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r72 = new java.lang.StringBuilder;

        specialinvoke $r72.<java.lang.StringBuilder: void <init>()>();

        varReplacer7102 = "destroy(";

        $r29 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7102);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        varReplacer7118 = ") failed (";

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7118);

        $r32 = virtualinvoke r67.<java.lang.Object: java.lang.Class getClass()>();

        $r33 = virtualinvoke $r32.<java.lang.Class: java.lang.String getSimpleName()>();

        $r34 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        varReplacer7112 = ") to close file system: ";

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7112);

        $r73 = (java.io.IOException) r67;

        $r36 = virtualinvoke $r73.<java.io.IOException: java.lang.String getMessage()>();

        $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r28.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Throwable)>($r38, r67);

     label13:
        return;

        catch java.lang.Exception from label02 to label03 with label04;
        catch java.lang.UnsupportedOperationException from label08 to label09 with label10;
        catch java.io.IOException from label08 to label09 with label12;
    }

    protected java.nio.file.Path resolveNormalizedLocation(java.lang.String) throws java.io.IOException, java.nio.file.InvalidPathException
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r0;
        java.lang.String r1;
        java.nio.file.Path $r2, $r3;

        nop;

        r0 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.nio.file.Path resolveFile(java.lang.String)>(r1);

        $r3 = virtualinvoke r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.nio.file.Path normalize(java.nio.file.Path)>($r2);

        return $r3;
    }

    protected java.nio.file.Path normalize(java.nio.file.Path)
    {
        java.nio.file.Path r0, r1, $r2, $r4;
        boolean $z0;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r3;
        null_type varReplacer7119;

        nop;

        r3 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: java.nio.file.Path;

        if r0 != null goto label1;

        varReplacer7119 = null;

        return varReplacer7119;

     label1:
        $z0 = interfaceinvoke r0.<java.nio.file.Path: boolean isAbsolute()>();

        if $z0 == 0 goto label2;

        $r4 = r0;

        goto label3;

     label2:
        $r4 = interfaceinvoke r0.<java.nio.file.Path: java.nio.file.Path toAbsolutePath()>();

     label3:
        r1 = $r4;

        $r2 = interfaceinvoke r1.<java.nio.file.Path: java.nio.file.Path normalize()>();

        return $r2;
    }

    protected java.nio.file.Path resolveFile(java.lang.String) throws java.io.IOException, java.nio.file.InvalidPathException
    {
        java.lang.String r0, r4, varReplacer7120;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem r1;
        java.nio.file.Path $r2, $r5, r6;
        java.nio.file.FileSystem $r3;
        org.slf4j.Logger $r7, $r9;
        boolean $z0;
        java.lang.Object[] $r8;
        org.apache.sshd.server.session.ServerSession $r10;
        int varReplacer7121;

        nop;

        r1 := @this: org.apache.sshd.server.subsystem.sftp.SftpSubsystem;

        r0 := @parameter0: java.lang.String;

        $r2 = r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.nio.file.Path defaultDir>;

        $r3 = interfaceinvoke $r2.<java.nio.file.Path: java.nio.file.FileSystem getFileSystem()>();

        varReplacer7121 = 47;

        r4 = staticinvoke <org.apache.sshd.common.util.SelectorUtils: java.lang.String translateToLocalFileSystemPath(java.lang.String,char,java.nio.file.FileSystem)>(r0, varReplacer7121, $r3);

        $r5 = r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.nio.file.Path defaultDir>;

        r6 = interfaceinvoke $r5.<java.nio.file.Path: java.nio.file.Path resolve(java.lang.String)>(r4);

        $r7 = r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r7.<org.slf4j.Logger: boolean isTraceEnabled()>();

        if $z0 == 0 goto label1;

        $r9 = r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.slf4j.Logger log>;

        $r8 = newarray (java.lang.Object)[3];

        $r10 = virtualinvoke r1.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem: org.apache.sshd.server.session.ServerSession getServerSession()>();

        $r8[0] = $r10;

        $r8[1] = r0;

        $r8[2] = r6;

        varReplacer7120 = "resolveFile({}) {} => {}";

        interfaceinvoke $r9.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object[])>(varReplacer7120, $r8);

     label1:
        return r6;
    }

    static void <clinit>()
    {
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem$1 $r0;
        java.util.Map $r1, $r20;
        org.apache.sshd.common.subsystem.sftp.extensions.openssh.AbstractOpenSSHExtensionParser$OpenSSHExtension[] $r2;
        org.apache.sshd.common.subsystem.sftp.extensions.openssh.AbstractOpenSSHExtensionParser$OpenSSHExtension $r3;
        java.util.List $r4, $r5, $r7, $r8, $r9, $r16;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem$2 $r6;
        int $i0, $i1, i2, varReplacer7122, varReplacer7126, varReplacer7127, varReplacer7128, varReplacer7129, varReplacer7130;
        java.util.HashSet $r10;
        java.lang.Integer[] $r11;
        java.lang.Integer $r12, $r13, $r14, $r15;
        java.util.Set $r17;
        org.apache.sshd.server.subsystem.sftp.SftpSubsystem$3 $r18;
        java.util.Comparator $r19;
        java.lang.StringBuilder $r21, r22;
        java.lang.String $r23, varReplacer7123, varReplacer7124, varReplacer7125;

        nop;

        $r0 = new org.apache.sshd.server.subsystem.sftp.SftpSubsystem$1;

        specialinvoke $r0.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem$1: void <init>()>();

        $r1 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r0);

        <org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map DEFAULT_SUPPORTED_CLIENT_EXTENSIONS> = $r1;

        $r2 = newarray (org.apache.sshd.common.subsystem.sftp.extensions.openssh.AbstractOpenSSHExtensionParser$OpenSSHExtension)[1];

        $r3 = new org.apache.sshd.common.subsystem.sftp.extensions.openssh.AbstractOpenSSHExtensionParser$OpenSSHExtension;

        varReplacer7124 = "fsync@openssh.com";

        varReplacer7125 = "1";

        specialinvoke $r3.<org.apache.sshd.common.subsystem.sftp.extensions.openssh.AbstractOpenSSHExtensionParser$OpenSSHExtension: void <init>(java.lang.String,java.lang.String)>(varReplacer7124, varReplacer7125);

        $r2[0] = $r3;

        $r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2);

        $r5 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r4);

        <org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.List DEFAULT_OPEN_SSH_EXTENSIONS> = $r5;

        $r6 = new org.apache.sshd.server.subsystem.sftp.SftpSubsystem$2;

        $r7 = <org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.List DEFAULT_OPEN_SSH_EXTENSIONS>;

        $i0 = interfaceinvoke $r7.<java.util.List: int size()>();

        specialinvoke $r6.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem$2: void <init>(int)>($i0);

        $r8 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r6);

        <org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.List DEFAULT_OPEN_SSH_EXTENSIONS_NAMES> = $r8;

        varReplacer7123 = "unix:*";

        $r9 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(varReplacer7123);

        <org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.List DEFAULT_UNIX_VIEW> = $r9;

        $r10 = new java.util.HashSet;

        $r11 = newarray (java.lang.Integer)[4];

        varReplacer7130 = 1;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(varReplacer7130);

        $r11[0] = $r12;

        varReplacer7122 = 2;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(varReplacer7122);

        $r11[1] = $r13;

        varReplacer7129 = 4;

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(varReplacer7129);

        $r11[2] = $r14;

        varReplacer7127 = 8;

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(varReplacer7127);

        $r11[3] = $r15;

        $r16 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r11);

        specialinvoke $r10.<java.util.HashSet: void <init>(java.util.Collection)>($r16);

        $r17 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r10);

        <org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Set DEFAULT_ACL_SUPPORTED_MASK> = $r17;

        $r18 = new org.apache.sshd.server.subsystem.sftp.SftpSubsystem$3;

        $r19 = <java.lang.String: java.util.Comparator CASE_INSENSITIVE_ORDER>;

        specialinvoke $r18.<org.apache.sshd.server.subsystem.sftp.SftpSubsystem$3: void <init>(java.util.Comparator)>($r19);

        $r20 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r18);

        <org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.util.Map FILEATTRS_RESOLVERS> = $r20;

        $r21 = new java.lang.StringBuilder;

        varReplacer7126 = 8;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>(int)>(varReplacer7126);

        r22 = $r21;

        i2 = 3;

     label1:
        if i2 > 6 goto label3;

        $i1 = virtualinvoke r22.<java.lang.StringBuilder: int length()>();

        if $i1 <= 0 goto label2;

        varReplacer7128 = 44;

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(varReplacer7128);

     label2:
        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        i2 = i2 + 1;

        goto label1;

     label3:
        $r23 = virtualinvoke r22.<java.lang.StringBuilder: java.lang.String toString()>();

        <org.apache.sshd.server.subsystem.sftp.SftpSubsystem: java.lang.String ALL_SFTP_IMPL> = $r23;

        return;
    }
}
