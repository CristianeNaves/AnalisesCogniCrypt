Ruleset: 
	java.security.KeyPair
	void
	javax.crypto.CipherInputStream
	java.security.spec.DSAGenParameterSpec
	java.security.SecureRandom
	javax.crypto.CipherOutputStream
	java.security.KeyStore
	javax.crypto.spec.GCMParameterSpec
	java.security.MessageDigest
	javax.net.ssl.KeyManagerFactory
	java.security.DigestInputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters
	javax.net.ssl.SSLEngine
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.SSLParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.TrustManagerFactory
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.AlgorithmParameters
	javax.crypto.spec.PBEParameterSpec
	java.security.cert.TrustAnchor
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.KeyGenerator
	javax.crypto.spec.DHParameterSpec
	javax.crypto.SecretKey
	javax.crypto.Mac
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLContext
	javax.crypto.SecretKeyFactory
	java.security.spec.DSAParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestOutputStream
	javax.crypto.spec.IvParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.Key
	javax.crypto.Cipher

Analyzed Objects: 
	Object:
		Variable: $r26
		Type: java.security.KeyPair
		Statement: specialinvoke $r26.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>(r10, r25)
		Method: <org.apache.sshd.common.config.keys.loader.pem.RSAPEMResourceKeyPairParser: java.security.KeyPair decodeRSAKeyPair(java.security.KeyFactory,java.io.InputStream,boolean)>
		SHA-256: 2ca09ee71cdc2271ff974fb8c9c675b54044e45ac61054a7d0c7e8117b14c44e
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.KeyPair
		Statement: specialinvoke $r6.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>(r30, r32)
		Method: <org.apache.sshd.common.config.keys.KeyEntryResolver: java.security.KeyPair cloneKeyPair(java.security.KeyPair)>
		SHA-256: b844371593e71391bdc86b86f988e7e888c70839f9175441c8541f6de89ade83
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <org.apache.sshd.common.random.JceRandom: void <init>()>
		SHA-256: 467144ba17400fa24baa1f93c306729e3889011fbf34f2626d36888840b5ccd7
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r12, varReplacer3542)
		Method: <org.apache.sshd.common.config.keys.loader.AESPrivateKeyObfuscator$LazyValuesHolder: java.util.List detectSupportedKeySizes()>
		SHA-256: 53751be27b972f1a4a1771c8d6a1f015c0b22f4824c3663efed6afb3ed08d21d
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>(r5, r5)
		Method: <org.apache.sshd.common.util.security.SecurityUtils: boolean isDHGroupExchangeSupported(int)>
		SHA-256: 684621fbf3bb1e58dbdfafc9c1b19cc893f1c5857bc22de0113a7c02ce2ee2bc
		Secure: true
	Object:
		Variable: r0
		Type: byte[]
		Statement: virtualinvoke r2.<java.util.Random: void nextBytes(byte[])>(r0)
		Method: <org.apache.sshd.common.config.keys.loader.AbstractPrivateKeyObfuscator: byte[] generateInitializationVector(int)>
		SHA-256: 6c6bab73e9ceb5f9a25314d23c286d735909f286e6d4536ef537da683b715b50
		Secure: true
	Object:
		Variable: $r7
		Type: java.lang.String
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r18, $r7)
		Method: <org.apache.sshd.common.cipher.BaseCipher: void init(org.apache.sshd.common.cipher.Cipher$Mode,byte[],byte[])>
		SHA-256: 3e96cfebaed0ddeeacd0395d0ccead13677813a6714ceea37309890077875fb0
		Secure: false
	Object:
		Variable: $r22
		Type: java.security.KeyPair
		Statement: specialinvoke $r22.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>(r8, r15)
		Method: <org.apache.sshd.common.config.keys.loader.openssh.OpenSSHKeyPairResourceParser: java.util.List readPrivateKeys(java.lang.String,org.apache.sshd.common.config.keys.loader.openssh.OpenSSHParserContext,java.util.Collection,org.apache.sshd.common.config.keys.FilePasswordProvider,java.io.InputStream)>
		SHA-256: 31a791680d07beeda7b52155c40752291aeddf00f5a4b87c4b8dc50be3b08436
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r6, $r2)
		Method: <org.apache.sshd.common.mac.BaseMac: void init(byte[])>
		SHA-256: bd9a3236c2c1b260417860e32b10086f980f5f153b506ff03c43b0c873c76fe3
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.KeyPair
		Statement: specialinvoke $r11.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>(r8, r10)
		Method: <org.apache.sshd.common.util.buffer.Buffer: java.security.KeyPair extractEC(java.lang.String,java.security.spec.ECParameterSpec)>
		SHA-256: 3ba499d88a7f4a65ccf58e04294a5e02105dc6900ed5e7abc3eab0b8c202608c
		Secure: true
	Object:
		Variable: $r7
		Type: java.lang.String
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r12, $r7)
		Method: <org.apache.sshd.common.cipher.BaseRC4Cipher: void init(org.apache.sshd.common.cipher.Cipher$Mode,byte[],byte[])>
		SHA-256: b3b589e9e802ab794b8de3eeac336396f43d7230818cb838e9b0e6d3e0cdbc57
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r19)
		Method: <org.apache.sshd.common.cipher.BaseCipher: void init(org.apache.sshd.common.cipher.Cipher$Mode,byte[],byte[])>
		SHA-256: c47c0caef47b86a7571551e312f9dede56e8bec5d614ab8eac6424a0312dddef
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.KeyPair
		Statement: specialinvoke $r8.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>(r7, r4)
		Method: <org.apache.sshd.common.config.keys.loader.pem.PKCS8PEMResourceKeyPairParser: java.util.Collection extractKeyPairs(java.lang.String,java.lang.String,java.lang.String,org.apache.sshd.common.config.keys.FilePasswordProvider,java.io.InputStream)>
		SHA-256: 4c3da8dc77e6480d443410563c5025fbddeb0f8b2acc0bb1e4b31e81198bba9e
		Secure: true
	Object:
		Variable: $r14
		Type: java.security.KeyPair
		Statement: specialinvoke $r14.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>(r32, r33)
		Method: <org.apache.sshd.common.util.buffer.Buffer: java.security.KeyPair getKeyPair()>
		SHA-256: 794b44ebe23784e1f82582f316cf7919f83d2181c4a760cf4b6e4c11c8aedd98
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.SecureRandom
		Statement: specialinvoke $r6.<java.security.SecureRandom: void <init>()>()
		Method: <org.apache.sshd.common.util.security.bouncycastle.BouncyCastleRandom: void <init>()>
		SHA-256: da84716729142fa081d155806a5e0f31c4e7f429a3013c55565777a11fef5f0c
		Secure: true
	Object:
		Variable: r3
		Type: byte[]
		Statement: r3 = virtualinvoke $r6.<java.security.SecureRandom: byte[] generateSeed(int)>(varReplacer4181)
		Method: <org.apache.sshd.common.util.security.bouncycastle.BouncyCastleRandom: void <init>()>
		SHA-256: 7eb9f980a097df5f63fffda3f272997c1d5a8fc86c912c930b92e5ec01b64ff8
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r5, $r4)
		Method: <org.apache.sshd.common.kex.DHG: byte[] getE()>
		SHA-256: 710c4407057370b57e25c51f288da824757d289852b8a0eb171e6b0689062bb9
		Secure: true
	Object:
		Variable: $r11
		Type: java.security.KeyPair
		Statement: specialinvoke $r11.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>(r6, r10)
		Method: <org.apache.sshd.common.config.keys.loader.pem.ECDSAPEMResourceKeyPairParser: java.util.Collection extractKeyPairs(java.lang.String,java.lang.String,java.lang.String,org.apache.sshd.common.config.keys.FilePasswordProvider,java.io.InputStream)>
		SHA-256: 99341984eb50d5b7e33eb9a2e54e24dc488b45b84bf7878b6026f916f68a4eb9
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r12, $r7)
		Method: <org.apache.sshd.common.cipher.BaseRC4Cipher: void init(org.apache.sshd.common.cipher.Cipher$Mode,byte[],byte[])>
		SHA-256: 1e34a0b9923921a76646acdc41e2d97cbaca464860179031851b0c94b42562b2
		Secure: false
	Object:
		Variable: $r68
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r68.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r10, r3)
		Method: <org.apache.sshd.common.config.keys.loader.AbstractPrivateKeyObfuscator: byte[] applyPrivateKeyCipher(byte[],org.apache.sshd.common.config.keys.loader.PrivateKeyEncryptionContext,int,byte[],boolean)>
		SHA-256: e9a803fb7f5c78752e98a1e2217fef0dcde442fdbb0651f070ab91359f4371ef
		Secure: false
	Object:
		Variable: $r17
		Type: java.security.KeyPair
		Statement: specialinvoke $r17.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>(r14, r16)
		Method: <org.apache.sshd.common.config.keys.loader.pem.DSSPEMResourceKeyPairParser: java.security.KeyPair decodeDSSKeyPair(java.security.KeyFactory,java.io.InputStream,boolean)>
		SHA-256: 6cd21ff24b87bd98e5dbbbd9a5dd597586d663dcbb882696b81b8b08d7bb59bc
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <org.apache.sshd.common.config.keys.loader.AbstractPrivateKeyObfuscator: byte[] generateInitializationVector(int)>
		SHA-256: 70aa120e4feaa85fbafdda73d1770d52cde045cbb15dab307fe58e1c4c82be1c
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r18, $r7)
		Method: <org.apache.sshd.common.cipher.BaseCipher: void init(org.apache.sshd.common.cipher.Cipher$Mode,byte[],byte[])>
		SHA-256: 36b44142a452d17b115c02dbe493876d3cde0fbe7c10bd8e37fb09a877c9f947
		Secure: false
	Object:
		Variable: r3
		Type: java.lang.String
		Statement: specialinvoke $r68.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r10, r3)
		Method: <org.apache.sshd.common.config.keys.loader.AbstractPrivateKeyObfuscator: byte[] applyPrivateKeyCipher(byte[],org.apache.sshd.common.config.keys.loader.PrivateKeyEncryptionContext,int,byte[],boolean)>
		SHA-256: e5ad110afde17400ca74dcd93867e80fb4ce4a556088784ae96f18a760acbf07
		Secure: false
	Object:
		Variable: varReplacer3542
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r12, varReplacer3542)
		Method: <org.apache.sshd.common.config.keys.loader.AESPrivateKeyObfuscator$LazyValuesHolder: java.util.List detectSupportedKeySizes()>
		SHA-256: 4489776a80f8e30e15341cf5dea11ff0ac779c71b99a71c4da1f3429ac55bd25
		Secure: false
	Object:
		Variable: $r69
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r69.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r14)
		Method: <org.apache.sshd.common.config.keys.loader.AbstractPrivateKeyObfuscator: byte[] applyPrivateKeyCipher(byte[],org.apache.sshd.common.config.keys.loader.PrivateKeyEncryptionContext,int,byte[],boolean)>
		SHA-256: cf40bc23abfe5af2027e48e6feed0e239bd6bf0ab6bdc01b3902c0af51fc823f
		Secure: false
	Object:
		Variable: $r2
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r6, $r2)
		Method: <org.apache.sshd.common.mac.BaseMac: void init(byte[])>
		SHA-256: 727df5f7292b9b1469174a17b141850166e8d1b2b11bf57ffbc3c278ad51fa28
		Secure: false

Findings in Java Class: org.apache.sshd.common.cipher.BaseRC4Cipher

	 in Method: void init(org.apache.sshd.common.cipher.Cipher$Mode,byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r12, $r7)


Findings in Java Class: org.apache.sshd.common.config.keys.loader.AESPrivateKeyObfuscator$LazyValuesHolder

	 in Method: java.util.List detectSupportedKeySizes()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r12, varReplacer3542)


Findings in Java Class: org.apache.sshd.common.config.keys.loader.AbstractPrivateKeyObfuscator

	 in Method: byte[] applyPrivateKeyCipher(byte[],org.apache.sshd.common.config.keys.loader.PrivateKeyEncryptionContext,int,byte[],boolean)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r68.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r10, r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r69.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r14)


Findings in Java Class: org.apache.sshd.common.cipher.BaseCipher

	 in Method: void init(org.apache.sshd.common.cipher.Cipher$Mode,byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r18, $r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r19)


Findings in Java Class: org.apache.sshd.common.mac.BaseMac

	 in Method: void init(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r6, $r2)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 27

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 7
=====================================================================