public class org.apache.xml.security.keys.keyresolver.implementations.EncryptedKeyResolver extends org.apache.xml.security.keys.keyresolver.KeyResolverSpi
{
    private static org.slf4j.Logger log;
    private java.security.Key kek;
    private java.lang.String algorithm;
    private java.util.List internalKeyResolvers;

    public void <init>(java.lang.String)
    {
        org.apache.xml.security.keys.keyresolver.implementations.EncryptedKeyResolver r0;
        java.lang.String r1;
        null_type varReplacer3256;

        nop;

        r0 := @this: org.apache.xml.security.keys.keyresolver.implementations.EncryptedKeyResolver;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.xml.security.keys.keyresolver.KeyResolverSpi: void <init>()>();

        varReplacer3256 = null;

        r0.<org.apache.xml.security.keys.keyresolver.implementations.EncryptedKeyResolver: java.security.Key kek> = varReplacer3256;

        r0.<org.apache.xml.security.keys.keyresolver.implementations.EncryptedKeyResolver: java.lang.String algorithm> = r1;

        return;
    }

    public void <init>(java.lang.String, java.security.Key)
    {
        org.apache.xml.security.keys.keyresolver.implementations.EncryptedKeyResolver r0;
        java.lang.String r1;
        java.security.Key r2;

        nop;

        r0 := @this: org.apache.xml.security.keys.keyresolver.implementations.EncryptedKeyResolver;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.security.Key;

        specialinvoke r0.<org.apache.xml.security.keys.keyresolver.KeyResolverSpi: void <init>()>();

        r0.<org.apache.xml.security.keys.keyresolver.implementations.EncryptedKeyResolver: java.lang.String algorithm> = r1;

        r0.<org.apache.xml.security.keys.keyresolver.implementations.EncryptedKeyResolver: java.security.Key kek> = r2;

        return;
    }

    public void registerInternalKeyResolver(org.apache.xml.security.keys.keyresolver.KeyResolverSpi)
    {
        org.apache.xml.security.keys.keyresolver.implementations.EncryptedKeyResolver r0;
        java.util.List $r1, $r3;
        org.apache.xml.security.keys.keyresolver.KeyResolverSpi r2;
        java.util.ArrayList $r4;

        nop;

        r0 := @this: org.apache.xml.security.keys.keyresolver.implementations.EncryptedKeyResolver;

        r2 := @parameter0: org.apache.xml.security.keys.keyresolver.KeyResolverSpi;

        $r1 = r0.<org.apache.xml.security.keys.keyresolver.implementations.EncryptedKeyResolver: java.util.List internalKeyResolvers>;

        if $r1 != null goto label1;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.xml.security.keys.keyresolver.implementations.EncryptedKeyResolver: java.util.List internalKeyResolvers> = $r4;

     label1:
        $r3 = r0.<org.apache.xml.security.keys.keyresolver.implementations.EncryptedKeyResolver: java.util.List internalKeyResolvers>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r2);

        return;
    }

    public java.security.PublicKey engineLookupAndResolvePublicKey(org.w3c.dom.Element, java.lang.String, org.apache.xml.security.keys.storage.StorageResolver)
    {
        org.apache.xml.security.keys.keyresolver.implementations.EncryptedKeyResolver r0;
        org.w3c.dom.Element r1;
        java.lang.String r2;
        org.apache.xml.security.keys.storage.StorageResolver r3;
        null_type varReplacer3257;

        nop;

        r0 := @this: org.apache.xml.security.keys.keyresolver.implementations.EncryptedKeyResolver;

        r1 := @parameter0: org.w3c.dom.Element;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: org.apache.xml.security.keys.storage.StorageResolver;

        varReplacer3257 = null;

        return varReplacer3257;
    }

    public java.security.cert.X509Certificate engineLookupResolveX509Certificate(org.w3c.dom.Element, java.lang.String, org.apache.xml.security.keys.storage.StorageResolver)
    {
        org.apache.xml.security.keys.keyresolver.implementations.EncryptedKeyResolver r0;
        org.w3c.dom.Element r1;
        java.lang.String r2;
        org.apache.xml.security.keys.storage.StorageResolver r3;
        null_type varReplacer3258;

        nop;

        r0 := @this: org.apache.xml.security.keys.keyresolver.implementations.EncryptedKeyResolver;

        r1 := @parameter0: org.w3c.dom.Element;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: org.apache.xml.security.keys.storage.StorageResolver;

        varReplacer3258 = null;

        return varReplacer3258;
    }

    public javax.crypto.SecretKey engineLookupAndResolveSecretKey(org.w3c.dom.Element, java.lang.String, org.apache.xml.security.keys.storage.StorageResolver)
    {
        org.slf4j.Logger $r0, $r2, $r12, $r14, $r20, $r21;
        boolean $z0, z1, $z2, $z3;
        org.w3c.dom.Element r1;
        org.apache.xml.security.keys.keyresolver.implementations.EncryptedKeyResolver r3;
        java.security.Key $r4, $r7;
        java.util.List $r5, $r8, $r9;
        java.lang.String $r6, $r16, $r18, $r22, r23, varReplacer3259, varReplacer3262, varReplacer3263;
        java.lang.Object $r10;
        org.apache.xml.security.keys.keyresolver.KeyResolverSpi $r11;
        java.lang.StringBuilder $r13, $r15, $r17;
        org.apache.xml.security.encryption.XMLEncryptionException $r19, r28;
        org.apache.xml.security.keys.storage.StorageResolver r24;
        javax.crypto.SecretKey r25;
        org.apache.xml.security.encryption.XMLCipher r26;
        int i0, i1, varReplacer3260;
        org.apache.xml.security.encryption.EncryptedKey r27;
        null_type varReplacer3261;

        nop;

        r3 := @this: org.apache.xml.security.keys.keyresolver.implementations.EncryptedKeyResolver;

        r1 := @parameter0: org.w3c.dom.Element;

        r23 := @parameter1: java.lang.String;

        r24 := @parameter2: org.apache.xml.security.keys.storage.StorageResolver;

        $r0 = <org.apache.xml.security.keys.keyresolver.implementations.EncryptedKeyResolver: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r0.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r14 = <org.apache.xml.security.keys.keyresolver.implementations.EncryptedKeyResolver: org.slf4j.Logger log>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        varReplacer3263 = "EncryptedKeyResolver - Can I resolve ";

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3263);

        $r16 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getTagName()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r14.<org.slf4j.Logger: void debug(java.lang.String)>($r18);

     label1:
        if r1 != null goto label2;

        varReplacer3261 = null;

        return varReplacer3261;

     label2:
        r25 = null;

        varReplacer3259 = "EncryptedKey";

        z1 = staticinvoke <org.apache.xml.security.utils.XMLUtils: boolean elementIsInEncryptionSpace(org.w3c.dom.Element,java.lang.String)>(r1, varReplacer3259);

        if z1 == 0 goto label8;

        $r2 = <org.apache.xml.security.keys.keyresolver.implementations.EncryptedKeyResolver: org.slf4j.Logger log>;

        $z2 = interfaceinvoke $r2.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z2 == 0 goto label3;

        $r12 = <org.apache.xml.security.keys.keyresolver.implementations.EncryptedKeyResolver: org.slf4j.Logger log>;

        varReplacer3262 = "Passed an Encrypted Key";

        interfaceinvoke $r12.<org.slf4j.Logger: void debug(java.lang.String)>(varReplacer3262);

     label3:
        r26 = staticinvoke <org.apache.xml.security.encryption.XMLCipher: org.apache.xml.security.encryption.XMLCipher getInstance()>();

        $r4 = r3.<org.apache.xml.security.keys.keyresolver.implementations.EncryptedKeyResolver: java.security.Key kek>;

        varReplacer3260 = 4;

        virtualinvoke r26.<org.apache.xml.security.encryption.XMLCipher: void init(int,java.security.Key)>(varReplacer3260, $r4);

        $r5 = r3.<org.apache.xml.security.keys.keyresolver.implementations.EncryptedKeyResolver: java.util.List internalKeyResolvers>;

        if $r5 == null goto label5;

        $r8 = r3.<org.apache.xml.security.keys.keyresolver.implementations.EncryptedKeyResolver: java.util.List internalKeyResolvers>;

        i0 = interfaceinvoke $r8.<java.util.List: int size()>();

        i1 = 0;

     label4:
        if i1 >= i0 goto label5;

        $r9 = r3.<org.apache.xml.security.keys.keyresolver.implementations.EncryptedKeyResolver: java.util.List internalKeyResolvers>;

        $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(i1);

        $r11 = (org.apache.xml.security.keys.keyresolver.KeyResolverSpi) $r10;

        virtualinvoke r26.<org.apache.xml.security.encryption.XMLCipher: void registerInternalKeyResolver(org.apache.xml.security.keys.keyresolver.KeyResolverSpi)>($r11);

        i1 = i1 + 1;

        goto label4;

     label5:
        r27 = virtualinvoke r26.<org.apache.xml.security.encryption.XMLCipher: org.apache.xml.security.encryption.EncryptedKey loadEncryptedKey(org.w3c.dom.Element)>(r1);

        $r6 = r3.<org.apache.xml.security.keys.keyresolver.implementations.EncryptedKeyResolver: java.lang.String algorithm>;

        $r7 = virtualinvoke r26.<org.apache.xml.security.encryption.XMLCipher: java.security.Key decryptKey(org.apache.xml.security.encryption.EncryptedKey,java.lang.String)>(r27, $r6);

        r25 = (javax.crypto.SecretKey) $r7;

     label6:
        goto label8;

     label7:
        $r19 := @caughtexception;

        r28 = $r19;

        $r20 = <org.apache.xml.security.keys.keyresolver.implementations.EncryptedKeyResolver: org.slf4j.Logger log>;

        $z3 = interfaceinvoke $r20.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z3 == 0 goto label8;

        $r21 = <org.apache.xml.security.keys.keyresolver.implementations.EncryptedKeyResolver: org.slf4j.Logger log>;

        $r22 = virtualinvoke r28.<org.apache.xml.security.encryption.XMLEncryptionException: java.lang.String getMessage()>();

        interfaceinvoke $r21.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Throwable)>($r22, r28);

     label8:
        return r25;

        catch org.apache.xml.security.encryption.XMLEncryptionException from label3 to label6 with label7;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        nop;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/xml/security/keys/keyresolver/implementations/RSAKeyValueResolver;");

        <org.apache.xml.security.keys.keyresolver.implementations.EncryptedKeyResolver: org.slf4j.Logger log> = $r0;

        return;
    }
}
