public abstract class org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor extends org.apache.xml.security.stax.ext.AbstractInputProcessor
{
    private static final transient org.slf4j.Logger log;
    protected static final java.lang.Integer maximumAllowedXMLStructureDepth;
    protected static final java.lang.Integer maximumAllowedEncryptedDataEvents;
    private final org.apache.xml.security.binding.xmldsig.KeyInfoType keyInfoType;
    private final java.util.Map references;
    private final java.util.List processedReferences;
    private final java.lang.String uuid;
    private final javax.xml.namespace.QName wrapperElementName;
    private final java.util.ArrayDeque tmpXmlEventList;

    public void <init>(org.apache.xml.security.stax.ext.XMLSecurityProperties) throws org.apache.xml.security.exceptions.XMLSecurityException
    {
        org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor r0;
        org.apache.xml.security.stax.ext.XMLSecurityProperties r1;
        java.lang.String $r2, $r4, varReplacer4533, varReplacer4534;
        javax.xml.namespace.QName $r3;
        java.util.ArrayDeque $r5;
        null_type varReplacer4535, varReplacer4536, varReplacer4537, varReplacer4538;

        nop;

        r0 := @this: org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor;

        r1 := @parameter0: org.apache.xml.security.stax.ext.XMLSecurityProperties;

        specialinvoke r0.<org.apache.xml.security.stax.ext.AbstractInputProcessor: void <init>(org.apache.xml.security.stax.ext.XMLSecurityProperties)>(r1);

        varReplacer4537 = null;

        $r2 = staticinvoke <org.apache.xml.security.stax.impl.util.IDGenerator: java.lang.String generateID(java.lang.String)>(varReplacer4537);

        r0.<org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor: java.lang.String uuid> = $r2;

        $r3 = new javax.xml.namespace.QName;

        $r4 = r0.<org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor: java.lang.String uuid>;

        varReplacer4533 = "http://dummy";

        varReplacer4534 = "dummy";

        specialinvoke $r3.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String,java.lang.String)>(varReplacer4533, varReplacer4534, $r4);

        r0.<org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor: javax.xml.namespace.QName wrapperElementName> = $r3;

        $r5 = new java.util.ArrayDeque;

        specialinvoke $r5.<java.util.ArrayDeque: void <init>()>();

        r0.<org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor: java.util.ArrayDeque tmpXmlEventList> = $r5;

        varReplacer4538 = null;

        r0.<org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor: org.apache.xml.security.binding.xmldsig.KeyInfoType keyInfoType> = varReplacer4538;

        varReplacer4536 = null;

        r0.<org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor: java.util.Map references> = varReplacer4536;

        varReplacer4535 = null;

        r0.<org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor: java.util.List processedReferences> = varReplacer4535;

        return;
    }

    public void <init>(org.apache.xml.security.binding.xmldsig.KeyInfoType, org.apache.xml.security.binding.xmlenc.ReferenceList, org.apache.xml.security.stax.ext.XMLSecurityProperties) throws org.apache.xml.security.exceptions.XMLSecurityException
    {
        org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor r0;
        org.apache.xml.security.stax.ext.XMLSecurityProperties r1;
        java.lang.String $r2, $r4, $r16, $r18, $r19, varReplacer4540, varReplacer4541, varReplacer4542;
        javax.xml.namespace.QName $r3;
        java.util.ArrayDeque $r5;
        org.apache.xml.security.binding.xmldsig.KeyInfoType r6;
        org.apache.xml.security.binding.xmlenc.ReferenceList r7;
        java.util.List r8;
        java.util.HashMap $r9;
        int $i0, $i1, $i2;
        java.util.ArrayList $r10;
        java.util.Iterator r11;
        boolean $z0;
        java.lang.Object $r12, $r14;
        javax.xml.bind.JAXBElement $r13;
        org.apache.xml.security.binding.xmlenc.ReferenceType r15;
        java.util.Map $r17;
        org.apache.xml.security.exceptions.XMLSecurityException $r21;
        null_type varReplacer4539;

        nop;

        r0 := @this: org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor;

        r6 := @parameter0: org.apache.xml.security.binding.xmldsig.KeyInfoType;

        r7 := @parameter1: org.apache.xml.security.binding.xmlenc.ReferenceList;

        r1 := @parameter2: org.apache.xml.security.stax.ext.XMLSecurityProperties;

        specialinvoke r0.<org.apache.xml.security.stax.ext.AbstractInputProcessor: void <init>(org.apache.xml.security.stax.ext.XMLSecurityProperties)>(r1);

        varReplacer4539 = null;

        $r2 = staticinvoke <org.apache.xml.security.stax.impl.util.IDGenerator: java.lang.String generateID(java.lang.String)>(varReplacer4539);

        r0.<org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor: java.lang.String uuid> = $r2;

        $r3 = new javax.xml.namespace.QName;

        $r4 = r0.<org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor: java.lang.String uuid>;

        varReplacer4541 = "http://dummy";

        varReplacer4542 = "dummy";

        specialinvoke $r3.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String,java.lang.String)>(varReplacer4541, varReplacer4542, $r4);

        r0.<org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor: javax.xml.namespace.QName wrapperElementName> = $r3;

        $r5 = new java.util.ArrayDeque;

        specialinvoke $r5.<java.util.ArrayDeque: void <init>()>();

        r0.<org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor: java.util.ArrayDeque tmpXmlEventList> = $r5;

        r0.<org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor: org.apache.xml.security.binding.xmldsig.KeyInfoType keyInfoType> = r6;

        r8 = virtualinvoke r7.<org.apache.xml.security.binding.xmlenc.ReferenceList: java.util.List getDataReferenceOrKeyReference()>();

        $r9 = new java.util.HashMap;

        $i0 = interfaceinvoke r8.<java.util.List: int size()>();

        $i1 = $i0 + 1;

        specialinvoke $r9.<java.util.HashMap: void <init>(int)>($i1);

        r0.<org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor: java.util.Map references> = $r9;

        $r10 = new java.util.ArrayList;

        $i2 = interfaceinvoke r8.<java.util.List: int size()>();

        specialinvoke $r10.<java.util.ArrayList: void <init>(int)>($i2);

        r0.<org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor: java.util.List processedReferences> = $r10;

        r11 = interfaceinvoke r8.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r12 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();

        $r13 = (javax.xml.bind.JAXBElement) $r12;

        $r14 = virtualinvoke $r13.<javax.xml.bind.JAXBElement: java.lang.Object getValue()>();

        r15 = (org.apache.xml.security.binding.xmlenc.ReferenceType) $r14;

        $r16 = virtualinvoke r15.<org.apache.xml.security.binding.xmlenc.ReferenceType: java.lang.String getURI()>();

        if $r16 != null goto label2;

        $r21 = new org.apache.xml.security.exceptions.XMLSecurityException;

        varReplacer4540 = "stax.emptyReferenceURI";

        specialinvoke $r21.<org.apache.xml.security.exceptions.XMLSecurityException: void <init>(java.lang.String)>(varReplacer4540);

        throw $r21;

     label2:
        $r17 = r0.<org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor: java.util.Map references>;

        $r18 = virtualinvoke r15.<org.apache.xml.security.binding.xmlenc.ReferenceType: java.lang.String getURI()>();

        $r19 = staticinvoke <org.apache.xml.security.stax.ext.XMLSecurityUtils: java.lang.String dropReferenceMarker(java.lang.String)>($r18);

        interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r19, r15);

        goto label1;

     label3:
        return;
    }

    public java.util.Map getReferences()
    {
        org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor r0;
        java.util.Map $r1;

        nop;

        r0 := @this: org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor;

        $r1 = r0.<org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor: java.util.Map references>;

        return $r1;
    }

    public java.util.List getProcessedReferences()
    {
        org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor r0;
        java.util.List $r1;

        nop;

        r0 := @this: org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor;

        $r1 = r0.<org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor: java.util.List processedReferences>;

        return $r1;
    }

    public org.apache.xml.security.stax.ext.stax.XMLSecEvent processNextHeaderEvent(org.apache.xml.security.stax.ext.InputProcessorChain) throws javax.xml.stream.XMLStreamException, org.apache.xml.security.exceptions.XMLSecurityException
    {
        org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor r0;
        org.apache.xml.security.stax.ext.InputProcessorChain r1;
        org.apache.xml.security.stax.ext.stax.XMLSecEvent $r2;
        int varReplacer4543;

        nop;

        r0 := @this: org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor;

        r1 := @parameter0: org.apache.xml.security.stax.ext.InputProcessorChain;

        varReplacer4543 = 1;

        $r2 = specialinvoke r0.<org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor: org.apache.xml.security.stax.ext.stax.XMLSecEvent processEvent(org.apache.xml.security.stax.ext.InputProcessorChain,boolean)>(r1, varReplacer4543);

        return $r2;
    }

    public org.apache.xml.security.stax.ext.stax.XMLSecEvent processNextEvent(org.apache.xml.security.stax.ext.InputProcessorChain) throws javax.xml.stream.XMLStreamException, org.apache.xml.security.exceptions.XMLSecurityException
    {
        org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor r0;
        org.apache.xml.security.stax.ext.InputProcessorChain r1;
        org.apache.xml.security.stax.ext.stax.XMLSecEvent $r2;
        int varReplacer4544;

        nop;

        r0 := @this: org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor;

        r1 := @parameter0: org.apache.xml.security.stax.ext.InputProcessorChain;

        varReplacer4544 = 0;

        $r2 = specialinvoke r0.<org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor: org.apache.xml.security.stax.ext.stax.XMLSecEvent processEvent(org.apache.xml.security.stax.ext.InputProcessorChain,boolean)>(r1, varReplacer4544);

        return $r2;
    }

    private org.apache.xml.security.stax.ext.stax.XMLSecEvent processEvent(org.apache.xml.security.stax.ext.InputProcessorChain, boolean) throws javax.xml.stream.XMLStreamException, org.apache.xml.security.exceptions.XMLSecurityException
    {
        org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor r0;
        java.util.ArrayDeque $r1, $r8, $r49, $r50, $r53;
        boolean $z0, z1, $z2, $z3, $z4, $z5, $z7, z8;
        org.apache.xml.security.stax.ext.InputProcessorChain r2, r9;
        int $i0, $i1, i2, $i3, varReplacer4551;
        javax.xml.namespace.QName $r3, $r4, $r5, $r6;
        java.util.Map $r7;
        org.apache.xml.security.binding.xmlenc.EncryptedDataType r10;
        java.lang.String $r11, r15, $r22, $r29, $r30, $r45, varReplacer4545, varReplacer4547, varReplacer4548, varReplacer4549, varReplacer4550;
        org.apache.xml.security.stax.securityToken.InboundSecurityToken r12;
        org.apache.xml.security.stax.ext.InboundSecurityContext $r13, $r24, $r36;
        org.apache.xml.security.binding.xmlenc.EncryptionMethodType $r14;
        javax.crypto.Cipher r16;
        org.apache.xml.security.binding.xmlenc.CipherDataType $r17;
        org.apache.xml.security.binding.xmlenc.CipherReferenceType $r18;
        org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor$DecryptionThread r20, $r73;
        org.apache.xml.security.stax.ext.XMLSecurityConstants$AlgorithmUsage $r21;
        byte[] $r23;
        org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor$AbstractDecryptedEventReaderInputProcessor r25;
        org.apache.xml.security.stax.ext.DocumentContext $r26;
        java.util.List $r27, $r46, $r47;
        org.apache.xml.security.stax.ext.SecurePart$Modifier $r28;
        java.lang.Thread r32, $r74;
        org.slf4j.Logger $r33;
        java.io.InputStream r34, r35, r71;
        java.lang.Object $r37, $r51, $r54;
        java.io.InputStream[] $r39;
        javax.xml.stream.XMLInputFactory $r40;
        javax.xml.stream.XMLStreamReader r41;
        org.apache.xml.security.stax.ext.stax.XMLSecEvent $r42, $r43, $r52, $r55, $r60, r61, $r64;
        org.apache.xml.security.stax.ext.stax.XMLSecStartElement $r44, r62, r67;
        java.lang.Throwable $r56, $r58, r68, r69;
        org.apache.xml.security.binding.xmlenc.ReferenceType r63;
        java.security.Key r65;
        javax.crypto.SecretKey r66;
        java.io.PipedInputStream r70;
        org.apache.xml.security.exceptions.XMLSecurityException $r72, $r75, $r76;
        org.apache.xml.security.stax.impl.util.MultiInputStream $r77;
        java.lang.Exception $r78, $r79;
        null_type varReplacer4546;

        nop;

        r0 := @this: org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor;

        r2 := @parameter0: org.apache.xml.security.stax.ext.InputProcessorChain;

        z1 := @parameter1: boolean;

        $r1 = r0.<org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor: java.util.ArrayDeque tmpXmlEventList>;

        $z0 = virtualinvoke $r1.<java.util.ArrayDeque: boolean isEmpty()>();

        if $z0 != 0 goto label01;

        $r53 = r0.<org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor: java.util.ArrayDeque tmpXmlEventList>;

        $r54 = virtualinvoke $r53.<java.util.ArrayDeque: java.lang.Object pollLast()>();

        $r55 = (org.apache.xml.security.stax.ext.stax.XMLSecEvent) $r54;

        return $r55;

     label01:
        if z1 == 0 goto label02;

        $r60 = interfaceinvoke r2.<org.apache.xml.security.stax.ext.InputProcessorChain: org.apache.xml.security.stax.ext.stax.XMLSecEvent processHeaderEvent()>();

        goto label03;

     label02:
        $r60 = interfaceinvoke r2.<org.apache.xml.security.stax.ext.InputProcessorChain: org.apache.xml.security.stax.ext.stax.XMLSecEvent processEvent()>();

     label03:
        r61 = $r60;

        z8 = 0;

        $i0 = interfaceinvoke r61.<org.apache.xml.security.stax.ext.stax.XMLSecEvent: int getEventType()>();

        if $i0 != 1 goto label21;

        r62 = interfaceinvoke r61.<org.apache.xml.security.stax.ext.stax.XMLSecEvent: org.apache.xml.security.stax.ext.stax.XMLSecStartElement asStartElement()>();

        $r3 = interfaceinvoke r62.<org.apache.xml.security.stax.ext.stax.XMLSecStartElement: javax.xml.namespace.QName getName()>();

        $r4 = <org.apache.xml.security.stax.ext.XMLSecurityConstants: javax.xml.namespace.QName TAG_wsse11_EncryptedHeader>;

        $z2 = virtualinvoke $r3.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r4);

        if $z2 == 0 goto label04;

        r61 = specialinvoke r0.<org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor: org.apache.xml.security.stax.ext.stax.XMLSecEvent readAndBufferEncryptedHeader(org.apache.xml.security.stax.ext.InputProcessorChain,boolean,org.apache.xml.security.stax.ext.stax.XMLSecEvent)>(r2, z1, r61);

        r62 = interfaceinvoke r61.<org.apache.xml.security.stax.ext.stax.XMLSecEvent: org.apache.xml.security.stax.ext.stax.XMLSecStartElement asStartElement()>();

        z8 = 1;

     label04:
        $r5 = interfaceinvoke r62.<org.apache.xml.security.stax.ext.stax.XMLSecStartElement: javax.xml.namespace.QName getName()>();

        $r6 = <org.apache.xml.security.stax.ext.XMLSecurityConstants: javax.xml.namespace.QName TAG_xenc_EncryptedData>;

        $z3 = virtualinvoke $r5.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r6);

        if $z3 == 0 goto label21;

        r63 = null;

        $r7 = r0.<org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor: java.util.Map references>;

        if $r7 == null goto label08;

        r63 = virtualinvoke r0.<org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor: org.apache.xml.security.binding.xmlenc.ReferenceType matchesReferenceId(org.apache.xml.security.stax.ext.stax.XMLSecStartElement)>(r62);

        if r63 != null goto label06;

        $r49 = r0.<org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor: java.util.ArrayDeque tmpXmlEventList>;

        $z7 = virtualinvoke $r49.<java.util.ArrayDeque: boolean isEmpty()>();

        if $z7 != 0 goto label05;

        $r50 = r0.<org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor: java.util.ArrayDeque tmpXmlEventList>;

        $r51 = virtualinvoke $r50.<java.util.ArrayDeque: java.lang.Object pollLast()>();

        $r52 = (org.apache.xml.security.stax.ext.stax.XMLSecEvent) $r51;

        return $r52;

     label05:
        return r61;

     label06:
        $r46 = r0.<org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor: java.util.List processedReferences>;

        $z5 = interfaceinvoke $r46.<java.util.List: boolean contains(java.lang.Object)>(r63);

        if $z5 == 0 goto label07;

        $r72 = new org.apache.xml.security.exceptions.XMLSecurityException;

        varReplacer4545 = "signature.Verification.MultipleIDs";

        specialinvoke $r72.<org.apache.xml.security.exceptions.XMLSecurityException: void <init>(java.lang.String)>(varReplacer4545);

        throw $r72;

     label07:
        $r47 = r0.<org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor: java.util.List processedReferences>;

        interfaceinvoke $r47.<java.util.List: boolean add(java.lang.Object)>(r63);

     label08:
        $r8 = r0.<org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor: java.util.ArrayDeque tmpXmlEventList>;

        virtualinvoke $r8.<java.util.ArrayDeque: void clear()>();

        r9 = interfaceinvoke r2.<org.apache.xml.security.stax.ext.InputProcessorChain: org.apache.xml.security.stax.ext.InputProcessorChain createSubChain(org.apache.xml.security.stax.ext.InputProcessor)>(r0);

        r10 = specialinvoke r0.<org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor: org.apache.xml.security.binding.xmlenc.EncryptedDataType parseEncryptedDataStructure(boolean,org.apache.xml.security.stax.ext.stax.XMLSecEvent,org.apache.xml.security.stax.ext.InputProcessorChain)>(z1, r61, r9);

        $r11 = virtualinvoke r10.<org.apache.xml.security.binding.xmlenc.EncryptedDataType: java.lang.String getId()>();

        if $r11 != null goto label09;

        varReplacer4546 = null;

        $r45 = staticinvoke <org.apache.xml.security.stax.impl.util.IDGenerator: java.lang.String generateID(java.lang.String)>(varReplacer4546);

        virtualinvoke r10.<org.apache.xml.security.binding.xmlenc.EncryptedDataType: void setId(java.lang.String)>($r45);

     label09:
        r12 = specialinvoke r0.<org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor: org.apache.xml.security.stax.securityToken.InboundSecurityToken getSecurityToken(org.apache.xml.security.stax.ext.InputProcessorChain,org.apache.xml.security.stax.ext.stax.XMLSecStartElement,org.apache.xml.security.binding.xmlenc.EncryptedDataType)>(r2, r62, r10);

        $r13 = interfaceinvoke r2.<org.apache.xml.security.stax.ext.InputProcessorChain: org.apache.xml.security.stax.ext.InboundSecurityContext getSecurityContext()>();

        virtualinvoke r0.<org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor: void handleSecurityToken(org.apache.xml.security.stax.securityToken.InboundSecurityToken,org.apache.xml.security.stax.ext.InboundSecurityContext,org.apache.xml.security.binding.xmlenc.EncryptedDataType)>(r12, $r13, r10);

        $r14 = virtualinvoke r10.<org.apache.xml.security.binding.xmlenc.EncryptedDataType: org.apache.xml.security.binding.xmlenc.EncryptionMethodType getEncryptionMethod()>();

        r15 = virtualinvoke $r14.<org.apache.xml.security.binding.xmlenc.EncryptionMethodType: java.lang.String getAlgorithm()>();

        $i1 = staticinvoke <org.apache.xml.security.stax.config.JCEAlgorithmMapper: int getIVLengthFromURI(java.lang.String)>(r15);

        i2 = $i1 / 8;

        r16 = specialinvoke r0.<org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor: javax.crypto.Cipher getCipher(java.lang.String)>(r15);

        $r17 = virtualinvoke r10.<org.apache.xml.security.binding.xmlenc.EncryptedDataType: org.apache.xml.security.binding.xmlenc.CipherDataType getCipherData()>();

        $r18 = virtualinvoke $r17.<org.apache.xml.security.binding.xmlenc.CipherDataType: org.apache.xml.security.binding.xmlenc.CipherReferenceType getCipherReference()>();

        if $r18 == null goto label12;

        virtualinvoke r0.<org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor: void handleCipherReference(org.apache.xml.security.stax.ext.InputProcessorChain,org.apache.xml.security.binding.xmlenc.EncryptedDataType,javax.crypto.Cipher,org.apache.xml.security.stax.securityToken.InboundSecurityToken)>(r2, r10, r16, r12);

        interfaceinvoke r9.<org.apache.xml.security.stax.ext.InputProcessorChain: void reset()>();

        if z1 == 0 goto label10;

        $r64 = interfaceinvoke r9.<org.apache.xml.security.stax.ext.InputProcessorChain: org.apache.xml.security.stax.ext.stax.XMLSecEvent processHeaderEvent()>();

        goto label11;

     label10:
        $r64 = interfaceinvoke r9.<org.apache.xml.security.stax.ext.InputProcessorChain: org.apache.xml.security.stax.ext.stax.XMLSecEvent processEvent()>();

     label11:
        return $r64;

     label12:
        $r73 = new org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor$DecryptionThread;

        specialinvoke $r73.<org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor$DecryptionThread: void <init>(org.apache.xml.security.stax.ext.InputProcessorChain,boolean)>(r9, z1);

        r20 = $r73;

        $r21 = <org.apache.xml.security.stax.ext.XMLSecurityConstants: org.apache.xml.security.stax.ext.XMLSecurityConstants$AlgorithmUsage Enc>;

        $r22 = virtualinvoke r10.<org.apache.xml.security.binding.xmlenc.EncryptedDataType: java.lang.String getId()>();

        r65 = interfaceinvoke r12.<org.apache.xml.security.stax.securityToken.InboundSecurityToken: java.security.Key getSecretKey(java.lang.String,org.apache.xml.security.stax.ext.XMLSecurityConstants$AlgorithmUsage,java.lang.String)>(r15, $r21, $r22);

        $r23 = interfaceinvoke r65.<java.security.Key: byte[] getEncoded()>();

        r66 = staticinvoke <org.apache.xml.security.stax.ext.XMLSecurityUtils: javax.crypto.SecretKey prepareSecretKey(java.lang.String,byte[])>(r15, $r23);

        virtualinvoke r20.<org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor$DecryptionThread: void setSecretKey(java.security.Key)>(r66);

        virtualinvoke r20.<org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor$DecryptionThread: void setSymmetricCipher(javax.crypto.Cipher)>(r16);

        virtualinvoke r20.<org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor$DecryptionThread: void setIvLength(int)>(i2);

        r67 = interfaceinvoke r62.<org.apache.xml.security.stax.ext.stax.XMLSecStartElement: org.apache.xml.security.stax.ext.stax.XMLSecStartElement getParentXMLSecStartElement()>();

        if z8 == 0 goto label13;

        r67 = interfaceinvoke r67.<org.apache.xml.security.stax.ext.stax.XMLSecStartElement: org.apache.xml.security.stax.ext.stax.XMLSecStartElement getParentXMLSecStartElement()>();

     label13:
        $r24 = interfaceinvoke r2.<org.apache.xml.security.stax.ext.InputProcessorChain: org.apache.xml.security.stax.ext.InboundSecurityContext getSecurityContext()>();

        r25 = virtualinvoke r0.<org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor: org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor$AbstractDecryptedEventReaderInputProcessor newDecryptedEventReaderInputProcessor(boolean,org.apache.xml.security.stax.ext.stax.XMLSecStartElement,org.apache.xml.security.binding.xmlenc.EncryptedDataType,org.apache.xml.security.stax.securityToken.InboundSecurityToken,org.apache.xml.security.stax.ext.InboundSecurityContext)>(z8, r67, r10, r12, $r24);

        interfaceinvoke r2.<org.apache.xml.security.stax.ext.InputProcessorChain: void addProcessor(org.apache.xml.security.stax.ext.InputProcessor)>(r25);

        $r26 = interfaceinvoke r2.<org.apache.xml.security.stax.ext.InputProcessorChain: org.apache.xml.security.stax.ext.DocumentContext getDocumentContext()>();

        $r27 = interfaceinvoke r2.<org.apache.xml.security.stax.ext.InputProcessorChain: java.util.List getProcessors()>();

        $i3 = interfaceinvoke $r27.<java.util.List: int indexOf(java.lang.Object)>(r25);

        interfaceinvoke $r26.<org.apache.xml.security.stax.ext.DocumentContext: void setIsInEncryptedContent(int,java.lang.Object)>($i3, r25);

        $r28 = <org.apache.xml.security.stax.ext.SecurePart$Modifier: org.apache.xml.security.stax.ext.SecurePart$Modifier Content>;

        $r29 = virtualinvoke $r28.<org.apache.xml.security.stax.ext.SecurePart$Modifier: java.lang.String getModifier()>();

        $r30 = virtualinvoke r10.<org.apache.xml.security.binding.xmlenc.EncryptedDataType: java.lang.String getType()>();

        $z4 = virtualinvoke $r29.<java.lang.String: boolean equals(java.lang.Object)>($r30);

        if $z4 == 0 goto label14;

        $r44 = interfaceinvoke r62.<org.apache.xml.security.stax.ext.stax.XMLSecStartElement: org.apache.xml.security.stax.ext.stax.XMLSecStartElement getParentXMLSecStartElement()>();

        virtualinvoke r0.<org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor: void handleEncryptedContent(org.apache.xml.security.stax.ext.InputProcessorChain,org.apache.xml.security.stax.ext.stax.XMLSecStartElement,org.apache.xml.security.stax.securityToken.InboundSecurityToken,org.apache.xml.security.binding.xmlenc.EncryptedDataType)>(r2, $r44, r12, r10);

     label14:
        $r74 = new java.lang.Thread;

        specialinvoke $r74.<java.lang.Thread: void <init>(java.lang.Runnable)>(r20);

        r32 = $r74;

        varReplacer4551 = 6;

        virtualinvoke r32.<java.lang.Thread: void setPriority(int)>(varReplacer4551);

        varReplacer4550 = "decryption thread";

        virtualinvoke r32.<java.lang.Thread: void setName(java.lang.String)>(varReplacer4550);

        virtualinvoke r32.<java.lang.Thread: void setUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)>(r25);

        virtualinvoke r25.<org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor$AbstractDecryptedEventReaderInputProcessor: void setDecryptionThread(java.lang.Thread)>(r32);

        $r33 = <org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor: org.slf4j.Logger log>;

        varReplacer4547 = "Starting decryption thread";

        interfaceinvoke $r33.<org.slf4j.Logger: void debug(java.lang.String)>(varReplacer4547);

        virtualinvoke r32.<java.lang.Thread: void start()>();

     label15:
        r34 = specialinvoke r0.<org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor: java.io.InputStream writeWrapperStartElement(org.apache.xml.security.stax.ext.stax.XMLSecStartElement)>(r62);

        r35 = specialinvoke r0.<org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor: java.io.InputStream writeWrapperEndElement()>();

     label16:
        goto label19;

     label17:
        $r58 := @caughtexception;

        r68 = $r58;

        $r75 = new org.apache.xml.security.exceptions.XMLSecurityException;

        $r78 = (java.lang.Exception) r68;

        specialinvoke $r75.<org.apache.xml.security.exceptions.XMLSecurityException: void <init>(java.lang.Exception)>($r78);

        throw $r75;

     label18:
        $r56 := @caughtexception;

        r69 = $r56;

        $r76 = new org.apache.xml.security.exceptions.XMLSecurityException;

        $r79 = (java.lang.Exception) r69;

        specialinvoke $r76.<org.apache.xml.security.exceptions.XMLSecurityException: void <init>(java.lang.Exception)>($r79);

        throw $r76;

     label19:
        r70 = virtualinvoke r20.<org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor$DecryptionThread: java.io.PipedInputStream getPipedInputStream()>();

        r71 = virtualinvoke r0.<org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor: java.io.InputStream applyTransforms(org.apache.xml.security.binding.xmlenc.ReferenceType,java.io.InputStream)>(r63, r70);

        $r36 = interfaceinvoke r2.<org.apache.xml.security.stax.ext.InputProcessorChain: org.apache.xml.security.stax.ext.InboundSecurityContext getSecurityContext()>();

        varReplacer4548 = "XMLInputFactory";

        $r37 = interfaceinvoke $r36.<org.apache.xml.security.stax.ext.InboundSecurityContext: java.lang.Object get(java.lang.String)>(varReplacer4548);

        $r40 = (javax.xml.stream.XMLInputFactory) $r37;

        $r77 = new org.apache.xml.security.stax.impl.util.MultiInputStream;

        $r39 = newarray (java.io.InputStream)[3];

        $r39[0] = r34;

        $r39[1] = r71;

        $r39[2] = r35;

        specialinvoke $r77.<org.apache.xml.security.stax.impl.util.MultiInputStream: void <init>(java.io.InputStream[])>($r39);

        varReplacer4549 = "UTF-8";

        r41 = virtualinvoke $r40.<javax.xml.stream.XMLInputFactory: javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.InputStream,java.lang.String)>($r77, varReplacer4549);

        specialinvoke r0.<org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor: void forwardToWrapperElement(javax.xml.stream.XMLStreamReader)>(r41);

        virtualinvoke r25.<org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor$AbstractDecryptedEventReaderInputProcessor: void setXmlStreamReader(javax.xml.stream.XMLStreamReader)>(r41);

        if z1 == 0 goto label20;

        $r43 = virtualinvoke r25.<org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor$AbstractDecryptedEventReaderInputProcessor: org.apache.xml.security.stax.ext.stax.XMLSecEvent processNextHeaderEvent(org.apache.xml.security.stax.ext.InputProcessorChain)>(r2);

        return $r43;

     label20:
        $r42 = virtualinvoke r25.<org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor$AbstractDecryptedEventReaderInputProcessor: org.apache.xml.security.stax.ext.stax.XMLSecEvent processNextEvent(org.apache.xml.security.stax.ext.InputProcessorChain)>(r2);

        return $r42;

     label21:
        return r61;

        catch java.io.UnsupportedEncodingException from label15 to label16 with label17;
        catch java.io.IOException from label15 to label16 with label18;
    }

    protected java.io.InputStream applyTransforms(org.apache.xml.security.binding.xmlenc.ReferenceType, java.io.InputStream) throws org.apache.xml.security.exceptions.XMLSecurityException
    {
        java.io.InputStream r0;
        org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor r1;
        org.apache.xml.security.binding.xmlenc.ReferenceType r2;

        nop;

        r1 := @this: org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor;

        r2 := @parameter0: org.apache.xml.security.binding.xmlenc.ReferenceType;

        r0 := @parameter1: java.io.InputStream;

        return r0;
    }

    private java.io.InputStream writeWrapperStartElement(org.apache.xml.security.stax.ext.stax.XMLSecStartElement) throws java.io.IOException
    {
        java.lang.StringBuilder $r0, r1;
        org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor r3;
        javax.xml.namespace.QName $r4, $r8, $r13, $r17;
        java.lang.String $r5, $r9, $r14, $r18, $r28, r33, r34, varReplacer4552, varReplacer4553, varReplacer4555, varReplacer4558, varReplacer4559, varReplacer4562, varReplacer4563, varReplacer4564;
        java.util.ArrayList $r21, r22, $r23, r24;
        org.apache.xml.security.stax.ext.stax.XMLSecStartElement r25;
        int $i0, i1, varReplacer4554, varReplacer4556, varReplacer4557, varReplacer4560, varReplacer4561, varReplacer4565;
        org.apache.xml.security.stax.impl.util.UnsynchronizedByteArrayInputStream $r27;
        byte[] $r29;
        java.lang.Object $r30;
        org.apache.xml.security.stax.ext.stax.XMLSecNamespace r31;
        boolean $z0, $z2;

        nop;

        r3 := @this: org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor;

        r25 := @parameter0: org.apache.xml.security.stax.ext.stax.XMLSecStartElement;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        r1 = $r0;

        varReplacer4557 = 60;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(varReplacer4557);

        $r4 = r3.<org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor: javax.xml.namespace.QName wrapperElementName>;

        $r5 = virtualinvoke $r4.<javax.xml.namespace.QName: java.lang.String getPrefix()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        varReplacer4560 = 58;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(varReplacer4560);

        $r8 = r3.<org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor: javax.xml.namespace.QName wrapperElementName>;

        $r9 = virtualinvoke $r8.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        varReplacer4565 = 32;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(varReplacer4565);

        varReplacer4553 = "xmlns:";

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer4553);

        $r13 = r3.<org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor: javax.xml.namespace.QName wrapperElementName>;

        $r14 = virtualinvoke $r13.<javax.xml.namespace.QName: java.lang.String getPrefix()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        varReplacer4562 = "=\"";

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer4562);

        $r17 = r3.<org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor: javax.xml.namespace.QName wrapperElementName>;

        $r18 = virtualinvoke $r17.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        varReplacer4556 = 34;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(varReplacer4556);

        $r21 = new java.util.ArrayList;

        specialinvoke $r21.<java.util.ArrayList: void <init>()>();

        r22 = $r21;

        $r23 = new java.util.ArrayList;

        specialinvoke $r23.<java.util.ArrayList: void <init>()>();

        r24 = $r23;

        interfaceinvoke r25.<org.apache.xml.security.stax.ext.stax.XMLSecStartElement: void getNamespacesFromCurrentScope(java.util.List)>(r24);

        $i0 = interfaceinvoke r24.<java.util.List: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label5;

        $r30 = interfaceinvoke r24.<java.util.List: java.lang.Object get(int)>(i1);

        r31 = (org.apache.xml.security.stax.ext.stax.XMLSecNamespace) $r30;

        $z0 = interfaceinvoke r22.<java.util.List: boolean contains(java.lang.Object)>(r31);

        if $z0 != 0 goto label4;

        interfaceinvoke r22.<java.util.List: boolean add(java.lang.Object)>(r31);

        varReplacer4554 = 32;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(varReplacer4554);

        r33 = interfaceinvoke r31.<org.apache.xml.security.stax.ext.stax.XMLSecNamespace: java.lang.String getPrefix()>();

        r34 = interfaceinvoke r31.<org.apache.xml.security.stax.ext.stax.XMLSecNamespace: java.lang.String getNamespaceURI()>();

        if r33 == null goto label2;

        $z2 = virtualinvoke r33.<java.lang.String: boolean isEmpty()>();

        if $z2 == 0 goto label3;

     label2:
        varReplacer4559 = "xmlns=\"";

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer4559);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r34);

        varReplacer4558 = "\"";

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer4558);

        goto label4;

     label3:
        varReplacer4555 = "xmlns:";

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer4555);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r33);

        varReplacer4552 = "=\"";

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer4552);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r34);

        varReplacer4563 = "\"";

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer4563);

     label4:
        i1 = i1 + -1;

        goto label1;

     label5:
        varReplacer4561 = 62;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(varReplacer4561);

        $r27 = new org.apache.xml.security.stax.impl.util.UnsynchronizedByteArrayInputStream;

        $r28 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer4564 = "UTF-8";

        $r29 = virtualinvoke $r28.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer4564);

        specialinvoke $r27.<org.apache.xml.security.stax.impl.util.UnsynchronizedByteArrayInputStream: void <init>(byte[])>($r29);

        return $r27;
    }

    private java.io.InputStream writeWrapperEndElement() throws java.io.IOException
    {
        java.lang.StringBuilder $r0, r1;
        org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor r3;
        javax.xml.namespace.QName $r4, $r8;
        java.lang.String $r5, $r9, $r13, varReplacer4567, varReplacer4569;
        org.apache.xml.security.stax.impl.util.UnsynchronizedByteArrayInputStream $r12;
        byte[] $r14;
        int varReplacer4566, varReplacer4568;

        nop;

        r3 := @this: org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        r1 = $r0;

        varReplacer4567 = "</";

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer4567);

        $r4 = r3.<org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor: javax.xml.namespace.QName wrapperElementName>;

        $r5 = virtualinvoke $r4.<javax.xml.namespace.QName: java.lang.String getPrefix()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        varReplacer4566 = 58;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(varReplacer4566);

        $r8 = r3.<org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor: javax.xml.namespace.QName wrapperElementName>;

        $r9 = virtualinvoke $r8.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        varReplacer4568 = 62;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(varReplacer4568);

        $r12 = new org.apache.xml.security.stax.impl.util.UnsynchronizedByteArrayInputStream;

        $r13 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer4569 = "UTF-8";

        $r14 = virtualinvoke $r13.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer4569);

        specialinvoke $r12.<org.apache.xml.security.stax.impl.util.UnsynchronizedByteArrayInputStream: void <init>(byte[])>($r14);

        return $r12;
    }

    private void forwardToWrapperElement(javax.xml.stream.XMLStreamReader) throws javax.xml.stream.XMLStreamException
    {
        javax.xml.stream.XMLStreamReader r0;
        int $i0;
        boolean $z0, $z1;
        javax.xml.namespace.QName $r1, $r3;
        org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor r2;

        nop;

        r2 := @this: org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor;

        r0 := @parameter0: javax.xml.stream.XMLStreamReader;

     label1:
        $i0 = interfaceinvoke r0.<javax.xml.stream.XMLStreamReader: int getEventType()>();

        if $i0 != 1 goto label2;

        $r1 = interfaceinvoke r0.<javax.xml.stream.XMLStreamReader: javax.xml.namespace.QName getName()>();

        $r3 = r2.<org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor: javax.xml.namespace.QName wrapperElementName>;

        $z1 = virtualinvoke $r1.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label2;

        interfaceinvoke r0.<javax.xml.stream.XMLStreamReader: int next()>();

        goto label3;

     label2:
        interfaceinvoke r0.<javax.xml.stream.XMLStreamReader: int next()>();

        $z0 = interfaceinvoke r0.<javax.xml.stream.XMLStreamReader: boolean hasNext()>();

        if $z0 != 0 goto label1;

     label3:
        return;
    }

    private javax.crypto.Cipher getCipher(java.lang.String) throws org.apache.xml.security.exceptions.XMLSecurityException
    {
        java.lang.String r0, r1, r11, varReplacer4570;
        java.lang.Object[] $r3;
        java.lang.Throwable $r4, $r6, $r8, r13, r14, r15;
        org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor r10;
        javax.crypto.Cipher r12;
        org.apache.xml.security.exceptions.XMLSecurityException $r16, $r17, $r18, $r19;
        java.lang.Exception $r20, $r21, $r22;

        nop;

        r10 := @this: org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor;

        r0 := @parameter0: java.lang.String;

     label1:
        r11 = staticinvoke <org.apache.xml.security.stax.config.JCEAlgorithmMapper: java.lang.String translateURItoJCEID(java.lang.String)>(r0);

        r1 = staticinvoke <org.apache.xml.security.stax.config.JCEAlgorithmMapper: java.lang.String getJCEProviderFromURI(java.lang.String)>(r0);

        if r11 != null goto label2;

        $r16 = new org.apache.xml.security.exceptions.XMLSecurityException;

        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = r0;

        varReplacer4570 = "algorithms.NoSuchMap";

        specialinvoke $r16.<org.apache.xml.security.exceptions.XMLSecurityException: void <init>(java.lang.String,java.lang.Object[])>(varReplacer4570, $r3);

        throw $r16;

     label2:
        if r1 == null goto label3;

        r12 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(r11, r1);

        goto label4;

     label3:
        r12 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(r11);

     label4:
        goto label8;

     label5:
        $r8 := @caughtexception;

        r13 = $r8;

        $r17 = new org.apache.xml.security.exceptions.XMLSecurityException;

        $r20 = (java.lang.Exception) r13;

        specialinvoke $r17.<org.apache.xml.security.exceptions.XMLSecurityException: void <init>(java.lang.Exception)>($r20);

        throw $r17;

     label6:
        $r6 := @caughtexception;

        r14 = $r6;

        $r18 = new org.apache.xml.security.exceptions.XMLSecurityException;

        $r21 = (java.lang.Exception) r14;

        specialinvoke $r18.<org.apache.xml.security.exceptions.XMLSecurityException: void <init>(java.lang.Exception)>($r21);

        throw $r18;

     label7:
        $r4 := @caughtexception;

        r15 = $r4;

        $r19 = new org.apache.xml.security.exceptions.XMLSecurityException;

        $r22 = (java.lang.Exception) r15;

        specialinvoke $r19.<org.apache.xml.security.exceptions.XMLSecurityException: void <init>(java.lang.Exception)>($r22);

        throw $r19;

     label8:
        return r12;

        catch java.security.NoSuchAlgorithmException from label1 to label4 with label5;
        catch javax.crypto.NoSuchPaddingException from label1 to label4 with label6;
        catch java.security.NoSuchProviderException from label1 to label4 with label7;
    }

    private org.apache.xml.security.stax.securityToken.InboundSecurityToken getSecurityToken(org.apache.xml.security.stax.ext.InputProcessorChain, org.apache.xml.security.stax.ext.stax.XMLSecStartElement, org.apache.xml.security.binding.xmlenc.EncryptedDataType) throws org.apache.xml.security.exceptions.XMLSecurityException
    {
        org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor r0;
        org.apache.xml.security.stax.securityToken.SecurityTokenFactory $r1;
        org.apache.xml.security.stax.securityToken.SecurityTokenConstants$KeyUsage $r2;
        org.apache.xml.security.stax.ext.XMLSecurityProperties $r3, $r14;
        org.apache.xml.security.stax.ext.InputProcessorChain r4;
        org.apache.xml.security.stax.ext.InboundSecurityContext $r5, $r15;
        org.apache.xml.security.stax.securityToken.InboundSecurityToken $r6, $r19;
        java.util.List $r7;
        javax.xml.namespace.QName $r8;
        java.lang.Object $r9, $r18;
        org.apache.xml.security.binding.xmlenc.EncryptedKeyType r10;
        org.apache.xml.security.stax.impl.processor.input.XMLEncryptedKeyInputHandler $r11, r12;
        org.apache.xml.security.stax.ext.stax.XMLSecStartElement r13;
        java.lang.String $r16;
        org.apache.xml.security.stax.securityToken.SecurityTokenProvider r17;
        org.apache.xml.security.binding.xmlenc.EncryptedDataType r20;
        org.apache.xml.security.binding.xmldsig.KeyInfoType r21;

        nop;

        r0 := @this: org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor;

        r4 := @parameter0: org.apache.xml.security.stax.ext.InputProcessorChain;

        r13 := @parameter1: org.apache.xml.security.stax.ext.stax.XMLSecStartElement;

        r20 := @parameter2: org.apache.xml.security.binding.xmlenc.EncryptedDataType;

        r21 = r0.<org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor: org.apache.xml.security.binding.xmldsig.KeyInfoType keyInfoType>;

        if r21 != null goto label1;

        r21 = virtualinvoke r20.<org.apache.xml.security.binding.xmlenc.EncryptedDataType: org.apache.xml.security.binding.xmldsig.KeyInfoType getKeyInfo()>();

     label1:
        if r21 == null goto label2;

        $r7 = virtualinvoke r21.<org.apache.xml.security.binding.xmldsig.KeyInfoType: java.util.List getContent()>();

        $r8 = <org.apache.xml.security.stax.ext.XMLSecurityConstants: javax.xml.namespace.QName TAG_xenc_EncryptedKey>;

        $r9 = staticinvoke <org.apache.xml.security.stax.ext.XMLSecurityUtils: java.lang.Object getQNameType(java.util.List,javax.xml.namespace.QName)>($r7, $r8);

        r10 = (org.apache.xml.security.binding.xmlenc.EncryptedKeyType) $r9;

        if r10 == null goto label2;

        $r11 = new org.apache.xml.security.stax.impl.processor.input.XMLEncryptedKeyInputHandler;

        specialinvoke $r11.<org.apache.xml.security.stax.impl.processor.input.XMLEncryptedKeyInputHandler: void <init>()>();

        r12 = $r11;

        $r14 = virtualinvoke r0.<org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor: org.apache.xml.security.stax.ext.XMLSecurityProperties getSecurityProperties()>();

        virtualinvoke r12.<org.apache.xml.security.stax.impl.processor.input.XMLEncryptedKeyInputHandler: void handle(org.apache.xml.security.stax.ext.InputProcessorChain,org.apache.xml.security.binding.xmlenc.EncryptedKeyType,org.apache.xml.security.stax.ext.stax.XMLSecEvent,org.apache.xml.security.stax.ext.XMLSecurityProperties)>(r4, r10, r13, $r14);

        $r15 = interfaceinvoke r4.<org.apache.xml.security.stax.ext.InputProcessorChain: org.apache.xml.security.stax.ext.InboundSecurityContext getSecurityContext()>();

        $r16 = virtualinvoke r10.<org.apache.xml.security.binding.xmlenc.EncryptedKeyType: java.lang.String getId()>();

        r17 = interfaceinvoke $r15.<org.apache.xml.security.stax.ext.InboundSecurityContext: org.apache.xml.security.stax.securityToken.SecurityTokenProvider getSecurityTokenProvider(java.lang.String)>($r16);

        $r18 = interfaceinvoke r17.<org.apache.xml.security.stax.securityToken.SecurityTokenProvider: java.lang.Object getSecurityToken()>();

        $r19 = (org.apache.xml.security.stax.securityToken.InboundSecurityToken) $r18;

        return $r19;

     label2:
        $r1 = staticinvoke <org.apache.xml.security.stax.securityToken.SecurityTokenFactory: org.apache.xml.security.stax.securityToken.SecurityTokenFactory getInstance()>();

        $r2 = <org.apache.xml.security.stax.securityToken.SecurityTokenConstants: org.apache.xml.security.stax.securityToken.SecurityTokenConstants$KeyUsage KeyUsage_Decryption>;

        $r3 = virtualinvoke r0.<org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor: org.apache.xml.security.stax.ext.XMLSecurityProperties getSecurityProperties()>();

        $r5 = interfaceinvoke r4.<org.apache.xml.security.stax.ext.InputProcessorChain: org.apache.xml.security.stax.ext.InboundSecurityContext getSecurityContext()>();

        $r6 = virtualinvoke $r1.<org.apache.xml.security.stax.securityToken.SecurityTokenFactory: org.apache.xml.security.stax.securityToken.InboundSecurityToken getSecurityToken(org.apache.xml.security.binding.xmldsig.KeyInfoType,org.apache.xml.security.stax.securityToken.SecurityTokenConstants$KeyUsage,org.apache.xml.security.stax.ext.XMLSecurityProperties,org.apache.xml.security.stax.ext.InboundSecurityContext)>(r21, $r2, $r3, $r5);

        return $r6;
    }

    private org.apache.xml.security.binding.xmlenc.EncryptedDataType parseEncryptedDataStructure(boolean, org.apache.xml.security.stax.ext.stax.XMLSecEvent, org.apache.xml.security.stax.ext.InputProcessorChain) throws javax.xml.stream.XMLStreamException, org.apache.xml.security.exceptions.XMLSecurityException
    {
        java.util.ArrayDeque r1, $r38;
        org.apache.xml.security.stax.ext.stax.XMLSecEvent r2, r35;
        org.apache.xml.security.stax.ext.InputProcessorChain r3;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.Integer $r4, $r32;
        int $i0, $i1, $i2, $i3, i4, i5, $i6, varReplacer4572;
        org.apache.xml.security.stax.ext.stax.XMLSecEndElement $r5, $r9, $r11, $r13, $r24;
        javax.xml.namespace.QName $r6, $r7, $r8, $r10, $r12, $r22, $r23, $r25, $r26, $r28, $r29;
        org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor r14;
        org.apache.xml.security.stax.ext.XMLSecurityProperties $r15;
        java.lang.Object $r17, $r19;
        javax.xml.bind.JAXBElement r18;
        org.apache.xml.security.binding.xmlenc.EncryptedDataType r20;
        org.apache.xml.security.stax.ext.stax.XMLSecStartElement $r21, $r27;
        java.lang.Object[] $r31;
        java.lang.Throwable $r33, r37;
        javax.xml.bind.Unmarshaller r36;
        org.apache.xml.security.exceptions.XMLSecurityException $r39, $r41;
        org.apache.xml.security.stax.impl.XMLSecurityEventReader $r40;
        java.lang.Exception $r42;
        java.lang.String varReplacer4571;

        nop;

        r14 := @this: org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor;

        z0 := @parameter0: boolean;

        r2 := @parameter1: org.apache.xml.security.stax.ext.stax.XMLSecEvent;

        r3 := @parameter2: org.apache.xml.security.stax.ext.InputProcessorChain;

        $r38 = new java.util.ArrayDeque;

        specialinvoke $r38.<java.util.ArrayDeque: void <init>()>();

        r1 = $r38;

        interfaceinvoke r1.<java.util.Deque: void push(java.lang.Object)>(r2);

        i4 = 0;

        i5 = 0;

     label01:
        interfaceinvoke r3.<org.apache.xml.security.stax.ext.InputProcessorChain: void reset()>();

        if z0 == 0 goto label02;

        r35 = interfaceinvoke r3.<org.apache.xml.security.stax.ext.InputProcessorChain: org.apache.xml.security.stax.ext.stax.XMLSecEvent processHeaderEvent()>();

        goto label03;

     label02:
        r35 = interfaceinvoke r3.<org.apache.xml.security.stax.ext.InputProcessorChain: org.apache.xml.security.stax.ext.stax.XMLSecEvent processEvent()>();

     label03:
        interfaceinvoke r1.<java.util.Deque: void push(java.lang.Object)>(r35);

        i4 = i4 + 1;

        $r4 = <org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor: java.lang.Integer maximumAllowedEncryptedDataEvents>;

        $i0 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        if i4 < $i0 goto label04;

        $r39 = new org.apache.xml.security.exceptions.XMLSecurityException;

        $r31 = newarray (java.lang.Object)[1];

        $r32 = <org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor: java.lang.Integer maximumAllowedEncryptedDataEvents>;

        $r31[0] = $r32;

        varReplacer4571 = "stax.xmlStructureSizeExceeded";

        specialinvoke $r39.<org.apache.xml.security.exceptions.XMLSecurityException: void <init>(java.lang.String,java.lang.Object[])>(varReplacer4571, $r31);

        throw $r39;

     label04:
        $i1 = interfaceinvoke r35.<org.apache.xml.security.stax.ext.stax.XMLSecEvent: int getEventType()>();

        if $i1 != 1 goto label05;

        $r27 = interfaceinvoke r35.<org.apache.xml.security.stax.ext.stax.XMLSecEvent: org.apache.xml.security.stax.ext.stax.XMLSecStartElement asStartElement()>();

        $r28 = interfaceinvoke $r27.<org.apache.xml.security.stax.ext.stax.XMLSecStartElement: javax.xml.namespace.QName getName()>();

        $r29 = <org.apache.xml.security.stax.ext.XMLSecurityConstants: javax.xml.namespace.QName TAG_dsig_KeyInfo>;

        $z5 = virtualinvoke $r28.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r29);

        if $z5 == 0 goto label05;

        i5 = i5 + 1;

        goto label06;

     label05:
        $i2 = interfaceinvoke r35.<org.apache.xml.security.stax.ext.stax.XMLSecEvent: int getEventType()>();

        if $i2 != 2 goto label06;

        $r24 = interfaceinvoke r35.<org.apache.xml.security.stax.ext.stax.XMLSecEvent: org.apache.xml.security.stax.ext.stax.XMLSecEndElement asEndElement()>();

        $r25 = interfaceinvoke $r24.<org.apache.xml.security.stax.ext.stax.XMLSecEndElement: javax.xml.namespace.QName getName()>();

        $r26 = <org.apache.xml.security.stax.ext.XMLSecurityConstants: javax.xml.namespace.QName TAG_dsig_KeyInfo>;

        $z4 = virtualinvoke $r25.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r26);

        if $z4 == 0 goto label06;

        i5 = i5 + -1;

     label06:
        $i6 = interfaceinvoke r35.<org.apache.xml.security.stax.ext.stax.XMLSecEvent: int getEventType()>();

        if $i6 != 1 goto label07;

        $r21 = interfaceinvoke r35.<org.apache.xml.security.stax.ext.stax.XMLSecEvent: org.apache.xml.security.stax.ext.stax.XMLSecStartElement asStartElement()>();

        $r22 = interfaceinvoke $r21.<org.apache.xml.security.stax.ext.stax.XMLSecStartElement: javax.xml.namespace.QName getName()>();

        $r23 = <org.apache.xml.security.stax.ext.XMLSecurityConstants: javax.xml.namespace.QName TAG_xenc_CipherValue>;

        $z3 = virtualinvoke $r22.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r23);

        if $z3 != 0 goto label08;

     label07:
        $i3 = interfaceinvoke r35.<org.apache.xml.security.stax.ext.stax.XMLSecEvent: int getEventType()>();

        if $i3 != 2 goto label01;

        $r5 = interfaceinvoke r35.<org.apache.xml.security.stax.ext.stax.XMLSecEvent: org.apache.xml.security.stax.ext.stax.XMLSecEndElement asEndElement()>();

        $r6 = interfaceinvoke $r5.<org.apache.xml.security.stax.ext.stax.XMLSecEndElement: javax.xml.namespace.QName getName()>();

        $r7 = <org.apache.xml.security.stax.ext.XMLSecurityConstants: javax.xml.namespace.QName TAG_xenc_EncryptedData>;

        $z1 = virtualinvoke $r6.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r7);

        if $z1 == 0 goto label01;

     label08:
        if i5 != 0 goto label01;

        $r8 = <org.apache.xml.security.stax.ext.XMLSecurityConstants: javax.xml.namespace.QName TAG_xenc_CipherValue>;

        $r9 = staticinvoke <org.apache.xml.security.stax.ext.stax.XMLSecEventFactory: org.apache.xml.security.stax.ext.stax.XMLSecEndElement createXmlSecEndElement(javax.xml.namespace.QName)>($r8);

        interfaceinvoke r1.<java.util.Deque: void push(java.lang.Object)>($r9);

        $r10 = <org.apache.xml.security.stax.ext.XMLSecurityConstants: javax.xml.namespace.QName TAG_xenc_CipherData>;

        $r11 = staticinvoke <org.apache.xml.security.stax.ext.stax.XMLSecEventFactory: org.apache.xml.security.stax.ext.stax.XMLSecEndElement createXmlSecEndElement(javax.xml.namespace.QName)>($r10);

        interfaceinvoke r1.<java.util.Deque: void push(java.lang.Object)>($r11);

        $r12 = <org.apache.xml.security.stax.ext.XMLSecurityConstants: javax.xml.namespace.QName TAG_xenc_EncryptedData>;

        $r13 = staticinvoke <org.apache.xml.security.stax.ext.stax.XMLSecEventFactory: org.apache.xml.security.stax.ext.stax.XMLSecEndElement createXmlSecEndElement(javax.xml.namespace.QName)>($r12);

        interfaceinvoke r1.<java.util.Deque: void push(java.lang.Object)>($r13);

     label09:
        $r15 = virtualinvoke r14.<org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor: org.apache.xml.security.stax.ext.XMLSecurityProperties getSecurityProperties()>();

        $z2 = virtualinvoke $r15.<org.apache.xml.security.stax.ext.XMLSecurityProperties: boolean isDisableSchemaValidation()>();

        r36 = staticinvoke <org.apache.xml.security.stax.ext.XMLSecurityConstants: javax.xml.bind.Unmarshaller getJaxbUnmarshaller(boolean)>($z2);

        $r40 = new org.apache.xml.security.stax.impl.XMLSecurityEventReader;

        varReplacer4572 = 0;

        specialinvoke $r40.<org.apache.xml.security.stax.impl.XMLSecurityEventReader: void <init>(java.util.Deque,int)>(r1, varReplacer4572);

        $r17 = interfaceinvoke r36.<javax.xml.bind.Unmarshaller: java.lang.Object unmarshal(javax.xml.stream.XMLEventReader)>($r40);

        r18 = (javax.xml.bind.JAXBElement) $r17;

        $r19 = virtualinvoke r18.<javax.xml.bind.JAXBElement: java.lang.Object getValue()>();

        r20 = (org.apache.xml.security.binding.xmlenc.EncryptedDataType) $r19;

     label10:
        goto label12;

     label11:
        $r33 := @caughtexception;

        r37 = $r33;

        $r41 = new org.apache.xml.security.exceptions.XMLSecurityException;

        $r42 = (java.lang.Exception) r37;

        specialinvoke $r41.<org.apache.xml.security.exceptions.XMLSecurityException: void <init>(java.lang.Exception)>($r42);

        throw $r41;

     label12:
        return r20;

        catch javax.xml.bind.JAXBException from label09 to label10 with label11;
    }

    private org.apache.xml.security.stax.ext.stax.XMLSecEvent readAndBufferEncryptedHeader(org.apache.xml.security.stax.ext.InputProcessorChain, boolean, org.apache.xml.security.stax.ext.stax.XMLSecEvent) throws javax.xml.stream.XMLStreamException, org.apache.xml.security.exceptions.XMLSecurityException
    {
        org.apache.xml.security.stax.ext.InputProcessorChain r0, r2;
        org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor r1;
        boolean z0, $z1;
        int $i0;
        org.apache.xml.security.stax.ext.stax.XMLSecStartElement $r3;
        javax.xml.namespace.QName $r4, $r5;
        java.util.ArrayDeque $r6, $r8;
        org.apache.xml.security.stax.ext.stax.XMLSecEvent r7;

        nop;

        r1 := @this: org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor;

        r0 := @parameter0: org.apache.xml.security.stax.ext.InputProcessorChain;

        z0 := @parameter1: boolean;

        r7 := @parameter2: org.apache.xml.security.stax.ext.stax.XMLSecEvent;

        r2 = interfaceinvoke r0.<org.apache.xml.security.stax.ext.InputProcessorChain: org.apache.xml.security.stax.ext.InputProcessorChain createSubChain(org.apache.xml.security.stax.ext.InputProcessor)>(r1);

     label1:
        $r8 = r1.<org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor: java.util.ArrayDeque tmpXmlEventList>;

        virtualinvoke $r8.<java.util.ArrayDeque: void push(java.lang.Object)>(r7);

        interfaceinvoke r2.<org.apache.xml.security.stax.ext.InputProcessorChain: void reset()>();

        if z0 == 0 goto label2;

        r7 = interfaceinvoke r2.<org.apache.xml.security.stax.ext.InputProcessorChain: org.apache.xml.security.stax.ext.stax.XMLSecEvent processHeaderEvent()>();

        goto label3;

     label2:
        r7 = interfaceinvoke r2.<org.apache.xml.security.stax.ext.InputProcessorChain: org.apache.xml.security.stax.ext.stax.XMLSecEvent processEvent()>();

     label3:
        $i0 = interfaceinvoke r7.<org.apache.xml.security.stax.ext.stax.XMLSecEvent: int getEventType()>();

        if $i0 != 1 goto label1;

        $r3 = interfaceinvoke r7.<org.apache.xml.security.stax.ext.stax.XMLSecEvent: org.apache.xml.security.stax.ext.stax.XMLSecStartElement asStartElement()>();

        $r4 = interfaceinvoke $r3.<org.apache.xml.security.stax.ext.stax.XMLSecStartElement: javax.xml.namespace.QName getName()>();

        $r5 = <org.apache.xml.security.stax.ext.XMLSecurityConstants: javax.xml.namespace.QName TAG_xenc_EncryptedData>;

        $z1 = virtualinvoke $r4.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r5);

        if $z1 == 0 goto label1;

        $r6 = r1.<org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor: java.util.ArrayDeque tmpXmlEventList>;

        virtualinvoke $r6.<java.util.ArrayDeque: void push(java.lang.Object)>(r7);

        return r7;
    }

    protected abstract org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor$AbstractDecryptedEventReaderInputProcessor newDecryptedEventReaderInputProcessor(boolean, org.apache.xml.security.stax.ext.stax.XMLSecStartElement, org.apache.xml.security.binding.xmlenc.EncryptedDataType, org.apache.xml.security.stax.securityToken.InboundSecurityToken, org.apache.xml.security.stax.ext.InboundSecurityContext) throws org.apache.xml.security.exceptions.XMLSecurityException;

    protected abstract void handleSecurityToken(org.apache.xml.security.stax.securityToken.InboundSecurityToken, org.apache.xml.security.stax.ext.InboundSecurityContext, org.apache.xml.security.binding.xmlenc.EncryptedDataType) throws org.apache.xml.security.exceptions.XMLSecurityException;

    protected abstract void handleEncryptedContent(org.apache.xml.security.stax.ext.InputProcessorChain, org.apache.xml.security.stax.ext.stax.XMLSecStartElement, org.apache.xml.security.stax.securityToken.InboundSecurityToken, org.apache.xml.security.binding.xmlenc.EncryptedDataType) throws org.apache.xml.security.exceptions.XMLSecurityException;

    protected abstract void handleCipherReference(org.apache.xml.security.stax.ext.InputProcessorChain, org.apache.xml.security.binding.xmlenc.EncryptedDataType, javax.crypto.Cipher, org.apache.xml.security.stax.securityToken.InboundSecurityToken) throws org.apache.xml.security.exceptions.XMLSecurityException;

    protected org.apache.xml.security.binding.xmlenc.ReferenceType matchesReferenceId(org.apache.xml.security.stax.ext.stax.XMLSecStartElement)
    {
        org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor r0;
        org.apache.xml.security.stax.ext.stax.XMLSecStartElement r1;
        javax.xml.stream.events.Attribute r2;
        java.util.Map $r3;
        java.lang.String $r4;
        java.lang.Object $r5;
        org.apache.xml.security.binding.xmlenc.ReferenceType $r6;
        null_type varReplacer4573;

        nop;

        r0 := @this: org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor;

        r1 := @parameter0: org.apache.xml.security.stax.ext.stax.XMLSecStartElement;

        r2 = virtualinvoke r0.<org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor: javax.xml.stream.events.Attribute getReferenceIDAttribute(org.apache.xml.security.stax.ext.stax.XMLSecStartElement)>(r1);

        if r2 == null goto label1;

        $r3 = r0.<org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor: java.util.Map references>;

        $r4 = interfaceinvoke r2.<javax.xml.stream.events.Attribute: java.lang.String getValue()>();

        $r5 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        $r6 = (org.apache.xml.security.binding.xmlenc.ReferenceType) $r5;

        return $r6;

     label1:
        varReplacer4573 = null;

        return varReplacer4573;
    }

    public void doFinal(org.apache.xml.security.stax.ext.InputProcessorChain) throws javax.xml.stream.XMLStreamException, org.apache.xml.security.exceptions.XMLSecurityException
    {
        org.apache.xml.security.stax.ext.InputProcessorChain r0;
        org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor r1;
        java.util.Map $r2, $r3;
        java.util.Set $r4;
        java.util.Iterator r5;
        boolean $z0, $z1;
        java.lang.Object $r6, $r9;
        java.util.Map$Entry r7;
        java.util.List $r8;
        org.apache.xml.security.exceptions.XMLSecurityException $r10;
        java.lang.String varReplacer4574;

        nop;

        r1 := @this: org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor;

        r0 := @parameter0: org.apache.xml.security.stax.ext.InputProcessorChain;

        interfaceinvoke r0.<org.apache.xml.security.stax.ext.InputProcessorChain: void doFinal()>();

        $r2 = r1.<org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor: java.util.Map references>;

        if $r2 == null goto label3;

        $r3 = r1.<org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor: java.util.Map references>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set entrySet()>();

        r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.Map$Entry) $r6;

        $r8 = r1.<org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor: java.util.List processedReferences>;

        $r9 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z1 = interfaceinvoke $r8.<java.util.List: boolean contains(java.lang.Object)>($r9);

        if $z1 != 0 goto label2;

        $r10 = new org.apache.xml.security.exceptions.XMLSecurityException;

        varReplacer4574 = "stax.encryption.unprocessedReferences";

        specialinvoke $r10.<org.apache.xml.security.exceptions.XMLSecurityException: void <init>(java.lang.String)>(varReplacer4574);

        throw $r10;

     label2:
        goto label1;

     label3:
        return;
    }

    static javax.xml.namespace.QName access$000(org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor)
    {
        org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor r0;
        javax.xml.namespace.QName $r1;

        nop;

        r0 := @parameter0: org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor;

        $r1 = r0.<org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor: javax.xml.namespace.QName wrapperElementName>;

        return $r1;
    }

    static org.slf4j.Logger access$100()
    {
        org.slf4j.Logger $r0;

        nop;

        $r0 = <org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor: org.slf4j.Logger log>;

        return $r0;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;
        java.lang.String $r1, $r3, varReplacer4575, varReplacer4576;
        java.lang.Integer $r2, $r4;

        nop;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/xml/security/stax/impl/processor/input/AbstractDecryptInputProcessor;");

        <org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor: org.slf4j.Logger log> = $r0;

        varReplacer4575 = "MaximumAllowedXMLStructureDepth";

        $r1 = staticinvoke <org.apache.xml.security.stax.config.ConfigurationProperties: java.lang.String getProperty(java.lang.String)>(varReplacer4575);

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r1);

        <org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor: java.lang.Integer maximumAllowedXMLStructureDepth> = $r2;

        varReplacer4576 = "MaximumAllowedEncryptedDataEvents";

        $r3 = staticinvoke <org.apache.xml.security.stax.config.ConfigurationProperties: java.lang.String getProperty(java.lang.String)>(varReplacer4576);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r3);

        <org.apache.xml.security.stax.impl.processor.input.AbstractDecryptInputProcessor: java.lang.Integer maximumAllowedEncryptedDataEvents> = $r4;

        return;
    }
}
