public final class org.apache.jcp.xml.dsig.internal.dom.DOMReference extends org.apache.jcp.xml.dsig.internal.dom.DOMStructure implements javax.xml.crypto.dsig.Reference, javax.xml.crypto.dom.DOMURIReference
{
    public static final int MAXIMUM_TRANSFORM_COUNT;
    private static boolean useC14N11;
    private static org.slf4j.Logger log;
    private final javax.xml.crypto.dsig.DigestMethod digestMethod;
    private final java.lang.String id;
    private final java.util.List transforms;
    private java.util.List allTransforms;
    private final javax.xml.crypto.Data appliedTransformData;
    private org.w3c.dom.Attr here;
    private final java.lang.String uri;
    private final java.lang.String type;
    private byte[] digestValue;
    private byte[] calcDigestValue;
    private org.w3c.dom.Element refElem;
    private boolean digested;
    private boolean validated;
    private boolean validationStatus;
    private javax.xml.crypto.Data derefData;
    private java.io.InputStream dis;
    private java.security.MessageDigest md;
    private java.security.Provider provider;

    public void <init>(java.lang.String, java.lang.String, javax.xml.crypto.dsig.DigestMethod, java.util.List, java.lang.String, java.security.Provider)
    {
        org.apache.jcp.xml.dsig.internal.dom.DOMReference r0;
        java.lang.String r1, r2, r5;
        javax.xml.crypto.dsig.DigestMethod r3;
        java.util.List r4;
        java.security.Provider r6;
        null_type varReplacer384, varReplacer385, varReplacer386;

        nop;

        r0 := @this: org.apache.jcp.xml.dsig.internal.dom.DOMReference;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: javax.xml.crypto.dsig.DigestMethod;

        r4 := @parameter3: java.util.List;

        r5 := @parameter4: java.lang.String;

        r6 := @parameter5: java.security.Provider;

        varReplacer384 = null;

        varReplacer385 = null;

        varReplacer386 = null;

        specialinvoke r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: void <init>(java.lang.String,java.lang.String,javax.xml.crypto.dsig.DigestMethod,java.util.List,javax.xml.crypto.Data,java.util.List,java.lang.String,byte[],java.security.Provider)>(r1, r2, r3, varReplacer384, varReplacer384, r4, r5, varReplacer384, r6);

        return;
    }

    public void <init>(java.lang.String, java.lang.String, javax.xml.crypto.dsig.DigestMethod, java.util.List, javax.xml.crypto.Data, java.util.List, java.lang.String, java.security.Provider)
    {
        org.apache.jcp.xml.dsig.internal.dom.DOMReference r0;
        java.lang.String r1, r2, r7;
        javax.xml.crypto.dsig.DigestMethod r3;
        java.util.List r4, r6;
        javax.xml.crypto.Data r5;
        java.security.Provider r8;
        null_type varReplacer387;

        nop;

        r0 := @this: org.apache.jcp.xml.dsig.internal.dom.DOMReference;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: javax.xml.crypto.dsig.DigestMethod;

        r4 := @parameter3: java.util.List;

        r5 := @parameter4: javax.xml.crypto.Data;

        r6 := @parameter5: java.util.List;

        r7 := @parameter6: java.lang.String;

        r8 := @parameter7: java.security.Provider;

        varReplacer387 = null;

        specialinvoke r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: void <init>(java.lang.String,java.lang.String,javax.xml.crypto.dsig.DigestMethod,java.util.List,javax.xml.crypto.Data,java.util.List,java.lang.String,byte[],java.security.Provider)>(r1, r2, r3, r4, r5, r6, r7, varReplacer387, r8);

        return;
    }

    public void <init>(java.lang.String, java.lang.String, javax.xml.crypto.dsig.DigestMethod, java.util.List, javax.xml.crypto.Data, java.util.List, java.lang.String, byte[], java.security.Provider)
    {
        org.apache.jcp.xml.dsig.internal.dom.DOMReference r0;
        javax.xml.crypto.dsig.DigestMethod r1;
        java.util.List r2, $r4, r5, $r7, $r8, $r9, $r19, $r27, $r28;
        java.lang.String r10, r11, r12, $r26, $r35, $r40, varReplacer388, varReplacer389, varReplacer390, varReplacer391, varReplacer392, varReplacer395;
        byte[] r13, $r17;
        javax.xml.crypto.Data r14;
        java.security.Provider r15;
        java.lang.Object $r16, $r20, $r29;
        boolean $z1, $z2, $z3;
        java.lang.StringBuilder $r23, $r24, $r25, $r32, $r33, $r34, $r45, $r48;
        java.lang.Throwable $r38, r41;
        int i0, i1, i2, i3, varReplacer393, varReplacer394, varReplacer396;
        java.lang.NullPointerException $r42;
        java.util.ArrayList $r43, $r44, $r47;
        java.lang.ClassCastException $r46, $r49;
        java.net.URI $r50;
        java.lang.IllegalArgumentException $r51;
        java.net.URISyntaxException $r52;

        nop;

        r0 := @this: org.apache.jcp.xml.dsig.internal.dom.DOMReference;

        r10 := @parameter0: java.lang.String;

        r11 := @parameter1: java.lang.String;

        r1 := @parameter2: javax.xml.crypto.dsig.DigestMethod;

        r2 := @parameter3: java.util.List;

        r14 := @parameter4: javax.xml.crypto.Data;

        r5 := @parameter5: java.util.List;

        r12 := @parameter6: java.lang.String;

        r13 := @parameter7: byte[];

        r15 := @parameter8: java.security.Provider;

        specialinvoke r0.<org.apache.jcp.xml.dsig.internal.dom.DOMStructure: void <init>()>();

        varReplacer393 = 0;

        r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: boolean digested> = varReplacer393;

        varReplacer394 = 0;

        r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: boolean validated> = varReplacer394;

        if r1 != null goto label01;

        $r42 = new java.lang.NullPointerException;

        varReplacer390 = "DigestMethod must be non-null";

        specialinvoke $r42.<java.lang.NullPointerException: void <init>(java.lang.String)>(varReplacer390);

        throw $r42;

     label01:
        if r2 != null goto label02;

        $r43 = new java.util.ArrayList;

        specialinvoke $r43.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: java.util.List allTransforms> = $r43;

        goto label05;

     label02:
        $r44 = new java.util.ArrayList;

        specialinvoke $r44.<java.util.ArrayList: void <init>(java.util.Collection)>(r2);

        r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: java.util.List allTransforms> = $r44;

        i0 = 0;

        $r4 = r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: java.util.List allTransforms>;

        i1 = interfaceinvoke $r4.<java.util.List: int size()>();

     label03:
        if i0 >= i1 goto label05;

        $r28 = r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: java.util.List allTransforms>;

        $r29 = interfaceinvoke $r28.<java.util.List: java.lang.Object get(int)>(i0);

        $z3 = $r29 instanceof javax.xml.crypto.dsig.Transform;

        if $z3 != 0 goto label04;

        $r46 = new java.lang.ClassCastException;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        varReplacer395 = "appliedTransforms[";

        $r32 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer395);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        varReplacer392 = "] is not a valid type";

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer392);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r46.<java.lang.ClassCastException: void <init>(java.lang.String)>($r35);

        throw $r46;

     label04:
        i0 = i0 + 1;

        goto label03;

     label05:
        if r5 != null goto label06;

        $r27 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: java.util.List transforms> = $r27;

        goto label10;

     label06:
        $r47 = new java.util.ArrayList;

        specialinvoke $r47.<java.util.ArrayList: void <init>(java.util.Collection)>(r5);

        r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: java.util.List transforms> = $r47;

        i2 = 0;

        $r7 = r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: java.util.List transforms>;

        i3 = interfaceinvoke $r7.<java.util.List: int size()>();

     label07:
        if i2 >= i3 goto label09;

        $r19 = r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: java.util.List transforms>;

        $r20 = interfaceinvoke $r19.<java.util.List: java.lang.Object get(int)>(i2);

        $z2 = $r20 instanceof javax.xml.crypto.dsig.Transform;

        if $z2 != 0 goto label08;

        $r49 = new java.lang.ClassCastException;

        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        varReplacer388 = "transforms[";

        $r23 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer388);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        varReplacer389 = "] is not a valid type";

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer389);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r49.<java.lang.ClassCastException: void <init>(java.lang.String)>($r26);

        throw $r49;

     label08:
        i2 = i2 + 1;

        goto label07;

     label09:
        $r9 = r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: java.util.List allTransforms>;

        $r8 = r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: java.util.List transforms>;

        interfaceinvoke $r9.<java.util.List: boolean addAll(java.util.Collection)>($r8);

     label10:
        r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: javax.xml.crypto.dsig.DigestMethod digestMethod> = r1;

        r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: java.lang.String uri> = r10;

        if r10 == null goto label14;

        varReplacer391 = "";

        $z1 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer391);

        if $z1 != 0 goto label14;

     label11:
        $r50 = new java.net.URI;

        specialinvoke $r50.<java.net.URI: void <init>(java.lang.String)>(r10);

     label12:
        goto label14;

     label13:
        $r38 := @caughtexception;

        r41 = $r38;

        $r51 = new java.lang.IllegalArgumentException;

        $r52 = (java.net.URISyntaxException) r41;

        $r40 = virtualinvoke $r52.<java.net.URISyntaxException: java.lang.String getMessage()>();

        specialinvoke $r51.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r40);

        throw $r51;

     label14:
        r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: java.lang.String type> = r11;

        r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: java.lang.String id> = r12;

        if r13 == null goto label15;

        $r16 = virtualinvoke r13.<java.lang.Object: java.lang.Object clone()>();

        $r17 = (byte[]) $r16;

        r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: byte[] digestValue> = $r17;

        varReplacer396 = 1;

        r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: boolean digested> = varReplacer396;

     label15:
        r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: javax.xml.crypto.Data appliedTransformData> = r14;

        r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: java.security.Provider provider> = r15;

        return;

        catch java.net.URISyntaxException from label11 to label12 with label13;
    }

    public void <init>(org.w3c.dom.Element, javax.xml.crypto.XMLCryptoContext, java.security.Provider) throws javax.xml.crypto.MarshalException
    {
        org.apache.jcp.xml.dsig.internal.dom.DOMReference r0;
        javax.xml.crypto.XMLCryptoContext r1;
        boolean z0, $z1, $z2, $z3, $z4, $z6, $z7, $z9;
        org.w3c.dom.Element r2, $r9, r48, r49, r50, r55, r57;
        java.util.ArrayList $r3, r4;
        java.lang.String $r5, $r10, $r11, $r12, $r17, $r24, $r25, $r26, $r30, $r33, $r34, $r35, $r42, $r43, r51, r52, r53, $r54, r56, varReplacer397, varReplacer399, varReplacer400, varReplacer401, varReplacer402, varReplacer403, varReplacer404, varReplacer405, varReplacer407, varReplacer408, varReplacer409, varReplacer410, varReplacer412, varReplacer414, varReplacer415, varReplacer416, varReplacer417, varReplacer419;
        javax.xml.crypto.dsig.DigestMethod $r6, $r7, $r21;
        byte[] $r8;
        org.w3c.dom.Attr $r13;
        java.util.List $r14;
        java.security.Provider r15;
        javax.xml.crypto.MarshalException $r16, $r18, $r27, $r37, $r45, $r47;
        java.lang.StringBuilder $r19, $r20, $r22, $r23, $r28, $r29, $r31, $r32, $r38, $r39, $r40, $r41;
        org.apache.jcp.xml.dsig.internal.dom.DOMTransform $r36, $r44;
        int $i0, varReplacer398, varReplacer406, varReplacer418;
        org.apache.xml.security.exceptions.Base64DecodingException $r46, r58;
        null_type varReplacer411, varReplacer413;

        nop;

        r0 := @this: org.apache.jcp.xml.dsig.internal.dom.DOMReference;

        r2 := @parameter0: org.w3c.dom.Element;

        r1 := @parameter1: javax.xml.crypto.XMLCryptoContext;

        r15 := @parameter2: java.security.Provider;

        specialinvoke r0.<org.apache.jcp.xml.dsig.internal.dom.DOMStructure: void <init>()>();

        varReplacer406 = 0;

        r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: boolean digested> = varReplacer406;

        varReplacer418 = 0;

        r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: boolean validated> = varReplacer418;

        z0 = staticinvoke <org.apache.jcp.xml.dsig.internal.dom.Utils: boolean secureValidation(javax.xml.crypto.XMLCryptoContext)>(r1);

        r48 = staticinvoke <org.apache.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Element getFirstChildElement(org.w3c.dom.Node)>(r2);

        $r3 = new java.util.ArrayList;

        varReplacer398 = 5;

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>(varReplacer398);

        r4 = $r3;

        $r5 = interfaceinvoke r48.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        varReplacer407 = "Transforms";

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer407);

        if $z1 == 0 goto label06;

        $r34 = "http://www.w3.org/2000/09/xmldsig#";

        $r35 = interfaceinvoke r48.<org.w3c.dom.Element: java.lang.String getNamespaceURI()>();

        $z4 = virtualinvoke $r34.<java.lang.String: boolean equals(java.lang.Object)>($r35);

        if $z4 == 0 goto label06;

        varReplacer404 = "Transform";

        varReplacer405 = "http://www.w3.org/2000/09/xmldsig#";

        r49 = staticinvoke <org.apache.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Element getFirstChildElement(org.w3c.dom.Node,java.lang.String,java.lang.String)>(r48, varReplacer404, varReplacer405);

        $r36 = new org.apache.jcp.xml.dsig.internal.dom.DOMTransform;

        specialinvoke $r36.<org.apache.jcp.xml.dsig.internal.dom.DOMTransform: void <init>(org.w3c.dom.Element,javax.xml.crypto.XMLCryptoContext,java.security.Provider)>(r49, r1, r15);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r36);

        r50 = staticinvoke <org.apache.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Element getNextSiblingElement(org.w3c.dom.Node)>(r49);

     label01:
        if r50 == null goto label05;

        r51 = interfaceinvoke r50.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        r52 = interfaceinvoke r50.<org.w3c.dom.Element: java.lang.String getNamespaceURI()>();

        varReplacer415 = "Transform";

        $z6 = virtualinvoke r51.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer415);

        if $z6 == 0 goto label02;

        $r43 = "http://www.w3.org/2000/09/xmldsig#";

        $z7 = virtualinvoke $r43.<java.lang.String: boolean equals(java.lang.Object)>(r52);

        if $z7 != 0 goto label03;

     label02:
        $r37 = new javax.xml.crypto.MarshalException;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        varReplacer419 = "Invalid element name: ";

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer419);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r51);

        varReplacer397 = ", expected Transform";

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer397);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r37.<javax.xml.crypto.MarshalException: void <init>(java.lang.String)>($r42);

        throw $r37;

     label03:
        $r44 = new org.apache.jcp.xml.dsig.internal.dom.DOMTransform;

        specialinvoke $r44.<org.apache.jcp.xml.dsig.internal.dom.DOMTransform: void <init>(org.w3c.dom.Element,javax.xml.crypto.XMLCryptoContext,java.security.Provider)>(r50, r1, r15);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r44);

        if z0 == 0 goto label04;

        $i0 = interfaceinvoke r4.<java.util.List: int size()>();

        if $i0 <= 5 goto label04;

        r53 = "A maxiumum of 5 transforms per Reference are allowed with secure validation";

        $r45 = new javax.xml.crypto.MarshalException;

        specialinvoke $r45.<javax.xml.crypto.MarshalException: void <init>(java.lang.String)>(r53);

        throw $r45;

     label04:
        r50 = staticinvoke <org.apache.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Element getNextSiblingElement(org.w3c.dom.Node)>(r50);

        goto label01;

     label05:
        r48 = staticinvoke <org.apache.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Element getNextSiblingElement(org.w3c.dom.Node)>(r48);

     label06:
        $r54 = interfaceinvoke r48.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        varReplacer410 = "DigestMethod";

        $z9 = virtualinvoke $r54.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer410);

        if $z9 != 0 goto label07;

        $r25 = "http://www.w3.org/2000/09/xmldsig#";

        $r26 = interfaceinvoke r48.<org.w3c.dom.Element: java.lang.String getNamespaceURI()>();

        $z3 = virtualinvoke $r25.<java.lang.String: boolean equals(java.lang.Object)>($r26);

        if $z3 == 0 goto label07;

        $r27 = new javax.xml.crypto.MarshalException;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        varReplacer416 = "Invalid element name: ";

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer416);

        $r30 = interfaceinvoke r48.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        varReplacer403 = ", expected DigestMethod";

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer403);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r27.<javax.xml.crypto.MarshalException: void <init>(java.lang.String)>($r33);

        throw $r27;

     label07:
        r55 = r48;

        $r6 = staticinvoke <org.apache.jcp.xml.dsig.internal.dom.DOMDigestMethod: javax.xml.crypto.dsig.DigestMethod unmarshal(org.w3c.dom.Element)>(r55);

        r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: javax.xml.crypto.dsig.DigestMethod digestMethod> = $r6;

        $r7 = r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: javax.xml.crypto.dsig.DigestMethod digestMethod>;

        r56 = interfaceinvoke $r7.<javax.xml.crypto.dsig.DigestMethod: java.lang.String getAlgorithm()>();

        if z0 == 0 goto label08;

        $r17 = "http://www.w3.org/2001/04/xmldsig-more#md5";

        $z2 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(r56);

        if $z2 == 0 goto label08;

        $r18 = new javax.xml.crypto.MarshalException;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        varReplacer414 = "It is forbidden to use algorithm ";

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer414);

        $r21 = r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: javax.xml.crypto.dsig.DigestMethod digestMethod>;

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21);

        varReplacer399 = " when secure validation is enabled";

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer399);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<javax.xml.crypto.MarshalException: void <init>(java.lang.String)>($r24);

        throw $r18;

     label08:
        varReplacer401 = "DigestValue";

        varReplacer402 = "http://www.w3.org/2000/09/xmldsig#";

        r57 = staticinvoke <org.apache.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Element getNextSiblingElement(org.w3c.dom.Node,java.lang.String,java.lang.String)>(r55, varReplacer401, varReplacer402);

     label09:
        $r8 = staticinvoke <org.apache.xml.security.utils.Base64: byte[] decode(org.w3c.dom.Element)>(r57);

        r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: byte[] digestValue> = $r8;

     label10:
        goto label12;

     label11:
        $r46 := @caughtexception;

        r58 = $r46;

        $r47 = new javax.xml.crypto.MarshalException;

        specialinvoke $r47.<javax.xml.crypto.MarshalException: void <init>(java.lang.Throwable)>(r58);

        throw $r47;

     label12:
        $r9 = staticinvoke <org.apache.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Element getNextSiblingElement(org.w3c.dom.Node)>(r57);

        if $r9 == null goto label13;

        $r16 = new javax.xml.crypto.MarshalException;

        varReplacer400 = "Unexpected element after DigestValue element";

        specialinvoke $r16.<javax.xml.crypto.MarshalException: void <init>(java.lang.String)>(varReplacer400);

        throw $r16;

     label13:
        varReplacer409 = "URI";

        $r10 = staticinvoke <org.apache.jcp.xml.dsig.internal.dom.DOMUtils: java.lang.String getAttributeValue(org.w3c.dom.Element,java.lang.String)>(r2, varReplacer409);

        r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: java.lang.String uri> = $r10;

        varReplacer408 = "Id";

        $r11 = staticinvoke <org.apache.jcp.xml.dsig.internal.dom.DOMUtils: java.lang.String getIdAttributeValue(org.w3c.dom.Element,java.lang.String)>(r2, varReplacer408);

        r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: java.lang.String id> = $r11;

        varReplacer417 = "Type";

        $r12 = staticinvoke <org.apache.jcp.xml.dsig.internal.dom.DOMUtils: java.lang.String getAttributeValue(org.w3c.dom.Element,java.lang.String)>(r2, varReplacer417);

        r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: java.lang.String type> = $r12;

        varReplacer411 = null;

        varReplacer412 = "URI";

        $r13 = interfaceinvoke r2.<org.w3c.dom.Element: org.w3c.dom.Attr getAttributeNodeNS(java.lang.String,java.lang.String)>(varReplacer411, varReplacer412);

        r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: org.w3c.dom.Attr here> = $r13;

        r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: org.w3c.dom.Element refElem> = r2;

        r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: java.util.List transforms> = r4;

        $r14 = r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: java.util.List transforms>;

        r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: java.util.List allTransforms> = $r14;

        varReplacer413 = null;

        r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: javax.xml.crypto.Data appliedTransformData> = varReplacer413;

        r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: java.security.Provider provider> = r15;

        return;

        catch org.apache.xml.security.exceptions.Base64DecodingException from label09 to label10 with label11;
    }

    public javax.xml.crypto.dsig.DigestMethod getDigestMethod()
    {
        org.apache.jcp.xml.dsig.internal.dom.DOMReference r0;
        javax.xml.crypto.dsig.DigestMethod $r1;

        nop;

        r0 := @this: org.apache.jcp.xml.dsig.internal.dom.DOMReference;

        $r1 = r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: javax.xml.crypto.dsig.DigestMethod digestMethod>;

        return $r1;
    }

    public java.lang.String getId()
    {
        org.apache.jcp.xml.dsig.internal.dom.DOMReference r0;
        java.lang.String $r1;

        nop;

        r0 := @this: org.apache.jcp.xml.dsig.internal.dom.DOMReference;

        $r1 = r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: java.lang.String id>;

        return $r1;
    }

    public java.lang.String getURI()
    {
        org.apache.jcp.xml.dsig.internal.dom.DOMReference r0;
        java.lang.String $r1;

        nop;

        r0 := @this: org.apache.jcp.xml.dsig.internal.dom.DOMReference;

        $r1 = r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: java.lang.String uri>;

        return $r1;
    }

    public java.lang.String getType()
    {
        org.apache.jcp.xml.dsig.internal.dom.DOMReference r0;
        java.lang.String $r1;

        nop;

        r0 := @this: org.apache.jcp.xml.dsig.internal.dom.DOMReference;

        $r1 = r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: java.lang.String type>;

        return $r1;
    }

    public java.util.List getTransforms()
    {
        org.apache.jcp.xml.dsig.internal.dom.DOMReference r0;
        java.util.List $r1, $r2;

        nop;

        r0 := @this: org.apache.jcp.xml.dsig.internal.dom.DOMReference;

        $r1 = r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: java.util.List allTransforms>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    public byte[] getDigestValue()
    {
        org.apache.jcp.xml.dsig.internal.dom.DOMReference r0;
        byte[] $r1, $r2, $r4;
        java.lang.Object $r3;

        nop;

        r0 := @this: org.apache.jcp.xml.dsig.internal.dom.DOMReference;

        $r1 = r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: byte[] digestValue>;

        if $r1 != null goto label1;

        $r4 = null;

        goto label2;

     label1:
        $r2 = r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: byte[] digestValue>;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();

        $r4 = (byte[]) $r3;

     label2:
        return $r4;
    }

    public byte[] getCalculatedDigestValue()
    {
        org.apache.jcp.xml.dsig.internal.dom.DOMReference r0;
        byte[] $r1, $r2, $r4;
        java.lang.Object $r3;

        nop;

        r0 := @this: org.apache.jcp.xml.dsig.internal.dom.DOMReference;

        $r1 = r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: byte[] calcDigestValue>;

        if $r1 != null goto label1;

        $r4 = null;

        goto label2;

     label1:
        $r2 = r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: byte[] calcDigestValue>;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();

        $r4 = (byte[]) $r3;

     label2:
        return $r4;
    }

    public void marshal(org.apache.jcp.xml.dsig.internal.dom.XmlWriter, java.lang.String, javax.xml.crypto.XMLCryptoContext) throws javax.xml.crypto.MarshalException
    {
        org.slf4j.Logger $r0, $r15, $r19, $r25;
        boolean $z0, $z1, $z2, $z3;
        org.apache.jcp.xml.dsig.internal.dom.XmlWriter r1;
        java.lang.String r2, $r8, $r9, $r11, $r18, varReplacer420, varReplacer421, varReplacer422, varReplacer423, varReplacer424, varReplacer425, varReplacer426, varReplacer427, varReplacer428, varReplacer429, varReplacer430, varReplacer431, varReplacer432, varReplacer433, varReplacer434, varReplacer435, varReplacer436;
        javax.xml.crypto.XMLStructure r3;
        org.apache.jcp.xml.dsig.internal.dom.DOMReference r4;
        javax.xml.crypto.dom.DOMStructure $r5;
        org.w3c.dom.Node $r6;
        org.w3c.dom.Element $r7;
        org.w3c.dom.Attr $r10;
        java.util.List $r13, $r20;
        javax.xml.crypto.dsig.DigestMethod $r14;
        byte[] $r16, $r17;
        java.util.Iterator r21;
        java.lang.Object $r22;
        javax.xml.crypto.dsig.Transform r23;
        javax.xml.crypto.XMLCryptoContext r24;

        nop;

        r4 := @this: org.apache.jcp.xml.dsig.internal.dom.DOMReference;

        r1 := @parameter0: org.apache.jcp.xml.dsig.internal.dom.XmlWriter;

        r2 := @parameter1: java.lang.String;

        r24 := @parameter2: javax.xml.crypto.XMLCryptoContext;

        $r0 = <org.apache.jcp.xml.dsig.internal.dom.DOMReference: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r0.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r25 = <org.apache.jcp.xml.dsig.internal.dom.DOMReference: org.slf4j.Logger log>;

        varReplacer423 = "Marshalling Reference";

        interfaceinvoke $r25.<org.slf4j.Logger: void debug(java.lang.String)>(varReplacer423);

     label1:
        varReplacer435 = "Reference";

        varReplacer436 = "http://www.w3.org/2000/09/xmldsig#";

        interfaceinvoke r1.<org.apache.jcp.xml.dsig.internal.dom.XmlWriter: void writeStartElement(java.lang.String,java.lang.String,java.lang.String)>(r2, varReplacer435, varReplacer436);

        r3 = interfaceinvoke r1.<org.apache.jcp.xml.dsig.internal.dom.XmlWriter: javax.xml.crypto.XMLStructure getCurrentNodeAsStructure()>();

        $r5 = (javax.xml.crypto.dom.DOMStructure) r3;

        $r6 = virtualinvoke $r5.<javax.xml.crypto.dom.DOMStructure: org.w3c.dom.Node getNode()>();

        $r7 = (org.w3c.dom.Element) $r6;

        r4.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: org.w3c.dom.Element refElem> = $r7;

        $r8 = r4.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: java.lang.String id>;

        varReplacer432 = "";

        varReplacer433 = "";

        varReplacer434 = "Id";

        interfaceinvoke r1.<org.apache.jcp.xml.dsig.internal.dom.XmlWriter: void writeIdAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(varReplacer432, varReplacer432, varReplacer434, $r8);

        $r9 = r4.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: java.lang.String uri>;

        varReplacer428 = "";

        varReplacer429 = "";

        varReplacer430 = "URI";

        $r10 = interfaceinvoke r1.<org.apache.jcp.xml.dsig.internal.dom.XmlWriter: org.w3c.dom.Attr writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(varReplacer428, varReplacer428, varReplacer430, $r9);

        r4.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: org.w3c.dom.Attr here> = $r10;

        $r11 = r4.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: java.lang.String type>;

        varReplacer420 = "";

        varReplacer421 = "";

        varReplacer422 = "Type";

        interfaceinvoke r1.<org.apache.jcp.xml.dsig.internal.dom.XmlWriter: org.w3c.dom.Attr writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(varReplacer420, varReplacer420, varReplacer422, $r11);

        $r13 = r4.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: java.util.List allTransforms>;

        $z1 = interfaceinvoke $r13.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label4;

        varReplacer424 = "Transforms";

        varReplacer425 = "http://www.w3.org/2000/09/xmldsig#";

        interfaceinvoke r1.<org.apache.jcp.xml.dsig.internal.dom.XmlWriter: void writeStartElement(java.lang.String,java.lang.String,java.lang.String)>(r2, varReplacer424, varReplacer425);

        $r20 = r4.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: java.util.List allTransforms>;

        r21 = interfaceinvoke $r20.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z3 = interfaceinvoke r21.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label3;

        $r22 = interfaceinvoke r21.<java.util.Iterator: java.lang.Object next()>();

        r23 = (javax.xml.crypto.dsig.Transform) $r22;

        interfaceinvoke r1.<org.apache.jcp.xml.dsig.internal.dom.XmlWriter: void marshalStructure(javax.xml.crypto.XMLStructure,java.lang.String,javax.xml.crypto.XMLCryptoContext)>(r23, r2, r24);

        goto label2;

     label3:
        interfaceinvoke r1.<org.apache.jcp.xml.dsig.internal.dom.XmlWriter: void writeEndElement()>();

     label4:
        $r14 = r4.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: javax.xml.crypto.dsig.DigestMethod digestMethod>;

        staticinvoke <org.apache.jcp.xml.dsig.internal.dom.DOMDigestMethod: void marshal(org.apache.jcp.xml.dsig.internal.dom.XmlWriter,javax.xml.crypto.dsig.DigestMethod,java.lang.String)>(r1, $r14, r2);

        $r15 = <org.apache.jcp.xml.dsig.internal.dom.DOMReference: org.slf4j.Logger log>;

        $z2 = interfaceinvoke $r15.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z2 == 0 goto label5;

        $r19 = <org.apache.jcp.xml.dsig.internal.dom.DOMReference: org.slf4j.Logger log>;

        varReplacer431 = "Adding digestValueElem";

        interfaceinvoke $r19.<org.slf4j.Logger: void debug(java.lang.String)>(varReplacer431);

     label5:
        varReplacer426 = "DigestValue";

        varReplacer427 = "http://www.w3.org/2000/09/xmldsig#";

        interfaceinvoke r1.<org.apache.jcp.xml.dsig.internal.dom.XmlWriter: void writeStartElement(java.lang.String,java.lang.String,java.lang.String)>(r2, varReplacer426, varReplacer427);

        $r16 = r4.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: byte[] digestValue>;

        if $r16 == null goto label6;

        $r17 = r4.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: byte[] digestValue>;

        $r18 = staticinvoke <org.apache.xml.security.utils.Base64: java.lang.String encode(byte[])>($r17);

        interfaceinvoke r1.<org.apache.jcp.xml.dsig.internal.dom.XmlWriter: void writeCharacters(java.lang.String)>($r18);

     label6:
        interfaceinvoke r1.<org.apache.jcp.xml.dsig.internal.dom.XmlWriter: void writeEndElement()>();

        interfaceinvoke r1.<org.apache.jcp.xml.dsig.internal.dom.XmlWriter: void writeEndElement()>();

        return;
    }

    public void digest(javax.xml.crypto.dsig.XMLSignContext) throws javax.xml.crypto.dsig.XMLSignatureException
    {
        org.apache.jcp.xml.dsig.internal.dom.DOMReference r0;
        javax.xml.crypto.Data $r1, r21;
        javax.xml.crypto.dsig.XMLSignContext r2;
        byte[] $r3, $r4;
        java.lang.String r5, $r18, $r20, varReplacer437, varReplacer438, varReplacer440;
        org.slf4j.Logger $r6, $r12, $r13, $r16;
        boolean $z0, $z1;
        org.w3c.dom.Element $r7, r8, $r9;
        org.w3c.dom.Document $r10;
        org.w3c.dom.Text $r11;
        javax.xml.crypto.dsig.XMLSignatureException $r14;
        java.lang.StringBuilder $r15, $r17, $r19;
        int varReplacer439;

        nop;

        r0 := @this: org.apache.jcp.xml.dsig.internal.dom.DOMReference;

        r2 := @parameter0: javax.xml.crypto.dsig.XMLSignContext;

        $r1 = r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: javax.xml.crypto.Data appliedTransformData>;

        if $r1 != null goto label1;

        r21 = specialinvoke r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: javax.xml.crypto.Data dereference(javax.xml.crypto.XMLCryptoContext)>(r2);

        goto label2;

     label1:
        r21 = r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: javax.xml.crypto.Data appliedTransformData>;

     label2:
        $r3 = specialinvoke r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: byte[] transform(javax.xml.crypto.Data,javax.xml.crypto.XMLCryptoContext)>(r21, r2);

        r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: byte[] digestValue> = $r3;

        $r4 = r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: byte[] digestValue>;

        r5 = staticinvoke <org.apache.xml.security.utils.Base64: java.lang.String encode(byte[])>($r4);

        $r6 = <org.apache.jcp.xml.dsig.internal.dom.DOMReference: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r6.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label3;

        $r16 = <org.apache.jcp.xml.dsig.internal.dom.DOMReference: org.slf4j.Logger log>;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        varReplacer438 = "Reference object uri = ";

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer438);

        $r18 = r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: java.lang.String uri>;

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r16.<org.slf4j.Logger: void debug(java.lang.String)>($r20);

     label3:
        $r7 = r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: org.w3c.dom.Element refElem>;

        r8 = staticinvoke <org.apache.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Element getLastChildElement(org.w3c.dom.Node)>($r7);

        if r8 != null goto label4;

        $r14 = new javax.xml.crypto.dsig.XMLSignatureException;

        varReplacer437 = "DigestValue element expected";

        specialinvoke $r14.<javax.xml.crypto.dsig.XMLSignatureException: void <init>(java.lang.String)>(varReplacer437);

        throw $r14;

     label4:
        staticinvoke <org.apache.jcp.xml.dsig.internal.dom.DOMUtils: void removeAllChildren(org.w3c.dom.Node)>(r8);

        $r9 = r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: org.w3c.dom.Element refElem>;

        $r10 = interfaceinvoke $r9.<org.w3c.dom.Element: org.w3c.dom.Document getOwnerDocument()>();

        $r11 = interfaceinvoke $r10.<org.w3c.dom.Document: org.w3c.dom.Text createTextNode(java.lang.String)>(r5);

        interfaceinvoke r8.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r11);

        varReplacer439 = 1;

        r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: boolean digested> = varReplacer439;

        $r12 = <org.apache.jcp.xml.dsig.internal.dom.DOMReference: org.slf4j.Logger log>;

        $z1 = interfaceinvoke $r12.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z1 == 0 goto label5;

        $r13 = <org.apache.jcp.xml.dsig.internal.dom.DOMReference: org.slf4j.Logger log>;

        varReplacer440 = "Reference digesting completed";

        interfaceinvoke $r13.<org.slf4j.Logger: void debug(java.lang.String)>(varReplacer440);

     label5:
        return;
    }

    public boolean validate(javax.xml.crypto.dsig.XMLValidateContext) throws javax.xml.crypto.dsig.XMLSignatureException
    {
        javax.xml.crypto.dsig.XMLValidateContext r0;
        org.apache.jcp.xml.dsig.internal.dom.DOMReference r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        javax.xml.crypto.Data r2;
        byte[] $r3, $r5, $r6, $r10, $r17;
        org.slf4j.Logger $r4, $r8, $r15;
        java.lang.StringBuilder $r7, $r9, $r12, $r14, $r16, $r19;
        java.lang.String $r11, $r13, $r18, $r20, varReplacer441, varReplacer442, varReplacer443;
        java.lang.NullPointerException $r21;
        int varReplacer444;

        nop;

        r1 := @this: org.apache.jcp.xml.dsig.internal.dom.DOMReference;

        r0 := @parameter0: javax.xml.crypto.dsig.XMLValidateContext;

        if r0 != null goto label1;

        $r21 = new java.lang.NullPointerException;

        varReplacer443 = "validateContext cannot be null";

        specialinvoke $r21.<java.lang.NullPointerException: void <init>(java.lang.String)>(varReplacer443);

        throw $r21;

     label1:
        $z0 = r1.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: boolean validated>;

        if $z0 == 0 goto label2;

        $z4 = r1.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: boolean validationStatus>;

        return $z4;

     label2:
        r2 = specialinvoke r1.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: javax.xml.crypto.Data dereference(javax.xml.crypto.XMLCryptoContext)>(r0);

        $r3 = specialinvoke r1.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: byte[] transform(javax.xml.crypto.Data,javax.xml.crypto.XMLCryptoContext)>(r2, r0);

        r1.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: byte[] calcDigestValue> = $r3;

        $r4 = <org.apache.jcp.xml.dsig.internal.dom.DOMReference: org.slf4j.Logger log>;

        $z1 = interfaceinvoke $r4.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z1 == 0 goto label3;

        $r8 = <org.apache.jcp.xml.dsig.internal.dom.DOMReference: org.slf4j.Logger log>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        varReplacer442 = "Expected digest: ";

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer442);

        $r10 = r1.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: byte[] digestValue>;

        $r11 = staticinvoke <org.apache.xml.security.utils.Base64: java.lang.String encode(byte[])>($r10);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r8.<org.slf4j.Logger: void debug(java.lang.String)>($r13);

        $r15 = <org.apache.jcp.xml.dsig.internal.dom.DOMReference: org.slf4j.Logger log>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        varReplacer441 = "Actual digest: ";

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer441);

        $r17 = r1.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: byte[] calcDigestValue>;

        $r18 = staticinvoke <org.apache.xml.security.utils.Base64: java.lang.String encode(byte[])>($r17);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r15.<org.slf4j.Logger: void debug(java.lang.String)>($r20);

     label3:
        $r6 = r1.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: byte[] digestValue>;

        $r5 = r1.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: byte[] calcDigestValue>;

        $z2 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r6, $r5);

        r1.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: boolean validationStatus> = $z2;

        varReplacer444 = 1;

        r1.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: boolean validated> = varReplacer444;

        $z3 = r1.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: boolean validationStatus>;

        return $z3;
    }

    public javax.xml.crypto.Data getDereferencedData()
    {
        org.apache.jcp.xml.dsig.internal.dom.DOMReference r0;
        javax.xml.crypto.Data $r1;

        nop;

        r0 := @this: org.apache.jcp.xml.dsig.internal.dom.DOMReference;

        $r1 = r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: javax.xml.crypto.Data derefData>;

        return $r1;
    }

    public java.io.InputStream getDigestInputStream()
    {
        org.apache.jcp.xml.dsig.internal.dom.DOMReference r0;
        java.io.InputStream $r1;

        nop;

        r0 := @this: org.apache.jcp.xml.dsig.internal.dom.DOMReference;

        $r1 = r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: java.io.InputStream dis>;

        return $r1;
    }

    private javax.xml.crypto.Data dereference(javax.xml.crypto.XMLCryptoContext) throws javax.xml.crypto.dsig.XMLSignatureException
    {
        javax.xml.crypto.XMLCryptoContext r0;
        org.apache.jcp.xml.dsig.internal.dom.DOMReference r1;
        org.slf4j.Logger $r2, $r4, $r11;
        boolean $z0;
        java.lang.StringBuilder $r3, $r5, $r8, $r10, $r12, $r15;
        java.lang.Class $r6, $r13;
        java.lang.String $r7, $r9, $r14, $r16, varReplacer445, varReplacer446;
        java.lang.Throwable $r17, r18;
        javax.xml.crypto.dsig.XMLSignatureException $r19;
        javax.xml.crypto.URIDereferencer r20;
        javax.xml.crypto.Data r21;

        nop;

        r1 := @this: org.apache.jcp.xml.dsig.internal.dom.DOMReference;

        r0 := @parameter0: javax.xml.crypto.XMLCryptoContext;

        r20 = interfaceinvoke r0.<javax.xml.crypto.XMLCryptoContext: javax.xml.crypto.URIDereferencer getURIDereferencer()>();

        if r20 != null goto label1;

        r20 = <org.apache.jcp.xml.dsig.internal.dom.DOMURIDereferencer: javax.xml.crypto.URIDereferencer INSTANCE>;

     label1:
        r21 = interfaceinvoke r20.<javax.xml.crypto.URIDereferencer: javax.xml.crypto.Data dereference(javax.xml.crypto.URIReference,javax.xml.crypto.XMLCryptoContext)>(r1, r0);

        $r2 = <org.apache.jcp.xml.dsig.internal.dom.DOMReference: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r2.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label2;

        $r4 = <org.apache.jcp.xml.dsig.internal.dom.DOMReference: org.slf4j.Logger log>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        varReplacer446 = "URIDereferencer class name: ";

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer446);

        $r6 = virtualinvoke r20.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<org.slf4j.Logger: void debug(java.lang.String)>($r9);

        $r11 = <org.apache.jcp.xml.dsig.internal.dom.DOMReference: org.slf4j.Logger log>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        varReplacer445 = "Data class name: ";

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer445);

        $r13 = virtualinvoke r21.<java.lang.Object: java.lang.Class getClass()>();

        $r14 = virtualinvoke $r13.<java.lang.Class: java.lang.String getName()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r11.<org.slf4j.Logger: void debug(java.lang.String)>($r16);

     label2:
        goto label4;

     label3:
        $r17 := @caughtexception;

        r18 = $r17;

        $r19 = new javax.xml.crypto.dsig.XMLSignatureException;

        specialinvoke $r19.<javax.xml.crypto.dsig.XMLSignatureException: void <init>(java.lang.Throwable)>(r18);

        throw $r19;

     label4:
        return r21;

        catch javax.xml.crypto.URIReferenceException from label1 to label2 with label3;
    }

    private byte[] transform(javax.xml.crypto.Data, javax.xml.crypto.XMLCryptoContext) throws javax.xml.crypto.dsig.XMLSignatureException
    {
        org.apache.jcp.xml.dsig.internal.dom.DOMReference r0;
        java.security.MessageDigest $r1, $r2, $r7, $r35, $r39;
        javax.xml.crypto.XMLCryptoContext r3;
        java.lang.Object $r4, $r30, $r32;
        java.lang.Boolean r5, r72;
        org.apache.jcp.xml.dsig.internal.DigesterOutputStream $r6, $r34, r65;
        javax.xml.crypto.Data r8, $r33, r67, r75;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, z8, $z9, $z10, z11, $z12, $z13;
        java.io.InputStream $r9, $r28, $r78;
        javax.xml.crypto.dsig.XMLSignatureException $r10, $r41, $r43, $r47, $r49, $r51, $r53, $r55, $r57, $r59, $r63;
        java.security.Provider $r11, $r12, $r13, $r14;
        java.lang.String r15, $r38, r71, varReplacer447, varReplacer448, varReplacer449, varReplacer450, varReplacer452, varReplacer454, varReplacer455, varReplacer456, varReplacer457, varReplacer458, varReplacer459;
        org.w3c.dom.Element $r16, $r21, $r23, $r24, $r25, r83;
        org.apache.jcp.xml.dsig.internal.dom.XmlWriterToTree $r17, r19;
        java.util.List $r18, $r20, $r31, $r69, $r82;
        org.w3c.dom.Document $r22;
        org.apache.xml.security.signature.XMLSignatureInput $r26, r73, $r76;
        javax.xml.crypto.OctetStreamData $r27, $r77;
        org.apache.jcp.xml.dsig.internal.dom.ApacheData $r29;
        int $i0, i1, i2, varReplacer451, varReplacer453;
        javax.xml.crypto.dsig.DigestMethod $r36;
        org.apache.jcp.xml.dsig.internal.dom.DOMDigestMethod $r37;
        java.lang.Throwable $r40, $r42, $r44, r45, $r48, $r50, $r52, $r54, $r56, $r58, $r60, $r61, $r62, r64, r85, r86, r87, r88, r89, r90, r92, r93;
        org.apache.xml.security.c14n.CanonicalizationException $r46, r91;
        org.apache.xml.security.utils.UnsyncBufferedOutputStream r66, $r68;
        org.apache.jcp.xml.dsig.internal.dom.DOMTransform r70, $r80, r81;
        javax.xml.crypto.dsig.TransformService r74, r79;
        byte[] r84;

        nop;

        r0 := @this: org.apache.jcp.xml.dsig.internal.dom.DOMReference;

        r8 := @parameter0: javax.xml.crypto.Data;

        r3 := @parameter1: javax.xml.crypto.XMLCryptoContext;

        $r1 = r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: java.security.MessageDigest md>;

        if $r1 != null goto label04;

     label01:
        $r36 = r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: javax.xml.crypto.dsig.DigestMethod digestMethod>;

        $r37 = (org.apache.jcp.xml.dsig.internal.dom.DOMDigestMethod) $r36;

        $r38 = virtualinvoke $r37.<org.apache.jcp.xml.dsig.internal.dom.DOMDigestMethod: java.lang.String getMessageDigestAlgorithm()>();

        $r39 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r38);

        r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: java.security.MessageDigest md> = $r39;

     label02:
        goto label04;

     label03:
        $r62 := @caughtexception;

        r64 = $r62;

        $r63 = new javax.xml.crypto.dsig.XMLSignatureException;

        specialinvoke $r63.<javax.xml.crypto.dsig.XMLSignatureException: void <init>(java.lang.Throwable)>(r64);

        throw $r63;

     label04:
        $r2 = r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: java.security.MessageDigest md>;

        virtualinvoke $r2.<java.security.MessageDigest: void reset()>();

        varReplacer450 = "javax.xml.crypto.dsig.cacheReference";

        $r4 = interfaceinvoke r3.<javax.xml.crypto.XMLCryptoContext: java.lang.Object getProperty(java.lang.String)>(varReplacer450);

        r5 = (java.lang.Boolean) $r4;

        if r5 == null goto label05;

        $z7 = virtualinvoke r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z7 == 0 goto label05;

        $r33 = staticinvoke <org.apache.jcp.xml.dsig.internal.dom.DOMReference: javax.xml.crypto.Data copyDerefData(javax.xml.crypto.Data)>(r8);

        r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: javax.xml.crypto.Data derefData> = $r33;

        $r34 = new org.apache.jcp.xml.dsig.internal.DigesterOutputStream;

        $r35 = r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: java.security.MessageDigest md>;

        varReplacer451 = 1;

        specialinvoke $r34.<org.apache.jcp.xml.dsig.internal.DigesterOutputStream: void <init>(java.security.MessageDigest,boolean)>($r35, varReplacer451);

        r65 = $r34;

        goto label06;

     label05:
        $r6 = new org.apache.jcp.xml.dsig.internal.DigesterOutputStream;

        $r7 = r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: java.security.MessageDigest md>;

        specialinvoke $r6.<org.apache.jcp.xml.dsig.internal.DigesterOutputStream: void <init>(java.security.MessageDigest)>($r7);

        r65 = $r6;

     label06:
        r66 = null;

        r67 = r8;

     label07:
        $r68 = new org.apache.xml.security.utils.UnsyncBufferedOutputStream;

        specialinvoke $r68.<org.apache.xml.security.utils.UnsyncBufferedOutputStream: void <init>(java.io.OutputStream)>(r65);

        r66 = $r68;

        i1 = 0;

        $r69 = r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: java.util.List transforms>;

        i2 = interfaceinvoke $r69.<java.util.List: int size()>();

     label08:
        if i1 >= i2 goto label11;

        $r31 = r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: java.util.List transforms>;

        $r32 = interfaceinvoke $r31.<java.util.List: java.lang.Object get(int)>(i1);

        r70 = (org.apache.jcp.xml.dsig.internal.dom.DOMTransform) $r32;

        $i0 = i2 - 1;

        if i1 >= $i0 goto label09;

        r67 = virtualinvoke r70.<org.apache.jcp.xml.dsig.internal.dom.DOMTransform: javax.xml.crypto.Data transform(javax.xml.crypto.Data,javax.xml.crypto.XMLCryptoContext)>(r67, r3);

        goto label10;

     label09:
        r67 = virtualinvoke r70.<org.apache.jcp.xml.dsig.internal.dom.DOMTransform: javax.xml.crypto.Data transform(javax.xml.crypto.Data,javax.xml.crypto.XMLCryptoContext,java.io.OutputStream)>(r67, r3, r66);

     label10:
        i1 = i1 + 1;

        goto label08;

     label11:
        if r67 == null goto label32;

        z8 = <org.apache.jcp.xml.dsig.internal.dom.DOMReference: boolean useC14N11>;

        r71 = "http://www.w3.org/TR/2001/REC-xml-c14n-20010315";

        $z1 = r3 instanceof javax.xml.crypto.dsig.XMLSignContext;

        if $z1 == 0 goto label16;

        if z8 != 0 goto label15;

        varReplacer447 = "org.apache.xml.security.useC14N11";

        $r30 = interfaceinvoke r3.<javax.xml.crypto.XMLCryptoContext: java.lang.Object getProperty(java.lang.String)>(varReplacer447);

        r72 = (java.lang.Boolean) $r30;

        if r72 == null goto label12;

        $z6 = virtualinvoke r72.<java.lang.Boolean: boolean booleanValue()>();

        if $z6 == 0 goto label12;

        $z9 = 1;

        goto label13;

     label12:
        $z9 = 0;

     label13:
        z8 = $z9;

        if z8 == 0 goto label14;

        r71 = "http://www.w3.org/2006/12/xml-c14n11";

     label14:
        goto label16;

     label15:
        r71 = "http://www.w3.org/2006/12/xml-c14n11";

     label16:
        $z10 = r67 instanceof org.apache.jcp.xml.dsig.internal.dom.ApacheData;

        if $z10 == 0 goto label17;

        $r29 = (org.apache.jcp.xml.dsig.internal.dom.ApacheData) r67;

        r73 = interfaceinvoke $r29.<org.apache.jcp.xml.dsig.internal.dom.ApacheData: org.apache.xml.security.signature.XMLSignatureInput getXMLSignatureInput()>();

        goto label24;

     label17:
        $z2 = r67 instanceof javax.xml.crypto.OctetStreamData;

        if $z2 == 0 goto label18;

        $r26 = new org.apache.xml.security.signature.XMLSignatureInput;

        $r27 = (javax.xml.crypto.OctetStreamData) r67;

        $r28 = virtualinvoke $r27.<javax.xml.crypto.OctetStreamData: java.io.InputStream getOctetStream()>();

        specialinvoke $r26.<org.apache.xml.security.signature.XMLSignatureInput: void <init>(java.io.InputStream)>($r28);

        r73 = $r26;

        goto label24;

     label18:
        $z3 = r67 instanceof javax.xml.crypto.NodeSetData;

        if $z3 == 0 goto label23;

        $r11 = r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: java.security.Provider provider>;

        if $r11 != null goto label19;

        varReplacer448 = "DOM";

        r74 = staticinvoke <javax.xml.crypto.dsig.TransformService: javax.xml.crypto.dsig.TransformService getInstance(java.lang.String,java.lang.String)>(r71, varReplacer448);

        goto label22;

     label19:
        $r12 = r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: java.security.Provider provider>;

        varReplacer454 = "DOM";

        r74 = staticinvoke <javax.xml.crypto.dsig.TransformService: javax.xml.crypto.dsig.TransformService getInstance(java.lang.String,java.lang.String,java.security.Provider)>(r71, varReplacer454, $r12);

     label20:
        goto label22;

     label21:
        $r61 := @caughtexception;

        varReplacer449 = "DOM";

        r74 = staticinvoke <javax.xml.crypto.dsig.TransformService: javax.xml.crypto.dsig.TransformService getInstance(java.lang.String,java.lang.String)>(r71, varReplacer449);

     label22:
        r75 = virtualinvoke r74.<javax.xml.crypto.dsig.TransformService: javax.xml.crypto.Data transform(javax.xml.crypto.Data,javax.xml.crypto.XMLCryptoContext)>(r67, r3);

        $r76 = new org.apache.xml.security.signature.XMLSignatureInput;

        $r77 = (javax.xml.crypto.OctetStreamData) r75;

        $r78 = virtualinvoke $r77.<javax.xml.crypto.OctetStreamData: java.io.InputStream getOctetStream()>();

        specialinvoke $r76.<org.apache.xml.security.signature.XMLSignatureInput: void <init>(java.io.InputStream)>($r78);

        r73 = $r76;

        goto label24;

     label23:
        $r10 = new javax.xml.crypto.dsig.XMLSignatureException;

        varReplacer456 = "unrecognized Data type";

        specialinvoke $r10.<javax.xml.crypto.dsig.XMLSignatureException: void <init>(java.lang.String)>(varReplacer456);

        throw $r10;

     label24:
        z11 = staticinvoke <org.apache.jcp.xml.dsig.internal.dom.Utils: boolean secureValidation(javax.xml.crypto.XMLCryptoContext)>(r3);

        virtualinvoke r73.<org.apache.xml.security.signature.XMLSignatureInput: void setSecureValidation(boolean)>(z11);

        $z12 = r3 instanceof javax.xml.crypto.dsig.XMLSignContext;

        if $z12 == 0 goto label31;

        if z8 == 0 goto label31;

        $z4 = virtualinvoke r73.<org.apache.xml.security.signature.XMLSignatureInput: boolean isOctetStream()>();

        if $z4 != 0 goto label31;

        $z5 = virtualinvoke r73.<org.apache.xml.security.signature.XMLSignatureInput: boolean isOutputStreamSet()>();

        if $z5 != 0 goto label31;

        $r13 = r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: java.security.Provider provider>;

        if $r13 != null goto label25;

        varReplacer455 = "DOM";

        r79 = staticinvoke <javax.xml.crypto.dsig.TransformService: javax.xml.crypto.dsig.TransformService getInstance(java.lang.String,java.lang.String)>(r71, varReplacer455);

        goto label28;

     label25:
        $r14 = r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: java.security.Provider provider>;

        varReplacer452 = "DOM";

        r79 = staticinvoke <javax.xml.crypto.dsig.TransformService: javax.xml.crypto.dsig.TransformService getInstance(java.lang.String,java.lang.String,java.security.Provider)>(r71, varReplacer452, $r14);

     label26:
        goto label28;

     label27:
        $r60 := @caughtexception;

        varReplacer457 = "DOM";

        r79 = staticinvoke <javax.xml.crypto.dsig.TransformService: javax.xml.crypto.dsig.TransformService getInstance(java.lang.String,java.lang.String)>(r71, varReplacer457);

     label28:
        $r80 = new org.apache.jcp.xml.dsig.internal.dom.DOMTransform;

        specialinvoke $r80.<org.apache.jcp.xml.dsig.internal.dom.DOMTransform: void <init>(javax.xml.crypto.dsig.TransformService)>(r79);

        r81 = $r80;

        r15 = staticinvoke <org.apache.jcp.xml.dsig.internal.dom.DOMUtils: java.lang.String getSignaturePrefix(javax.xml.crypto.XMLCryptoContext)>(r3);

        $r82 = r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: java.util.List allTransforms>;

        $z13 = interfaceinvoke $r82.<java.util.List: boolean isEmpty()>();

        if $z13 == 0 goto label29;

        $r21 = r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: org.w3c.dom.Element refElem>;

        $r22 = interfaceinvoke $r21.<org.w3c.dom.Element: org.w3c.dom.Document getOwnerDocument()>();

        varReplacer458 = "Transforms";

        varReplacer459 = "http://www.w3.org/2000/09/xmldsig#";

        r83 = staticinvoke <org.apache.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Element createElement(org.w3c.dom.Document,java.lang.String,java.lang.String,java.lang.String)>($r22, varReplacer458, varReplacer459, r15);

        $r24 = r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: org.w3c.dom.Element refElem>;

        $r23 = r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: org.w3c.dom.Element refElem>;

        $r25 = staticinvoke <org.apache.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Element getFirstChildElement(org.w3c.dom.Node)>($r23);

        interfaceinvoke $r24.<org.w3c.dom.Element: org.w3c.dom.Node insertBefore(org.w3c.dom.Node,org.w3c.dom.Node)>(r83, $r25);

        goto label30;

     label29:
        $r16 = r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: org.w3c.dom.Element refElem>;

        r83 = staticinvoke <org.apache.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Element getFirstChildElement(org.w3c.dom.Node)>($r16);

     label30:
        $r17 = new org.apache.jcp.xml.dsig.internal.dom.XmlWriterToTree;

        $r18 = staticinvoke <org.apache.jcp.xml.dsig.internal.dom.Marshaller: java.util.List getMarshallers()>();

        specialinvoke $r17.<org.apache.jcp.xml.dsig.internal.dom.XmlWriterToTree: void <init>(java.util.List,org.w3c.dom.Node)>($r18, r83);

        r19 = $r17;

        virtualinvoke r81.<org.apache.jcp.xml.dsig.internal.dom.DOMTransform: void marshal(org.apache.jcp.xml.dsig.internal.dom.XmlWriter,java.lang.String,javax.xml.crypto.XMLCryptoContext)>(r19, r15, r3);

        $r20 = r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: java.util.List allTransforms>;

        interfaceinvoke $r20.<java.util.List: boolean add(java.lang.Object)>(r81);

        varReplacer453 = 1;

        virtualinvoke r73.<org.apache.xml.security.signature.XMLSignatureInput: void updateOutputStream(java.io.OutputStream,boolean)>(r66, varReplacer453);

        goto label32;

     label31:
        virtualinvoke r73.<org.apache.xml.security.signature.XMLSignatureInput: void updateOutputStream(java.io.OutputStream)>(r66);

     label32:
        virtualinvoke r66.<java.io.OutputStream: void flush()>();

        if r5 == null goto label33;

        $z0 = virtualinvoke r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label33;

        $r9 = virtualinvoke r65.<org.apache.jcp.xml.dsig.internal.DigesterOutputStream: java.io.InputStream getInputStream()>();

        r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: java.io.InputStream dis> = $r9;

     label33:
        r84 = virtualinvoke r65.<org.apache.jcp.xml.dsig.internal.DigesterOutputStream: byte[] getDigestValue()>();

     label34:
        if r66 == null goto label38;

     label35:
        virtualinvoke r66.<java.io.OutputStream: void close()>();

     label36:
        goto label38;

     label37:
        $r58 := @caughtexception;

        r85 = $r58;

        $r59 = new javax.xml.crypto.dsig.XMLSignatureException;

        specialinvoke $r59.<javax.xml.crypto.dsig.XMLSignatureException: void <init>(java.lang.Throwable)>(r85);

        throw $r59;

     label38:
        if r65 == null goto label42;

     label39:
        virtualinvoke r65.<org.apache.jcp.xml.dsig.internal.DigesterOutputStream: void close()>();

     label40:
        goto label42;

     label41:
        $r56 := @caughtexception;

        r86 = $r56;

        $r57 = new javax.xml.crypto.dsig.XMLSignatureException;

        specialinvoke $r57.<javax.xml.crypto.dsig.XMLSignatureException: void <init>(java.lang.Throwable)>(r86);

        throw $r57;

     label42:
        return r84;

     label43:
        $r54 := @caughtexception;

        r87 = $r54;

        $r55 = new javax.xml.crypto.dsig.XMLSignatureException;

        specialinvoke $r55.<javax.xml.crypto.dsig.XMLSignatureException: void <init>(java.lang.Throwable)>(r87);

        throw $r55;

     label44:
        $r52 := @caughtexception;

        r88 = $r52;

        $r53 = new javax.xml.crypto.dsig.XMLSignatureException;

        specialinvoke $r53.<javax.xml.crypto.dsig.XMLSignatureException: void <init>(java.lang.Throwable)>(r88);

        throw $r53;

     label45:
        $r50 := @caughtexception;

        r89 = $r50;

        $r51 = new javax.xml.crypto.dsig.XMLSignatureException;

        specialinvoke $r51.<javax.xml.crypto.dsig.XMLSignatureException: void <init>(java.lang.Throwable)>(r89);

        throw $r51;

     label46:
        $r48 := @caughtexception;

        r90 = $r48;

        $r49 = new javax.xml.crypto.dsig.XMLSignatureException;

        specialinvoke $r49.<javax.xml.crypto.dsig.XMLSignatureException: void <init>(java.lang.Throwable)>(r90);

        throw $r49;

     label47:
        $r46 := @caughtexception;

        r91 = $r46;

        $r47 = new javax.xml.crypto.dsig.XMLSignatureException;

        specialinvoke $r47.<javax.xml.crypto.dsig.XMLSignatureException: void <init>(java.lang.Throwable)>(r91);

        throw $r47;

     label48:
        $r44 := @caughtexception;

        r45 = $r44;

     label49:
        if r66 == null goto label53;

     label50:
        virtualinvoke r66.<java.io.OutputStream: void close()>();

     label51:
        goto label53;

     label52:
        $r42 := @caughtexception;

        r92 = $r42;

        $r43 = new javax.xml.crypto.dsig.XMLSignatureException;

        specialinvoke $r43.<javax.xml.crypto.dsig.XMLSignatureException: void <init>(java.lang.Throwable)>(r92);

        throw $r43;

     label53:
        if r65 == null goto label57;

     label54:
        virtualinvoke r65.<org.apache.jcp.xml.dsig.internal.DigesterOutputStream: void close()>();

     label55:
        goto label57;

     label56:
        $r40 := @caughtexception;

        r93 = $r40;

        $r41 = new javax.xml.crypto.dsig.XMLSignatureException;

        specialinvoke $r41.<javax.xml.crypto.dsig.XMLSignatureException: void <init>(java.lang.Throwable)>(r93);

        throw $r41;

     label57:
        throw r45;

        catch java.security.NoSuchAlgorithmException from label01 to label02 with label03;
        catch java.security.NoSuchAlgorithmException from label19 to label20 with label21;
        catch java.security.NoSuchAlgorithmException from label25 to label26 with label27;
        catch java.io.IOException from label35 to label36 with label37;
        catch java.io.IOException from label39 to label40 with label41;
        catch java.security.NoSuchAlgorithmException from label07 to label34 with label43;
        catch javax.xml.crypto.dsig.TransformException from label07 to label34 with label44;
        catch javax.xml.crypto.MarshalException from label07 to label34 with label45;
        catch java.io.IOException from label07 to label34 with label46;
        catch org.apache.xml.security.c14n.CanonicalizationException from label07 to label34 with label47;
        catch java.lang.Throwable from label07 to label34 with label48;
        catch java.io.IOException from label50 to label51 with label52;
        catch java.io.IOException from label54 to label55 with label56;
        catch java.lang.Throwable from label43 to label49 with label48;
    }

    public org.w3c.dom.Node getHere()
    {
        org.apache.jcp.xml.dsig.internal.dom.DOMReference r0;
        org.w3c.dom.Attr $r1;

        nop;

        r0 := @this: org.apache.jcp.xml.dsig.internal.dom.DOMReference;

        $r1 = r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: org.w3c.dom.Attr here>;

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.jcp.xml.dsig.internal.dom.DOMReference r0;
        java.lang.Object r1;
        boolean $z0, z1, z2, z3, z4, $z5, $z6, $z7, $z8, $z9, $z10;
        javax.xml.crypto.dsig.Reference r2;
        java.lang.String $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r12, $r13, $r14, $r15, $r16;
        java.util.List $r10, $r11;
        byte[] $r17, $r18;
        javax.xml.crypto.dsig.DigestMethod $r19, $r20;
        int varReplacer460, varReplacer461;

        nop;

        r0 := @this: org.apache.jcp.xml.dsig.internal.dom.DOMReference;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label01;

        varReplacer460 = 1;

        return varReplacer460;

     label01:
        $z0 = r1 instanceof javax.xml.crypto.dsig.Reference;

        if $z0 != 0 goto label02;

        varReplacer461 = 0;

        return varReplacer461;

     label02:
        r2 = (javax.xml.crypto.dsig.Reference) r1;

        $r3 = r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: java.lang.String id>;

        if $r3 != null goto label04;

        $r14 = interfaceinvoke r2.<javax.xml.crypto.dsig.Reference: java.lang.String getId()>();

        if $r14 != null goto label03;

        $z6 = 1;

        goto label05;

     label03:
        $z6 = 0;

        goto label05;

     label04:
        $r4 = r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: java.lang.String id>;

        $r5 = interfaceinvoke r2.<javax.xml.crypto.dsig.Reference: java.lang.String getId()>();

        $z6 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

     label05:
        z1 = $z6;

        $r15 = r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: java.lang.String uri>;

        if $r15 != null goto label07;

        $r13 = interfaceinvoke r2.<javax.xml.crypto.dsig.Reference: java.lang.String getURI()>();

        if $r13 != null goto label06;

        $z7 = 1;

        goto label08;

     label06:
        $z7 = 0;

        goto label08;

     label07:
        $r6 = r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: java.lang.String uri>;

        $r7 = interfaceinvoke r2.<javax.xml.crypto.dsig.Reference: java.lang.String getURI()>();

        $z7 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

     label08:
        z2 = $z7;

        $r16 = r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: java.lang.String type>;

        if $r16 != null goto label10;

        $r12 = interfaceinvoke r2.<javax.xml.crypto.dsig.Reference: java.lang.String getType()>();

        if $r12 != null goto label09;

        $z8 = 1;

        goto label11;

     label09:
        $z8 = 0;

        goto label11;

     label10:
        $r8 = r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: java.lang.String type>;

        $r9 = interfaceinvoke r2.<javax.xml.crypto.dsig.Reference: java.lang.String getType()>();

        $z8 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);

     label11:
        z3 = $z8;

        $r17 = r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: byte[] digestValue>;

        $r18 = interfaceinvoke r2.<javax.xml.crypto.dsig.Reference: byte[] getDigestValue()>();

        z4 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r17, $r18);

        $r19 = r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: javax.xml.crypto.dsig.DigestMethod digestMethod>;

        $r20 = interfaceinvoke r2.<javax.xml.crypto.dsig.Reference: javax.xml.crypto.dsig.DigestMethod getDigestMethod()>();

        $z9 = virtualinvoke $r19.<java.lang.Object: boolean equals(java.lang.Object)>($r20);

        if $z9 == 0 goto label12;

        if z1 == 0 goto label12;

        if z2 == 0 goto label12;

        if z3 == 0 goto label12;

        $r10 = r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: java.util.List allTransforms>;

        $r11 = interfaceinvoke r2.<javax.xml.crypto.dsig.Reference: java.util.List getTransforms()>();

        $z5 = interfaceinvoke $r10.<java.util.List: boolean equals(java.lang.Object)>($r11);

        if $z5 == 0 goto label12;

        if z4 == 0 goto label12;

        $z10 = 1;

        goto label13;

     label12:
        $z10 = 0;

     label13:
        return $z10;
    }

    public int hashCode()
    {
        org.apache.jcp.xml.dsig.internal.dom.DOMReference r0;
        java.lang.String $r1, $r2, $r3, $r8, $r9, $r10;
        byte[] $r4, $r7;
        javax.xml.crypto.dsig.DigestMethod $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13, i14;
        java.util.List $r6;

        nop;

        r0 := @this: org.apache.jcp.xml.dsig.internal.dom.DOMReference;

        i12 = 17;

        $r1 = r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: java.lang.String id>;

        if $r1 == null goto label1;

        $i10 = 31 * i12;

        $r10 = r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: java.lang.String id>;

        $i11 = virtualinvoke $r10.<java.lang.String: int hashCode()>();

        i12 = $i10 + $i11;

     label1:
        $r2 = r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: java.lang.String uri>;

        if $r2 == null goto label2;

        $i8 = 31 * i12;

        $r9 = r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: java.lang.String uri>;

        $i9 = virtualinvoke $r9.<java.lang.String: int hashCode()>();

        i12 = $i8 + $i9;

     label2:
        $r3 = r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: java.lang.String type>;

        if $r3 == null goto label3;

        $i6 = 31 * i12;

        $r8 = r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: java.lang.String type>;

        $i7 = virtualinvoke $r8.<java.lang.String: int hashCode()>();

        i12 = $i6 + $i7;

     label3:
        $r4 = r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: byte[] digestValue>;

        if $r4 == null goto label4;

        $i4 = 31 * i12;

        $r7 = r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: byte[] digestValue>;

        $i5 = staticinvoke <java.util.Arrays: int hashCode(byte[])>($r7);

        i12 = $i4 + $i5;

     label4:
        $i0 = 31 * i12;

        $r5 = r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: javax.xml.crypto.dsig.DigestMethod digestMethod>;

        $i1 = virtualinvoke $r5.<java.lang.Object: int hashCode()>();

        i13 = $i0 + $i1;

        $i2 = 31 * i13;

        $r6 = r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: java.util.List allTransforms>;

        $i3 = interfaceinvoke $r6.<java.util.List: int hashCode()>();

        i14 = $i2 + $i3;

        return i14;
    }

    boolean isDigested()
    {
        org.apache.jcp.xml.dsig.internal.dom.DOMReference r0;
        boolean $z0;

        nop;

        r0 := @this: org.apache.jcp.xml.dsig.internal.dom.DOMReference;

        $z0 = r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference: boolean digested>;

        return $z0;
    }

    private static javax.xml.crypto.Data copyDerefData(javax.xml.crypto.Data)
    {
        javax.xml.crypto.Data r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.jcp.xml.dsig.internal.dom.ApacheData r1;
        org.apache.xml.security.signature.XMLSignatureInput r2;
        javax.xml.crypto.OctetStreamData $r3;
        java.io.InputStream $r4;
        java.lang.String $r5, $r6, $r15, $r21, varReplacer462, varReplacer464;
        org.apache.jcp.xml.dsig.internal.dom.DOMSubTreeData $r7;
        org.w3c.dom.Node $r8;
        org.apache.jcp.xml.dsig.internal.dom.DOMReference$2 $r9;
        java.lang.Throwable $r10, r24;
        java.lang.StringBuilder $r11, $r13, $r14, $r17, $r19, $r20;
        org.slf4j.Logger $r12, $r18;
        java.lang.Exception $r16, r23;
        java.util.Set r22;
        null_type varReplacer463, varReplacer465;

        nop;

        r0 := @parameter0: javax.xml.crypto.Data;

        $z0 = r0 instanceof org.apache.jcp.xml.dsig.internal.dom.ApacheData;

        if $z0 == 0 goto label9;

        r1 = (org.apache.jcp.xml.dsig.internal.dom.ApacheData) r0;

        r2 = interfaceinvoke r1.<org.apache.jcp.xml.dsig.internal.dom.ApacheData: org.apache.xml.security.signature.XMLSignatureInput getXMLSignatureInput()>();

        $z1 = virtualinvoke r2.<org.apache.xml.security.signature.XMLSignatureInput: boolean isNodeSet()>();

        if $z1 == 0 goto label4;

     label1:
        r22 = virtualinvoke r2.<org.apache.xml.security.signature.XMLSignatureInput: java.util.Set getNodeSet()>();

        $r9 = new org.apache.jcp.xml.dsig.internal.dom.DOMReference$2;

        specialinvoke $r9.<org.apache.jcp.xml.dsig.internal.dom.DOMReference$2: void <init>(java.util.Set)>(r22);

     label2:
        return $r9;

     label3:
        $r16 := @caughtexception;

        r23 = $r16;

        $r18 = <org.apache.jcp.xml.dsig.internal.dom.DOMReference: org.slf4j.Logger log>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        varReplacer462 = "cannot cache dereferenced data: ";

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer462);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r23);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r18.<org.slf4j.Logger: void warn(java.lang.String)>($r21);

        varReplacer463 = null;

        return varReplacer463;

     label4:
        $z2 = virtualinvoke r2.<org.apache.xml.security.signature.XMLSignatureInput: boolean isElement()>();

        if $z2 == 0 goto label5;

        $r7 = new org.apache.jcp.xml.dsig.internal.dom.DOMSubTreeData;

        $r8 = virtualinvoke r2.<org.apache.xml.security.signature.XMLSignatureInput: org.w3c.dom.Node getSubNode()>();

        $z5 = virtualinvoke r2.<org.apache.xml.security.signature.XMLSignatureInput: boolean isExcludeComments()>();

        specialinvoke $r7.<org.apache.jcp.xml.dsig.internal.dom.DOMSubTreeData: void <init>(org.w3c.dom.Node,boolean)>($r8, $z5);

        return $r7;

     label5:
        $z3 = virtualinvoke r2.<org.apache.xml.security.signature.XMLSignatureInput: boolean isOctetStream()>();

        if $z3 != 0 goto label6;

        $z4 = virtualinvoke r2.<org.apache.xml.security.signature.XMLSignatureInput: boolean isByteArray()>();

        if $z4 == 0 goto label9;

     label6:
        $r3 = new javax.xml.crypto.OctetStreamData;

        $r4 = virtualinvoke r2.<org.apache.xml.security.signature.XMLSignatureInput: java.io.InputStream getOctetStream()>();

        $r5 = virtualinvoke r2.<org.apache.xml.security.signature.XMLSignatureInput: java.lang.String getSourceURI()>();

        $r6 = virtualinvoke r2.<org.apache.xml.security.signature.XMLSignatureInput: java.lang.String getMIMEType()>();

        specialinvoke $r3.<javax.xml.crypto.OctetStreamData: void <init>(java.io.InputStream,java.lang.String,java.lang.String)>($r4, $r5, $r6);

     label7:
        return $r3;

     label8:
        $r10 := @caughtexception;

        r24 = $r10;

        $r12 = <org.apache.jcp.xml.dsig.internal.dom.DOMReference: org.slf4j.Logger log>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        varReplacer464 = "cannot cache dereferenced data: ";

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer464);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r24);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r12.<org.slf4j.Logger: void warn(java.lang.String)>($r15);

        varReplacer465 = null;

        return varReplacer465;

     label9:
        return r0;

        catch java.lang.Exception from label1 to label2 with label3;
        catch java.io.IOException from label6 to label7 with label8;
    }

    static void <clinit>()
    {
        org.apache.jcp.xml.dsig.internal.dom.DOMReference$1 $r0;
        java.lang.Object $r1;
        java.lang.Boolean $r2;
        boolean $z0;
        org.slf4j.Logger $r3;

        nop;

        $r0 = new org.apache.jcp.xml.dsig.internal.dom.DOMReference$1;

        specialinvoke $r0.<org.apache.jcp.xml.dsig.internal.dom.DOMReference$1: void <init>()>();

        $r1 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r0);

        $r2 = (java.lang.Boolean) $r1;

        $z0 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>();

        <org.apache.jcp.xml.dsig.internal.dom.DOMReference: boolean useC14N11> = $z0;

        $r3 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/jcp/xml/dsig/internal/dom/DOMReference;");

        <org.apache.jcp.xml.dsig.internal.dom.DOMReference: org.slf4j.Logger log> = $r3;

        return;
    }
}
