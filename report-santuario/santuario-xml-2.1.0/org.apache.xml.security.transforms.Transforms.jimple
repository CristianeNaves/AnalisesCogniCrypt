public class org.apache.xml.security.transforms.Transforms extends org.apache.xml.security.utils.SignatureElementProxy
{
    public static final java.lang.String TRANSFORM_C14N_OMIT_COMMENTS;
    public static final java.lang.String TRANSFORM_C14N_WITH_COMMENTS;
    public static final java.lang.String TRANSFORM_C14N11_OMIT_COMMENTS;
    public static final java.lang.String TRANSFORM_C14N11_WITH_COMMENTS;
    public static final java.lang.String TRANSFORM_C14N_EXCL_OMIT_COMMENTS;
    public static final java.lang.String TRANSFORM_C14N_EXCL_WITH_COMMENTS;
    public static final java.lang.String TRANSFORM_XSLT;
    public static final java.lang.String TRANSFORM_BASE64_DECODE;
    public static final java.lang.String TRANSFORM_XPATH;
    public static final java.lang.String TRANSFORM_ENVELOPED_SIGNATURE;
    public static final java.lang.String TRANSFORM_XPOINTER;
    public static final java.lang.String TRANSFORM_XPATH2FILTER;
    private static final org.slf4j.Logger LOG;
    private org.w3c.dom.Element[] transforms;
    private boolean secureValidation;

    protected void <init>()
    {
        org.apache.xml.security.transforms.Transforms r0;

        nop;

        r0 := @this: org.apache.xml.security.transforms.Transforms;

        specialinvoke r0.<org.apache.xml.security.utils.SignatureElementProxy: void <init>()>();

        return;
    }

    public void <init>(org.w3c.dom.Document)
    {
        org.apache.xml.security.transforms.Transforms r0;
        org.w3c.dom.Document r1;

        nop;

        r0 := @this: org.apache.xml.security.transforms.Transforms;

        r1 := @parameter0: org.w3c.dom.Document;

        specialinvoke r0.<org.apache.xml.security.utils.SignatureElementProxy: void <init>(org.w3c.dom.Document)>(r1);

        virtualinvoke r0.<org.apache.xml.security.transforms.Transforms: void addReturnToSelf()>();

        return;
    }

    public void <init>(org.w3c.dom.Element, java.lang.String) throws org.w3c.dom.DOMException, org.apache.xml.security.signature.XMLSignatureException, org.apache.xml.security.transforms.InvalidTransformException, org.apache.xml.security.transforms.TransformationException, org.apache.xml.security.exceptions.XMLSecurityException
    {
        org.apache.xml.security.transforms.Transforms r0;
        org.w3c.dom.Element r1;
        java.lang.String r2, varReplacer4945;
        int i0;
        java.lang.Object[] $r3, r4;
        org.apache.xml.security.transforms.TransformationException $r5;

        nop;

        r0 := @this: org.apache.xml.security.transforms.Transforms;

        r1 := @parameter0: org.w3c.dom.Element;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.apache.xml.security.utils.SignatureElementProxy: void <init>(org.w3c.dom.Element,java.lang.String)>(r1, r2);

        i0 = virtualinvoke r0.<org.apache.xml.security.transforms.Transforms: int getLength()>();

        if i0 != 0 goto label1;

        $r3 = newarray (java.lang.Object)[2];

        $r3[0] = "Transform";

        $r3[1] = "Transforms";

        r4 = $r3;

        $r5 = new org.apache.xml.security.transforms.TransformationException;

        varReplacer4945 = "xml.WrongContent";

        specialinvoke $r5.<org.apache.xml.security.transforms.TransformationException: void <init>(java.lang.String,java.lang.Object[])>(varReplacer4945, r4);

        throw $r5;

     label1:
        return;
    }

    public void setSecureValidation(boolean)
    {
        org.apache.xml.security.transforms.Transforms r0;
        boolean z0;

        nop;

        r0 := @this: org.apache.xml.security.transforms.Transforms;

        z0 := @parameter0: boolean;

        r0.<org.apache.xml.security.transforms.Transforms: boolean secureValidation> = z0;

        return;
    }

    public void addTransform(java.lang.String) throws org.apache.xml.security.transforms.TransformationException
    {
        java.lang.String r0, varReplacer4946;
        org.slf4j.Logger $r1;
        org.apache.xml.security.transforms.Transform $r2, r7;
        org.apache.xml.security.transforms.Transforms r3;
        org.w3c.dom.Document $r4;
        org.apache.xml.security.transforms.InvalidTransformException $r5, r8;
        org.apache.xml.security.transforms.TransformationException $r6;

        nop;

        r3 := @this: org.apache.xml.security.transforms.Transforms;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = <org.apache.xml.security.transforms.Transforms: org.slf4j.Logger LOG>;

        varReplacer4946 = "Transforms.addTransform({})";

        interfaceinvoke $r1.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>(varReplacer4946, r0);

        $r2 = new org.apache.xml.security.transforms.Transform;

        $r4 = virtualinvoke r3.<org.apache.xml.security.transforms.Transforms: org.w3c.dom.Document getDocument()>();

        specialinvoke $r2.<org.apache.xml.security.transforms.Transform: void <init>(org.w3c.dom.Document,java.lang.String)>($r4, r0);

        r7 = $r2;

        specialinvoke r3.<org.apache.xml.security.transforms.Transforms: void addTransform(org.apache.xml.security.transforms.Transform)>(r7);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r8 = $r5;

        $r6 = new org.apache.xml.security.transforms.TransformationException;

        specialinvoke $r6.<org.apache.xml.security.transforms.TransformationException: void <init>(java.lang.Exception)>(r8);

        throw $r6;

     label4:
        return;

        catch org.apache.xml.security.transforms.InvalidTransformException from label1 to label2 with label3;
    }

    public void addTransform(java.lang.String, org.w3c.dom.Element) throws org.apache.xml.security.transforms.TransformationException
    {
        java.lang.String r0, varReplacer4947;
        org.slf4j.Logger $r1;
        org.apache.xml.security.transforms.Transform $r2, r8;
        org.apache.xml.security.transforms.Transforms r3;
        org.w3c.dom.Document $r4;
        org.w3c.dom.Element r5;
        org.apache.xml.security.transforms.InvalidTransformException $r6, r9;
        org.apache.xml.security.transforms.TransformationException $r7;

        nop;

        r3 := @this: org.apache.xml.security.transforms.Transforms;

        r0 := @parameter0: java.lang.String;

        r5 := @parameter1: org.w3c.dom.Element;

     label1:
        $r1 = <org.apache.xml.security.transforms.Transforms: org.slf4j.Logger LOG>;

        varReplacer4947 = "Transforms.addTransform({})";

        interfaceinvoke $r1.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>(varReplacer4947, r0);

        $r2 = new org.apache.xml.security.transforms.Transform;

        $r4 = virtualinvoke r3.<org.apache.xml.security.transforms.Transforms: org.w3c.dom.Document getDocument()>();

        specialinvoke $r2.<org.apache.xml.security.transforms.Transform: void <init>(org.w3c.dom.Document,java.lang.String,org.w3c.dom.Element)>($r4, r0, r5);

        r8 = $r2;

        specialinvoke r3.<org.apache.xml.security.transforms.Transforms: void addTransform(org.apache.xml.security.transforms.Transform)>(r8);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        r9 = $r6;

        $r7 = new org.apache.xml.security.transforms.TransformationException;

        specialinvoke $r7.<org.apache.xml.security.transforms.TransformationException: void <init>(java.lang.Exception)>(r9);

        throw $r7;

     label4:
        return;

        catch org.apache.xml.security.transforms.InvalidTransformException from label1 to label2 with label3;
    }

    public void addTransform(java.lang.String, org.w3c.dom.NodeList) throws org.apache.xml.security.transforms.TransformationException
    {
        org.apache.xml.security.transforms.Transform $r0, r7;
        org.apache.xml.security.transforms.Transforms r1;
        org.w3c.dom.Document $r2;
        java.lang.String r3;
        org.w3c.dom.NodeList r4;
        org.apache.xml.security.transforms.InvalidTransformException $r5, r8;
        org.apache.xml.security.transforms.TransformationException $r6;

        nop;

        r1 := @this: org.apache.xml.security.transforms.Transforms;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: org.w3c.dom.NodeList;

     label1:
        $r0 = new org.apache.xml.security.transforms.Transform;

        $r2 = virtualinvoke r1.<org.apache.xml.security.transforms.Transforms: org.w3c.dom.Document getDocument()>();

        specialinvoke $r0.<org.apache.xml.security.transforms.Transform: void <init>(org.w3c.dom.Document,java.lang.String,org.w3c.dom.NodeList)>($r2, r3, r4);

        r7 = $r0;

        specialinvoke r1.<org.apache.xml.security.transforms.Transforms: void addTransform(org.apache.xml.security.transforms.Transform)>(r7);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r8 = $r5;

        $r6 = new org.apache.xml.security.transforms.TransformationException;

        specialinvoke $r6.<org.apache.xml.security.transforms.TransformationException: void <init>(java.lang.Exception)>(r8);

        throw $r6;

     label4:
        return;

        catch org.apache.xml.security.transforms.InvalidTransformException from label1 to label2 with label3;
    }

    private void addTransform(org.apache.xml.security.transforms.Transform)
    {
        org.apache.xml.security.transforms.Transform r0;
        org.slf4j.Logger $r1;
        java.lang.String $r2, varReplacer4948;
        org.w3c.dom.Element r3;
        org.apache.xml.security.transforms.Transforms r4;

        nop;

        r4 := @this: org.apache.xml.security.transforms.Transforms;

        r0 := @parameter0: org.apache.xml.security.transforms.Transform;

        $r1 = <org.apache.xml.security.transforms.Transforms: org.slf4j.Logger LOG>;

        $r2 = virtualinvoke r0.<org.apache.xml.security.transforms.Transform: java.lang.String getURI()>();

        varReplacer4948 = "Transforms.addTransform({})";

        interfaceinvoke $r1.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>(varReplacer4948, $r2);

        r3 = virtualinvoke r0.<org.apache.xml.security.transforms.Transform: org.w3c.dom.Element getElement()>();

        virtualinvoke r4.<org.apache.xml.security.transforms.Transforms: void appendSelf(org.w3c.dom.Node)>(r3);

        virtualinvoke r4.<org.apache.xml.security.transforms.Transforms: void addReturnToSelf()>();

        return;
    }

    public org.apache.xml.security.signature.XMLSignatureInput performTransforms(org.apache.xml.security.signature.XMLSignatureInput) throws org.apache.xml.security.transforms.TransformationException
    {
        org.apache.xml.security.transforms.Transforms r0;
        org.apache.xml.security.signature.XMLSignatureInput r1, $r2;
        null_type varReplacer4949;

        nop;

        r0 := @this: org.apache.xml.security.transforms.Transforms;

        r1 := @parameter0: org.apache.xml.security.signature.XMLSignatureInput;

        varReplacer4949 = null;

        $r2 = virtualinvoke r0.<org.apache.xml.security.transforms.Transforms: org.apache.xml.security.signature.XMLSignatureInput performTransforms(org.apache.xml.security.signature.XMLSignatureInput,java.io.OutputStream)>(r1, varReplacer4949);

        return $r2;
    }

    public org.apache.xml.security.signature.XMLSignatureInput performTransforms(org.apache.xml.security.signature.XMLSignatureInput, java.io.OutputStream) throws org.apache.xml.security.transforms.TransformationException
    {
        org.apache.xml.security.transforms.Transforms r0;
        int $i0, i1, i2;
        org.slf4j.Logger $r1, $r7;
        java.lang.Integer $r2, $r8;
        java.lang.String $r3, $r9, varReplacer4950, varReplacer4951;
        java.io.OutputStream r4;
        org.apache.xml.security.transforms.Transform r6, r17;
        org.apache.xml.security.c14n.InvalidCanonicalizerException $r10, r20;
        org.apache.xml.security.c14n.CanonicalizationException $r12, r19;
        java.lang.Throwable $r14, r18;
        org.apache.xml.security.signature.XMLSignatureInput r16;
        org.apache.xml.security.transforms.TransformationException $r21, $r22, $r23;
        java.lang.Exception $r24;

        nop;

        r0 := @this: org.apache.xml.security.transforms.Transforms;

        r16 := @parameter0: org.apache.xml.security.signature.XMLSignatureInput;

        r4 := @parameter1: java.io.OutputStream;

     label1:
        $i0 = virtualinvoke r0.<org.apache.xml.security.transforms.Transforms: int getLength()>();

        i1 = $i0 - 1;

        i2 = 0;

     label2:
        if i2 >= i1 goto label3;

        r6 = virtualinvoke r0.<org.apache.xml.security.transforms.Transforms: org.apache.xml.security.transforms.Transform item(int)>(i2);

        $r7 = <org.apache.xml.security.transforms.Transforms: org.slf4j.Logger LOG>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r9 = virtualinvoke r6.<org.apache.xml.security.transforms.Transform: java.lang.String getURI()>();

        varReplacer4950 = "Perform the ({})th {} transform";

        interfaceinvoke $r7.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>(varReplacer4950, $r8, $r9);

        specialinvoke r0.<org.apache.xml.security.transforms.Transforms: void checkSecureValidation(org.apache.xml.security.transforms.Transform)>(r6);

        r16 = virtualinvoke r6.<org.apache.xml.security.transforms.Transform: org.apache.xml.security.signature.XMLSignatureInput performTransform(org.apache.xml.security.signature.XMLSignatureInput)>(r16);

        i2 = i2 + 1;

        goto label2;

     label3:
        if i1 < 0 goto label4;

        r17 = virtualinvoke r0.<org.apache.xml.security.transforms.Transforms: org.apache.xml.security.transforms.Transform item(int)>(i1);

        $r1 = <org.apache.xml.security.transforms.Transforms: org.slf4j.Logger LOG>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r3 = virtualinvoke r17.<org.apache.xml.security.transforms.Transform: java.lang.String getURI()>();

        varReplacer4951 = "Perform the ({})th {} transform";

        interfaceinvoke $r1.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>(varReplacer4951, $r2, $r3);

        specialinvoke r0.<org.apache.xml.security.transforms.Transforms: void checkSecureValidation(org.apache.xml.security.transforms.Transform)>(r17);

        r16 = virtualinvoke r17.<org.apache.xml.security.transforms.Transform: org.apache.xml.security.signature.XMLSignatureInput performTransform(org.apache.xml.security.signature.XMLSignatureInput,java.io.OutputStream)>(r16, r4);

     label4:
        return r16;

     label5:
        $r14 := @caughtexception;

        r18 = $r14;

        $r21 = new org.apache.xml.security.transforms.TransformationException;

        $r24 = (java.lang.Exception) r18;

        specialinvoke $r21.<org.apache.xml.security.transforms.TransformationException: void <init>(java.lang.Exception)>($r24);

        throw $r21;

     label6:
        $r12 := @caughtexception;

        r19 = $r12;

        $r22 = new org.apache.xml.security.transforms.TransformationException;

        specialinvoke $r22.<org.apache.xml.security.transforms.TransformationException: void <init>(java.lang.Exception)>(r19);

        throw $r22;

     label7:
        $r10 := @caughtexception;

        r20 = $r10;

        $r23 = new org.apache.xml.security.transforms.TransformationException;

        specialinvoke $r23.<org.apache.xml.security.transforms.TransformationException: void <init>(java.lang.Exception)>(r20);

        throw $r23;

        catch java.io.IOException from label1 to label4 with label5;
        catch org.apache.xml.security.c14n.CanonicalizationException from label1 to label4 with label6;
        catch org.apache.xml.security.c14n.InvalidCanonicalizerException from label1 to label4 with label7;
    }

    private void checkSecureValidation(org.apache.xml.security.transforms.Transform) throws org.apache.xml.security.transforms.TransformationException
    {
        org.apache.xml.security.transforms.Transform r0;
        java.lang.String r1, $r3, varReplacer4952;
        org.apache.xml.security.transforms.Transforms r2;
        boolean $z0, $z1, $z2;
        java.lang.Object[] $r4, r5;
        org.apache.xml.security.transforms.TransformationException $r6;

        nop;

        r2 := @this: org.apache.xml.security.transforms.Transforms;

        r0 := @parameter0: org.apache.xml.security.transforms.Transform;

        r1 = virtualinvoke r0.<org.apache.xml.security.transforms.Transform: java.lang.String getURI()>();

        $z0 = r2.<org.apache.xml.security.transforms.Transforms: boolean secureValidation>;

        if $z0 == 0 goto label1;

        $r3 = "http://www.w3.org/TR/1999/REC-xslt-19991116";

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z2 == 0 goto label1;

        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = r1;

        r5 = $r4;

        $r6 = new org.apache.xml.security.transforms.TransformationException;

        varReplacer4952 = "signature.Transform.ForbiddenTransform";

        specialinvoke $r6.<org.apache.xml.security.transforms.TransformationException: void <init>(java.lang.String,java.lang.Object[])>(varReplacer4952, r5);

        throw $r6;

     label1:
        $z1 = r2.<org.apache.xml.security.transforms.Transforms: boolean secureValidation>;

        virtualinvoke r0.<org.apache.xml.security.transforms.Transform: void setSecureValidation(boolean)>($z1);

        return;
    }

    public int getLength()
    {
        org.apache.xml.security.transforms.Transforms r0;
        org.w3c.dom.Element[] $r1;
        int $i0;

        nop;

        r0 := @this: org.apache.xml.security.transforms.Transforms;

        specialinvoke r0.<org.apache.xml.security.transforms.Transforms: void initTransforms()>();

        $r1 = r0.<org.apache.xml.security.transforms.Transforms: org.w3c.dom.Element[] transforms>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public org.apache.xml.security.transforms.Transform item(int) throws org.apache.xml.security.transforms.TransformationException
    {
        org.apache.xml.security.transforms.Transforms r0;
        org.apache.xml.security.transforms.Transform $r1;
        int i0;
        org.w3c.dom.Element[] $r2;
        java.lang.String $r3;
        org.w3c.dom.Element $r4;
        org.apache.xml.security.exceptions.XMLSecurityException $r5, r6;
        org.apache.xml.security.transforms.TransformationException $r7;

        nop;

        r0 := @this: org.apache.xml.security.transforms.Transforms;

        i0 := @parameter0: int;

     label1:
        specialinvoke r0.<org.apache.xml.security.transforms.Transforms: void initTransforms()>();

        $r1 = new org.apache.xml.security.transforms.Transform;

        $r2 = r0.<org.apache.xml.security.transforms.Transforms: org.w3c.dom.Element[] transforms>;

        $r4 = $r2[i0];

        $r3 = r0.<org.apache.xml.security.transforms.Transforms: java.lang.String baseURI>;

        specialinvoke $r1.<org.apache.xml.security.transforms.Transform: void <init>(org.w3c.dom.Element,java.lang.String)>($r4, $r3);

     label2:
        return $r1;

     label3:
        $r5 := @caughtexception;

        r6 = $r5;

        $r7 = new org.apache.xml.security.transforms.TransformationException;

        specialinvoke $r7.<org.apache.xml.security.transforms.TransformationException: void <init>(java.lang.Exception)>(r6);

        throw $r7;

        catch org.apache.xml.security.exceptions.XMLSecurityException from label1 to label2 with label3;
    }

    private void initTransforms()
    {
        org.apache.xml.security.transforms.Transforms r0;
        org.w3c.dom.Element[] $r1, $r3;
        org.w3c.dom.Node $r2;
        java.lang.String varReplacer4953;

        nop;

        r0 := @this: org.apache.xml.security.transforms.Transforms;

        $r1 = r0.<org.apache.xml.security.transforms.Transforms: org.w3c.dom.Element[] transforms>;

        if $r1 != null goto label1;

        $r2 = virtualinvoke r0.<org.apache.xml.security.transforms.Transforms: org.w3c.dom.Node getFirstChild()>();

        varReplacer4953 = "Transform";

        $r3 = staticinvoke <org.apache.xml.security.utils.XMLUtils: org.w3c.dom.Element[] selectDsNodes(org.w3c.dom.Node,java.lang.String)>($r2, varReplacer4953);

        r0.<org.apache.xml.security.transforms.Transforms: org.w3c.dom.Element[] transforms> = $r3;

     label1:
        return;
    }

    public java.lang.String getBaseLocalName()
    {
        org.apache.xml.security.transforms.Transforms r0;
        java.lang.String varReplacer4954;

        nop;

        r0 := @this: org.apache.xml.security.transforms.Transforms;

        varReplacer4954 = "Transforms";

        return varReplacer4954;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        nop;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/xml/security/transforms/Transforms;");

        <org.apache.xml.security.transforms.Transforms: org.slf4j.Logger LOG> = $r0;

        return;
    }
}
