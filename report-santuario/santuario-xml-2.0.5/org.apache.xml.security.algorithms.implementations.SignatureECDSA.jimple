public abstract class org.apache.xml.security.algorithms.implementations.SignatureECDSA extends org.apache.xml.security.algorithms.SignatureAlgorithmSpi
{
    private static org.slf4j.Logger log;
    private java.security.Signature signatureAlgorithm;

    public abstract java.lang.String engineGetURI();

    public static byte[] convertASN1toXMLDSIG(byte[]) throws java.io.IOException
    {
        byte[] r0, r3;
        int $i0, $i4, $i6, $i7, $i8, i10, $i11, $i13, $i14, $i15, $i16, $i18, $i19, $i20, $i21, $i23, $i24, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i44, $i45, $i46, i49, i50;
        java.io.IOException $r1, $r2, $r4;
        byte $b1, $b2, $b3, b5, b9, $b12, $b17, $b22, $b25, $b43, $b47, b48;
        java.lang.String varReplacer1573, varReplacer1574, varReplacer1575;

        nop;

        r0 := @parameter0: byte[];

        $i0 = lengthof r0;

        if $i0 < 8 goto label01;

        $b1 = r0[0];

        if $b1 == 48 goto label02;

     label01:
        $r1 = new java.io.IOException;

        varReplacer1575 = "Invalid ASN.1 format of ECDSA signature";

        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>(varReplacer1575);

        throw $r1;

     label02:
        $b2 = r0[1];

        if $b2 <= 0 goto label03;

        b48 = 2;

        goto label05;

     label03:
        $b3 = r0[1];

        if $b3 != -127 goto label04;

        b48 = 3;

        goto label05;

     label04:
        $r2 = new java.io.IOException;

        varReplacer1574 = "Invalid ASN.1 format of ECDSA signature";

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>(varReplacer1574);

        throw $r2;

     label05:
        $i4 = b48 + 1;

        b5 = r0[$i4];

        i49 = b5;

     label06:
        if i49 <= 0 goto label07;

        $i44 = b48 + 2;

        $i45 = $i44 + b5;

        $i46 = $i45 - i49;

        $b47 = r0[$i46];

        if $b47 != 0 goto label07;

        i49 = i49 + -1;

        goto label06;

     label07:
        $i6 = b48 + 2;

        $i7 = $i6 + b5;

        $i8 = $i7 + 1;

        b9 = r0[$i8];

        i50 = b9;

     label08:
        if i50 <= 0 goto label09;

        $i38 = b48 + 2;

        $i39 = $i38 + b5;

        $i40 = $i39 + 2;

        $i41 = $i40 + b9;

        $i42 = $i41 - i50;

        $b43 = r0[$i42];

        if $b43 != 0 goto label09;

        i50 = i50 + -1;

        goto label08;

     label09:
        i10 = staticinvoke <java.lang.Math: int max(int,int)>(i49, i50);

        $i11 = b48 - 1;

        $b12 = r0[$i11];

        $i15 = $b12 & 255;

        $i13 = lengthof r0;

        $i14 = $i13 - b48;

        if $i15 != $i14 goto label10;

        $i16 = b48 - 1;

        $b17 = r0[$i16];

        $i21 = $b17 & 255;

        $i18 = 2 + b5;

        $i19 = $i18 + 2;

        $i20 = $i19 + b9;

        if $i21 != $i20 goto label10;

        $b22 = r0[b48];

        if $b22 != 2 goto label10;

        $i23 = b48 + 2;

        $i24 = $i23 + b5;

        $b25 = r0[$i24];

        if $b25 == 2 goto label11;

     label10:
        $r4 = new java.io.IOException;

        varReplacer1573 = "Invalid ASN.1 format of ECDSA signature";

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>(varReplacer1573);

        throw $r4;

     label11:
        $i26 = 2 * i10;

        r3 = newarray (byte)[$i26];

        $i27 = b48 + 2;

        $i28 = $i27 + b5;

        $i30 = $i28 - i49;

        $i29 = i10 - i49;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, $i30, r3, $i29, i49);

        $i31 = b48 + 2;

        $i32 = $i31 + b5;

        $i33 = $i32 + 2;

        $i34 = $i33 + b9;

        $i37 = $i34 - i50;

        $i35 = 2 * i10;

        $i36 = $i35 - i50;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, $i37, r3, $i36, i50);

        return r3;
    }

    public static byte[] convertXMLDSIGtoASN1(byte[]) throws java.io.IOException
    {
        byte[] r0, r2;
        int $i0, i1, $i2, $i4, $i5, $i7, $i8, i9, $i10, $i11, $i12, $i15, $i16, $i17, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i29, i31, i32, i33, i34, i36, i37, i38, i39, i40, i41;
        byte $b3, $b6, $b13, $b14, $b18, $b28, $b30, b35;
        java.io.IOException $r1;
        java.lang.String varReplacer1576;

        nop;

        r0 := @parameter0: byte[];

        $i0 = lengthof r0;

        i1 = $i0 / 2;

        i31 = i1;

     label1:
        if i31 <= 0 goto label2;

        $i29 = i1 - i31;

        $b30 = r0[$i29];

        if $b30 != 0 goto label2;

        i31 = i31 + -1;

        goto label1;

     label2:
        i32 = i31;

        $i2 = i1 - i31;

        $b3 = r0[$i2];

        if $b3 >= 0 goto label3;

        i32 = i32 + 1;

     label3:
        i33 = i1;

     label4:
        if i33 <= 0 goto label5;

        $i26 = 2 * i1;

        $i27 = $i26 - i33;

        $b28 = r0[$i27];

        if $b28 != 0 goto label5;

        i33 = i33 + -1;

        goto label4;

     label5:
        i34 = i33;

        $i4 = 2 * i1;

        $i5 = $i4 - i33;

        $b6 = r0[$i5];

        if $b6 >= 0 goto label6;

        i34 = i34 + 1;

     label6:
        $i7 = 2 + i32;

        $i8 = $i7 + 2;

        i9 = $i8 + i34;

        if i9 <= 255 goto label7;

        $r1 = new java.io.IOException;

        varReplacer1576 = "Invalid XMLDSIG format of ECDSA signature";

        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>(varReplacer1576);

        throw $r1;

     label7:
        if i9 >= 128 goto label8;

        $i23 = 4 + i32;

        $i24 = $i23 + 2;

        $i25 = $i24 + i34;

        r2 = newarray (byte)[$i25];

        b35 = 1;

        goto label9;

     label8:
        $i10 = 5 + i32;

        $i11 = $i10 + 2;

        $i12 = $i11 + i34;

        r2 = newarray (byte)[$i12];

        r2[1] = -127;

        b35 = 2;

     label9:
        r2[0] = 48;

        i36 = b35 + 1;

        $b13 = (byte) i9;

        r2[b35] = $b13;

        i37 = i36 + 1;

        r2[i36] = 2;

        i38 = i37 + 1;

        $b14 = (byte) i32;

        r2[i37] = $b14;

        $i17 = i1 - i31;

        $i15 = i38 + i32;

        $i16 = $i15 - i31;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, $i17, r2, $i16, i31);

        i39 = i38 + i32;

        i40 = i39 + 1;

        r2[i39] = 2;

        i41 = i40 + 1;

        $b18 = (byte) i34;

        r2[i40] = $b18;

        $i19 = 2 * i1;

        $i22 = $i19 - i33;

        $i20 = i41 + i34;

        $i21 = $i20 - i33;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, $i22, r2, $i21, i33);

        return r2;
    }

    public void <init>() throws org.apache.xml.security.signature.XMLSignatureException
    {
        org.apache.xml.security.algorithms.implementations.SignatureECDSA r0;
        java.lang.String $r1, r2, r4, $r11, $r14, $r18, varReplacer1577, varReplacer1579, varReplacer1580;
        org.slf4j.Logger $r3, $r8;
        boolean $z0;
        java.security.Signature $r5, $r6;
        java.lang.StringBuilder $r9, $r10, $r24;
        java.lang.Throwable $r12, $r16, r20, r22;
        java.lang.Object[] $r13, $r17, r21, r23;
        org.apache.xml.security.signature.XMLSignatureException $r25, $r26;
        java.security.NoSuchAlgorithmException $r27;
        java.security.NoSuchProviderException $r28;
        null_type varReplacer1578;

        nop;

        r0 := @this: org.apache.xml.security.algorithms.implementations.SignatureECDSA;

        specialinvoke r0.<org.apache.xml.security.algorithms.SignatureAlgorithmSpi: void <init>()>();

        varReplacer1578 = null;

        r0.<org.apache.xml.security.algorithms.implementations.SignatureECDSA: java.security.Signature signatureAlgorithm> = varReplacer1578;

        $r1 = virtualinvoke r0.<org.apache.xml.security.algorithms.implementations.SignatureECDSA: java.lang.String engineGetURI()>();

        r2 = staticinvoke <org.apache.xml.security.algorithms.JCEMapper: java.lang.String translateURItoJCEID(java.lang.String)>($r1);

        $r3 = <org.apache.xml.security.algorithms.implementations.SignatureECDSA: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r3.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r8 = <org.apache.xml.security.algorithms.implementations.SignatureECDSA: org.slf4j.Logger log>;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        varReplacer1577 = "Created SignatureECDSA using ";

        $r9 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1577);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r8.<org.slf4j.Logger: void debug(java.lang.String)>($r11);

     label1:
        r4 = staticinvoke <org.apache.xml.security.algorithms.JCEMapper: java.lang.String getProviderId()>();

     label2:
        if r4 != null goto label3;

        $r6 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(r2);

        r0.<org.apache.xml.security.algorithms.implementations.SignatureECDSA: java.security.Signature signatureAlgorithm> = $r6;

        goto label4;

     label3:
        $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>(r2, r4);

        r0.<org.apache.xml.security.algorithms.implementations.SignatureECDSA: java.security.Signature signatureAlgorithm> = $r5;

     label4:
        goto label7;

     label5:
        $r16 := @caughtexception;

        r20 = $r16;

        $r17 = newarray (java.lang.Object)[2];

        $r17[0] = r2;

        $r27 = (java.security.NoSuchAlgorithmException) r20;

        $r18 = virtualinvoke $r27.<java.security.NoSuchAlgorithmException: java.lang.String getLocalizedMessage()>();

        $r17[1] = $r18;

        r21 = $r17;

        $r25 = new org.apache.xml.security.signature.XMLSignatureException;

        varReplacer1579 = "algorithms.NoSuchAlgorithm";

        specialinvoke $r25.<org.apache.xml.security.signature.XMLSignatureException: void <init>(java.lang.String,java.lang.Object[])>(varReplacer1579, r21);

        throw $r25;

     label6:
        $r12 := @caughtexception;

        r22 = $r12;

        $r13 = newarray (java.lang.Object)[2];

        $r13[0] = r2;

        $r28 = (java.security.NoSuchProviderException) r22;

        $r14 = virtualinvoke $r28.<java.security.NoSuchProviderException: java.lang.String getLocalizedMessage()>();

        $r13[1] = $r14;

        r23 = $r13;

        $r26 = new org.apache.xml.security.signature.XMLSignatureException;

        varReplacer1580 = "algorithms.NoSuchAlgorithm";

        specialinvoke $r26.<org.apache.xml.security.signature.XMLSignatureException: void <init>(java.lang.String,java.lang.Object[])>(varReplacer1580, r23);

        throw $r26;

     label7:
        return;

        catch java.security.NoSuchAlgorithmException from label2 to label4 with label5;
        catch java.security.NoSuchProviderException from label2 to label4 with label6;
    }

    protected void engineSetParameter(java.security.spec.AlgorithmParameterSpec) throws org.apache.xml.security.signature.XMLSignatureException
    {
        org.apache.xml.security.algorithms.implementations.SignatureECDSA r0;
        java.security.spec.AlgorithmParameterSpec r1;
        java.security.Signature $r2;
        java.lang.Throwable $r3, r4;
        org.apache.xml.security.signature.XMLSignatureException $r6;
        java.lang.Exception $r7;

        nop;

        r0 := @this: org.apache.xml.security.algorithms.implementations.SignatureECDSA;

        r1 := @parameter0: java.security.spec.AlgorithmParameterSpec;

     label1:
        $r2 = r0.<org.apache.xml.security.algorithms.implementations.SignatureECDSA: java.security.Signature signatureAlgorithm>;

        virtualinvoke $r2.<java.security.Signature: void setParameter(java.security.spec.AlgorithmParameterSpec)>(r1);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r4 = $r3;

        $r6 = new org.apache.xml.security.signature.XMLSignatureException;

        $r7 = (java.lang.Exception) r4;

        specialinvoke $r6.<org.apache.xml.security.signature.XMLSignatureException: void <init>(java.lang.Exception)>($r7);

        throw $r6;

     label4:
        return;

        catch java.security.InvalidAlgorithmParameterException from label1 to label2 with label3;
    }

    protected boolean engineVerify(byte[]) throws org.apache.xml.security.signature.XMLSignatureException
    {
        byte[] r0, r14;
        org.slf4j.Logger $r1, $r5;
        boolean $z0, $z1;
        org.apache.xml.security.algorithms.implementations.SignatureECDSA r2;
        java.security.Signature $r3;
        java.lang.StringBuilder $r6, $r8, $r17;
        java.lang.String $r7, $r9, varReplacer1581;
        java.lang.Throwable $r10, $r12, r15, r16;
        org.apache.xml.security.signature.XMLSignatureException $r18, $r19;
        java.lang.Exception $r20, $r21;

        nop;

        r2 := @this: org.apache.xml.security.algorithms.implementations.SignatureECDSA;

        r0 := @parameter0: byte[];

     label1:
        r14 = staticinvoke <org.apache.xml.security.algorithms.implementations.SignatureECDSA: byte[] convertXMLDSIGtoASN1(byte[])>(r0);

        $r1 = <org.apache.xml.security.algorithms.implementations.SignatureECDSA: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r1.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label2;

        $r5 = <org.apache.xml.security.algorithms.implementations.SignatureECDSA: org.slf4j.Logger log>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        varReplacer1581 = "Called ECDSA.verify() on ";

        $r6 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1581);

        $r7 = staticinvoke <org.apache.xml.security.utils.Base64: java.lang.String encode(byte[])>(r0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r5.<org.slf4j.Logger: void debug(java.lang.String)>($r9);

     label2:
        $r3 = r2.<org.apache.xml.security.algorithms.implementations.SignatureECDSA: java.security.Signature signatureAlgorithm>;

        $z1 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>(r14);

     label3:
        return $z1;

     label4:
        $r12 := @caughtexception;

        r15 = $r12;

        $r18 = new org.apache.xml.security.signature.XMLSignatureException;

        $r20 = (java.lang.Exception) r15;

        specialinvoke $r18.<org.apache.xml.security.signature.XMLSignatureException: void <init>(java.lang.Exception)>($r20);

        throw $r18;

     label5:
        $r10 := @caughtexception;

        r16 = $r10;

        $r19 = new org.apache.xml.security.signature.XMLSignatureException;

        $r21 = (java.lang.Exception) r16;

        specialinvoke $r19.<org.apache.xml.security.signature.XMLSignatureException: void <init>(java.lang.Exception)>($r21);

        throw $r19;

        catch java.security.SignatureException from label1 to label3 with label4;
        catch java.io.IOException from label1 to label3 with label5;
    }

    protected void engineInitVerify(java.security.Key) throws org.apache.xml.security.signature.XMLSignatureException
    {
        java.security.Key r0;
        boolean $z0, $z1;
        org.apache.xml.security.algorithms.implementations.SignatureECDSA r1;
        java.security.PublicKey $r2;
        java.security.Signature $r3, $r16, $r18, r23;
        java.lang.Class $r4, $r7;
        java.lang.Object[] $r5, r21;
        java.lang.Exception $r8, r24, $r29;
        org.slf4j.Logger $r9, $r11;
        java.lang.StringBuilder $r12, $r13, $r27;
        java.lang.String $r14, $r17, r19, r20, varReplacer1582, varReplacer1583;
        java.lang.Throwable $r15, r22;
        org.apache.xml.security.signature.XMLSignatureException $r26, $r28;

        nop;

        r1 := @this: org.apache.xml.security.algorithms.implementations.SignatureECDSA;

        r0 := @parameter0: java.security.Key;

        $z0 = r0 instanceof java.security.PublicKey;

        if $z0 != 0 goto label02;

        r19 = null;

        if r0 == null goto label01;

        $r7 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        r19 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

     label01:
        $r4 = class "Ljava/security/PublicKey;";

        r20 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r5 = newarray (java.lang.Object)[2];

        $r5[0] = r19;

        $r5[1] = r20;

        r21 = $r5;

        $r26 = new org.apache.xml.security.signature.XMLSignatureException;

        varReplacer1582 = "algorithms.WrongKeyForThisOperation";

        specialinvoke $r26.<org.apache.xml.security.signature.XMLSignatureException: void <init>(java.lang.String,java.lang.Object[])>(varReplacer1582, r21);

        throw $r26;

     label02:
        $r3 = r1.<org.apache.xml.security.algorithms.implementations.SignatureECDSA: java.security.Signature signatureAlgorithm>;

        $r2 = (java.security.PublicKey) r0;

        virtualinvoke $r3.<java.security.Signature: void initVerify(java.security.PublicKey)>($r2);

     label03:
        goto label10;

     label04:
        $r15 := @caughtexception;

        r22 = $r15;

        r23 = r1.<org.apache.xml.security.algorithms.implementations.SignatureECDSA: java.security.Signature signatureAlgorithm>;

     label05:
        $r16 = r1.<org.apache.xml.security.algorithms.implementations.SignatureECDSA: java.security.Signature signatureAlgorithm>;

        $r17 = virtualinvoke $r16.<java.security.Signature: java.lang.String getAlgorithm()>();

        $r18 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r17);

        r1.<org.apache.xml.security.algorithms.implementations.SignatureECDSA: java.security.Signature signatureAlgorithm> = $r18;

     label06:
        goto label09;

     label07:
        $r8 := @caughtexception;

        r24 = $r8;

        $r9 = <org.apache.xml.security.algorithms.implementations.SignatureECDSA: org.slf4j.Logger log>;

        $z1 = interfaceinvoke $r9.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z1 == 0 goto label08;

        $r11 = <org.apache.xml.security.algorithms.implementations.SignatureECDSA: org.slf4j.Logger log>;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        varReplacer1583 = "Exception when reinstantiating Signature:";

        $r12 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1583);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r24);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r11.<org.slf4j.Logger: void debug(java.lang.String)>($r14);

     label08:
        r1.<org.apache.xml.security.algorithms.implementations.SignatureECDSA: java.security.Signature signatureAlgorithm> = r23;

     label09:
        $r28 = new org.apache.xml.security.signature.XMLSignatureException;

        $r29 = (java.lang.Exception) r22;

        specialinvoke $r28.<org.apache.xml.security.signature.XMLSignatureException: void <init>(java.lang.Exception)>($r29);

        throw $r28;

     label10:
        return;

        catch java.security.InvalidKeyException from label02 to label03 with label04;
        catch java.lang.Exception from label05 to label06 with label07;
    }

    protected byte[] engineSign() throws org.apache.xml.security.signature.XMLSignatureException
    {
        org.apache.xml.security.algorithms.implementations.SignatureECDSA r0;
        java.security.Signature $r1;
        byte[] $r2, r7;
        java.lang.Throwable $r3, $r5, r8, r9;
        org.apache.xml.security.signature.XMLSignatureException $r10, $r11;
        java.lang.Exception $r12, $r13;

        nop;

        r0 := @this: org.apache.xml.security.algorithms.implementations.SignatureECDSA;

     label1:
        $r1 = r0.<org.apache.xml.security.algorithms.implementations.SignatureECDSA: java.security.Signature signatureAlgorithm>;

        r7 = virtualinvoke $r1.<java.security.Signature: byte[] sign()>();

        $r2 = staticinvoke <org.apache.xml.security.algorithms.implementations.SignatureECDSA: byte[] convertASN1toXMLDSIG(byte[])>(r7);

     label2:
        return $r2;

     label3:
        $r5 := @caughtexception;

        r8 = $r5;

        $r10 = new org.apache.xml.security.signature.XMLSignatureException;

        $r12 = (java.lang.Exception) r8;

        specialinvoke $r10.<org.apache.xml.security.signature.XMLSignatureException: void <init>(java.lang.Exception)>($r12);

        throw $r10;

     label4:
        $r3 := @caughtexception;

        r9 = $r3;

        $r11 = new org.apache.xml.security.signature.XMLSignatureException;

        $r13 = (java.lang.Exception) r9;

        specialinvoke $r11.<org.apache.xml.security.signature.XMLSignatureException: void <init>(java.lang.Exception)>($r13);

        throw $r11;

        catch java.security.SignatureException from label1 to label2 with label3;
        catch java.io.IOException from label1 to label2 with label4;
    }

    protected void engineInitSign(java.security.Key, java.security.SecureRandom) throws org.apache.xml.security.signature.XMLSignatureException
    {
        java.security.Key r0;
        boolean $z0;
        java.security.SecureRandom r1;
        org.apache.xml.security.algorithms.implementations.SignatureECDSA r2;
        java.security.PrivateKey $r3, $r5;
        java.security.Signature $r4, $r6;
        java.lang.Class $r7, $r12;
        java.lang.String r8, r15, varReplacer1584;
        java.lang.Object[] $r9, r10;
        java.lang.Throwable $r13, r16;
        org.apache.xml.security.signature.XMLSignatureException $r17, $r18;
        java.lang.Exception $r19;

        nop;

        r2 := @this: org.apache.xml.security.algorithms.implementations.SignatureECDSA;

        r0 := @parameter0: java.security.Key;

        r1 := @parameter1: java.security.SecureRandom;

        $z0 = r0 instanceof java.security.PrivateKey;

        if $z0 != 0 goto label2;

        r15 = null;

        if r0 == null goto label1;

        $r12 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        r15 = virtualinvoke $r12.<java.lang.Class: java.lang.String getName()>();

     label1:
        $r7 = class "Ljava/security/PrivateKey;";

        r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        $r9 = newarray (java.lang.Object)[2];

        $r9[0] = r15;

        $r9[1] = r8;

        r10 = $r9;

        $r17 = new org.apache.xml.security.signature.XMLSignatureException;

        varReplacer1584 = "algorithms.WrongKeyForThisOperation";

        specialinvoke $r17.<org.apache.xml.security.signature.XMLSignatureException: void <init>(java.lang.String,java.lang.Object[])>(varReplacer1584, r10);

        throw $r17;

     label2:
        if r1 != null goto label3;

        $r6 = r2.<org.apache.xml.security.algorithms.implementations.SignatureECDSA: java.security.Signature signatureAlgorithm>;

        $r5 = (java.security.PrivateKey) r0;

        virtualinvoke $r6.<java.security.Signature: void initSign(java.security.PrivateKey)>($r5);

        goto label4;

     label3:
        $r4 = r2.<org.apache.xml.security.algorithms.implementations.SignatureECDSA: java.security.Signature signatureAlgorithm>;

        $r3 = (java.security.PrivateKey) r0;

        virtualinvoke $r4.<java.security.Signature: void initSign(java.security.PrivateKey,java.security.SecureRandom)>($r3, r1);

     label4:
        goto label6;

     label5:
        $r13 := @caughtexception;

        r16 = $r13;

        $r18 = new org.apache.xml.security.signature.XMLSignatureException;

        $r19 = (java.lang.Exception) r16;

        specialinvoke $r18.<org.apache.xml.security.signature.XMLSignatureException: void <init>(java.lang.Exception)>($r19);

        throw $r18;

     label6:
        return;

        catch java.security.InvalidKeyException from label2 to label4 with label5;
    }

    protected void engineInitSign(java.security.Key) throws org.apache.xml.security.signature.XMLSignatureException
    {
        org.apache.xml.security.algorithms.implementations.SignatureECDSA r0;
        java.security.Key r1;
        java.security.SecureRandom $r2;

        nop;

        r0 := @this: org.apache.xml.security.algorithms.implementations.SignatureECDSA;

        r1 := @parameter0: java.security.Key;

        $r2 = (java.security.SecureRandom) null;

        virtualinvoke r0.<org.apache.xml.security.algorithms.implementations.SignatureECDSA: void engineInitSign(java.security.Key,java.security.SecureRandom)>(r1, $r2);

        return;
    }

    protected void engineUpdate(byte[]) throws org.apache.xml.security.signature.XMLSignatureException
    {
        org.apache.xml.security.algorithms.implementations.SignatureECDSA r0;
        byte[] r1;
        java.security.Signature $r2;
        java.lang.Throwable $r3, r4;
        org.apache.xml.security.signature.XMLSignatureException $r6;
        java.lang.Exception $r7;

        nop;

        r0 := @this: org.apache.xml.security.algorithms.implementations.SignatureECDSA;

        r1 := @parameter0: byte[];

     label1:
        $r2 = r0.<org.apache.xml.security.algorithms.implementations.SignatureECDSA: java.security.Signature signatureAlgorithm>;

        virtualinvoke $r2.<java.security.Signature: void update(byte[])>(r1);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r4 = $r3;

        $r6 = new org.apache.xml.security.signature.XMLSignatureException;

        $r7 = (java.lang.Exception) r4;

        specialinvoke $r6.<org.apache.xml.security.signature.XMLSignatureException: void <init>(java.lang.Exception)>($r7);

        throw $r6;

     label4:
        return;

        catch java.security.SignatureException from label1 to label2 with label3;
    }

    protected void engineUpdate(byte) throws org.apache.xml.security.signature.XMLSignatureException
    {
        org.apache.xml.security.algorithms.implementations.SignatureECDSA r0;
        byte b0;
        java.security.Signature $r1;
        java.lang.Throwable $r2, r3;
        org.apache.xml.security.signature.XMLSignatureException $r5;
        java.lang.Exception $r6;

        nop;

        r0 := @this: org.apache.xml.security.algorithms.implementations.SignatureECDSA;

        b0 := @parameter0: byte;

     label1:
        $r1 = r0.<org.apache.xml.security.algorithms.implementations.SignatureECDSA: java.security.Signature signatureAlgorithm>;

        virtualinvoke $r1.<java.security.Signature: void update(byte)>(b0);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        r3 = $r2;

        $r5 = new org.apache.xml.security.signature.XMLSignatureException;

        $r6 = (java.lang.Exception) r3;

        specialinvoke $r5.<org.apache.xml.security.signature.XMLSignatureException: void <init>(java.lang.Exception)>($r6);

        throw $r5;

     label4:
        return;

        catch java.security.SignatureException from label1 to label2 with label3;
    }

    protected void engineUpdate(byte[], int, int) throws org.apache.xml.security.signature.XMLSignatureException
    {
        org.apache.xml.security.algorithms.implementations.SignatureECDSA r0;
        byte[] r1;
        int i0, i1;
        java.security.Signature $r2;
        java.lang.Throwable $r3, r4;
        org.apache.xml.security.signature.XMLSignatureException $r6;
        java.lang.Exception $r7;

        nop;

        r0 := @this: org.apache.xml.security.algorithms.implementations.SignatureECDSA;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

     label1:
        $r2 = r0.<org.apache.xml.security.algorithms.implementations.SignatureECDSA: java.security.Signature signatureAlgorithm>;

        virtualinvoke $r2.<java.security.Signature: void update(byte[],int,int)>(r1, i0, i1);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r4 = $r3;

        $r6 = new org.apache.xml.security.signature.XMLSignatureException;

        $r7 = (java.lang.Exception) r4;

        specialinvoke $r6.<org.apache.xml.security.signature.XMLSignatureException: void <init>(java.lang.Exception)>($r7);

        throw $r6;

     label4:
        return;

        catch java.security.SignatureException from label1 to label2 with label3;
    }

    protected java.lang.String engineGetJCEAlgorithmString()
    {
        org.apache.xml.security.algorithms.implementations.SignatureECDSA r0;
        java.security.Signature $r1;
        java.lang.String $r2;

        nop;

        r0 := @this: org.apache.xml.security.algorithms.implementations.SignatureECDSA;

        $r1 = r0.<org.apache.xml.security.algorithms.implementations.SignatureECDSA: java.security.Signature signatureAlgorithm>;

        $r2 = virtualinvoke $r1.<java.security.Signature: java.lang.String getAlgorithm()>();

        return $r2;
    }

    protected java.lang.String engineGetJCEProviderName()
    {
        org.apache.xml.security.algorithms.implementations.SignatureECDSA r0;
        java.security.Signature $r1;
        java.security.Provider $r2;
        java.lang.String $r3;

        nop;

        r0 := @this: org.apache.xml.security.algorithms.implementations.SignatureECDSA;

        $r1 = r0.<org.apache.xml.security.algorithms.implementations.SignatureECDSA: java.security.Signature signatureAlgorithm>;

        $r2 = virtualinvoke $r1.<java.security.Signature: java.security.Provider getProvider()>();

        $r3 = virtualinvoke $r2.<java.security.Provider: java.lang.String getName()>();

        return $r3;
    }

    protected void engineSetHMACOutputLength(int) throws org.apache.xml.security.signature.XMLSignatureException
    {
        org.apache.xml.security.signature.XMLSignatureException $r0;
        org.apache.xml.security.algorithms.implementations.SignatureECDSA r1;
        int i0;
        java.lang.String varReplacer1585;

        nop;

        r1 := @this: org.apache.xml.security.algorithms.implementations.SignatureECDSA;

        i0 := @parameter0: int;

        $r0 = new org.apache.xml.security.signature.XMLSignatureException;

        varReplacer1585 = "algorithms.HMACOutputLengthOnlyForHMAC";

        specialinvoke $r0.<org.apache.xml.security.signature.XMLSignatureException: void <init>(java.lang.String)>(varReplacer1585);

        throw $r0;
    }

    protected void engineInitSign(java.security.Key, java.security.spec.AlgorithmParameterSpec) throws org.apache.xml.security.signature.XMLSignatureException
    {
        org.apache.xml.security.signature.XMLSignatureException $r0;
        org.apache.xml.security.algorithms.implementations.SignatureECDSA r1;
        java.security.Key r2;
        java.security.spec.AlgorithmParameterSpec r3;
        java.lang.String varReplacer1586;

        nop;

        r1 := @this: org.apache.xml.security.algorithms.implementations.SignatureECDSA;

        r2 := @parameter0: java.security.Key;

        r3 := @parameter1: java.security.spec.AlgorithmParameterSpec;

        $r0 = new org.apache.xml.security.signature.XMLSignatureException;

        varReplacer1586 = "algorithms.CannotUseAlgorithmParameterSpecOnRSA";

        specialinvoke $r0.<org.apache.xml.security.signature.XMLSignatureException: void <init>(java.lang.String)>(varReplacer1586);

        throw $r0;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        nop;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/xml/security/algorithms/implementations/SignatureECDSA;");

        <org.apache.xml.security.algorithms.implementations.SignatureECDSA: org.slf4j.Logger log> = $r0;

        return;
    }
}
